---
title: "Relative Abundances"
---

## 01. Load libraries

```{r}
#| label: loada libraries
#| message: false
#| warning: false
library(phyloseq)
library(qiime2R)
library(microbiome)
library(dplyr)
library(tibble)
library(ampvis2)
library(microbiomeutilities)
library(tidyr)
```

## 02. Prepare data

### **02.1 Create Phyloseq Object**

```{r}
#| label: phyloseq object
#| message: false
#| warning: false
ps <- qza_to_phyloseq(
  features = "data/ASV_table_filter_freq218_emc.qza",
  tree = "data/rooted-tree-iqtree.qza",
  taxonomy = "data/taxonomy.qza",
  metadata = "data/metadata2.tsv")
```

```{r}
# check
ps
```

### 02.2 Check data

```{r}
#library(microbiome)
microbiome::summarize_phyloseq(ps)
```

### 02.3 Rename mangrove system

```{r}
# Extract metadata
metadata <- as(sample_data(ps), "data.frame")

# Rename specific levels in the Mangrove system column
#library(dplyr)
metadata <- metadata %>%
  mutate(`Location` = case_when(
    Location == "El Cacahuate" ~ "Fossil Lagoon",
    Location == "La Piedad" ~ "Reforma Waterfalls",
    Location == "Dique Miguelito" ~ "Miguelito Dike",
    TRUE ~ Location))

# update sample_data in phyloseq object
sample_data(ps) <- sample_data(metadata)
```

### 02.4. Color pallets

```{r}
depth_colors <- c("0-15" = "#f5e5c4",
                 "16-30" = "#baa179",
                 "31-45" = "#a67451",
                 "50-75" = "#80673b")

loc_colors <- c("Fossil Lagoon"= "#A3D9A8",
                "Reforma Waterfalls" = "#44C17B",
                "Miguelito Dike" = "#2E8B57")
```

### 02.5 Check samples

```{r}
# Samples Plot

# Reorder samples
metadata$Location <- factor(
  metadata$Location,
  levels = c("Fossil Lagoon", "Reforma Waterfalls", 
             "Miguelito Dike"))

#plot
samples_plot <- ggplot(metadata, aes(x = Location, y = ..count..,
fill = Location)) + geom_bar(position = "dodge") +
  facet_wrap(~ Location, scales = "free_x") +
  labs(title = "Samples of the analysis", y = "Number of Samples",
       x = "Mangrove system") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 0)) +
  scale_fill_manual(values = loc_colors)

# show plot
print(samples_plot)
```

### 02.6 Get full core

```{r}
# Get full core with microbiome
full_ps_core_counts <- core(ps, 0, 0.5)

# Check
ps
full_ps_core_counts
```

### 02.7 Save object in RDS to next analysis

```{r}
saveRDS(ps, "rds/interior_mangroves/phyloseq.rds")
```

## 03. Relative abundance phyloseq objects

### 03.1 Create ampvis objects

Create full, core and Site ampvis objects

```{r}
# library(tibble)
# library(ampvis2)
# Ampvis object function
create_ampvis_object <- function(pseq) {
  # create and extract otu table
  otu_table_ampvis <- data.frame(OTU = rownames(phyloseq::otu_table(pseq)@.Data),
                                 phyloseq::otu_table(pseq)@.Data,
                                 phyloseq::tax_table(pseq)@.Data,
                                 check.names = FALSE)

  # Metadata
  meta_data_ampvis <- data.frame(phyloseq::sample_data(pseq),
                                 check.names = FALSE)

  # change index by SampleID
  meta_data_ampvis <- meta_data_ampvis %>% rownames_to_column(var = "SampleID")

  # ampvis object
  av2 <- amp_load(otu_table_ampvis, meta_data_ampvis)
  
  return(av2)
}
```

```{r}
# phyloseq objects
phyloseq_objects <-list(ps=ps, full_ps_core_counts = full_ps_core_counts)

# Apply function
ampvis_objects <- lapply(phyloseq_objects, create_ampvis_object)

ampvis_objects

```

```{r}
#subset amp obj

av2_full <- ampvis_objects$ps
av2_full_core <- ampvis_objects$full_ps_core_counts
```

### 03.2 Kingdom

```{r}
#| warning: false
av2_full$metadata$Depth <- factor(av2_full$metadata$Depths, levels = c("0-15", "16-30", "31-45", "50-75"))
ampv_heatmap_abundances_king_full <- amp_heatmap(av2_full,
            group_by = "Depth",
            facet_by =  "Location",
            plot_values = TRUE,
            tax_show = 25,
            tax_aggregate = "Kingdom",
            plot_colorscale = "log10",
             plot_values_size = 3,
            color_vector = c("deepskyblue3", "yellow3" ,"magenta3"))+
  theme(axis.text.x = element_text(angle = 0, size=9, 
                                   hjust = 0.5, vjust = 0.5),
        axis.text.y = element_text(size=12, hjust = 1),
        legend.position="right")

ampv_heatmap_abundances_king_full

# save
ggsave("Figures/interior_mangroves/RelAbundances_king.pdf", last_plot(),width = 16, height = 4.5, units = "cm" )
```

Get data

```{r}
# library(microbiome)
# library(microbiomeutilities)
# library(dplyr)

king_abundances <- taxa_summary(ps,"Kingdom")

king_abundances
```

### 03.3 Phylum full

plot

```{r}
ampv_heatmap_abundances_phylum_loc_full <- amp_heatmap(av2_full,
            group_by = "Depth",
            facet_by = "Location",
            plot_values = TRUE,
            tax_show = 30,
            showRemainingTaxa = TRUE,
            tax_aggregate = "Phylum",
            tax_add = "Kingdom",
            plot_colorscale = "log10",
            plot_values_size = 2.6,
            color_vector = c("deepskyblue3", "yellow3" ,"magenta3"))+
  theme(axis.text.x = element_text(angle = 0, size=8, 
                                   vjust = 1, hjust = 0.5),
        axis.text.y = element_text(size=9),
        legend.position="right")

ampv_heatmap_abundances_phylum_loc_full
```

\*\*Get info\*\*

```{r}
#library(ampvis2)
#heatmap
phy_ab_depth <- amp_heatmap(av2_full,
            #group_by = "Depth",
            facet_by =   c("Depth","Site","Location"),
            plot_values = FALSE,
            tax_show = 30,
            textmap = TRUE,
            tax_aggregate = "Phylum")


# library(dplyr)
# library(tidyr)
# library(tibble)

# Transform data.frame to long format
phy_ab_long <- phy_ab_depth %>%
  rownames_to_column("Phylum") %>% 
  pivot_longer(
    cols = -Phylum, 
    names_to = "Sample_Location", 
    values_to = "Abundance"
  ) %>%
  separate(Sample_Location, into = c("Sample","Depth", "Site", "Location"), sep = " ") %>%
  mutate(
    Depth = gsub("-cm", "", Depth)  # Clean depth name
  )

# mean and sd Depth and Location
phy_ab_summary_stats <- phy_ab_long %>%
  group_by(Phylum, Depth, Location) %>%
  summarise(
    mean_abundance = mean(Abundance, na.rm = TRUE),
    sd_abundance = sd(Abundance, na.rm = TRUE),
    .groups = "drop"
  )

# show
phy_ab_summary_stats

# Format table
phy_depth_table <- phy_ab_summary_stats %>%
  pivot_wider(
    names_from = Location,
    values_from = c(mean_abundance, sd_abundance),
    names_sep = "_"
  )

phy_depth_table

# save
write.table(phy_depth_table, "Tables/Phylum_depth_location_stats.tsv", row.names = FALSE, sep = "\t", quote = FALSE)
```

### 03.4 Phylum Core

```{r}
#Factor Depth_cm 
av2_full_core$metadata$Depth <- factor(av2_full_core$metadata$Depths, levels = c("0-15", "16-30", "31-45", "50-75"))

# Full all samples
ampv_heatmap_abundances_phylum_core <- amp_heatmap(av2_full_core,
            group_by = "Depth",
            facet_by = "Location",
            plot_values = TRUE,
            tax_show = 30,
            showRemainingTaxa = TRUE,
            tax_aggregate = "Phylum",
            tax_add = "Kingdom",
            plot_colorscale = "log10",
            plot_values_size = 2.6,
            color_vector = c("deepskyblue3", "yellow3" ,"magenta3"))+
  theme(axis.text.x = element_text(angle = 0, size=8, 
                                   vjust = 1, hjust = 0.5),
        axis.text.y = element_text(size=9),
        legend.position="right")

ampv_heatmap_abundances_phylum_core
```

### 03.5 Combine plots

```{r}
library(cowplot)
#Combine venn plot
title_abund_plot <- ggdraw() + draw_label("Relative Abundance", fontface = 'bold', x = 0.5, hjust = 0.5, size = 15)
ampv_all_phylum_plots <- plot_grid(title_abund_plot, ampv_heatmap_abundances_phylum_loc_full, ampv_heatmap_abundances_phylum_core, labels = c("", "A", "B"), ncol = 1, rel_heights = c(0.10, 1.2, 1.2))

ampv_all_phylum_plots
```

```{r}
#save
ggsave("Figures/interior_mangroves/Abundances_Phylum_full_and_core.pdf", ampv_all_phylum_plots, width = 18, height = 30, units = "cm")
```

## Dominants

```{r}
#psgen <- aggregate_taxa(p0,"Genus")
tax_dominant <- dominant_taxa(ps,level = "Phylum", group="Location")
head(tax_dominant$dominant_overview)
```
