{
  "hash": "24f0920b5336e88da1ef0dd54c4aaa0f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Metabolic Inference\"\n---\n\n\n\n\n\n\n\n\n# 01. Load libraries and prepare data\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load libraries\nlibrary(tibble)\nlibrary(phyloseq)\nlibrary(dplyr)\nlibrary(ANCOMBC)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\nlibrary(ComplexHeatmap)\nlibrary(circlize)\nlibrary(DT)\noptions(DT.options = list(\n  initComplete = JS(\"function(settings, json) {\",\n                    \"$(this.api().table().header()).css({'background-color':\n  '#000', 'color': '#fff'});\",\"}\")))\n```\n:::\n\n\n\n\n\n\n\n\n``` R\n#read ko data\notu_table <- read_delim(\"data/ko.txt\",\n                        delim = \"\\t\", escape_double = FALSE, trim_ws = TRUE,\n                        comment = \"#\", show_col_types = FALSE)\n\n# convert first column to row names\notu_table <- otu_table %>% column_to_rownames(\"FeatureID\")\n\n# convert otu_table to physeq\notu_table_phyloseq <- otu_table(otu_table, taxa_are_rows = TRUE)\n\nmetadata <- read_tsv(\"data/metadata.tsv\") %>% column_to_rownames(\"SampleID\")\nsample_data_phyloseq <- sample_data(metadata)\nps <- phyloseq(otu_table_phyloseq, sample_data_phyloseq)\n\ntse <- mia::convertFromPhyloseq(ps)\n\n#matrix\nassay(tse, \"counts\") <- as.matrix(assay(tse, \"counts\")@.Data)\n\n#depth_cm to factor\nstr(colData(tse)$Depth_cm)\nlevels(colData(tse)$Depth_cm)\n```\n\n``` R\n# contrast matrix\ncontrast_matrices <- list(\n  matrix(c(1, -1, 0,\n           0, 1, -1,\n           0, 0, 1),\n         nrow = 3, byrow = TRUE),\n  matrix(c(1, 0, -1,\n           0, 1, -1,\n           0, 0, 1),\n         nrow = 3, byrow = TRUE),\n  matrix(c(1, 0, 0,\n           0, 1, -1,\n           0, 0, 1),\n         nrow = 3, byrow = TRUE),\n  matrix(c(1, -1, 0,\n           0, 1, 0,\n           0, 0, 1),\n         nrow = 3, byrow = TRUE))\n\n# nodes\nnodes <- list(1, 1, 1, 1)\n```\n\n# 02. Run ANCOM-BC2\n\n``` R\noutput <- ancombc2(\n  data = tse,\n  assay_name = \"counts\",\n  tax_lev = NULL,\n  fix_formula = \"Location + Depth_cm\",\n  rand_formula = \"(1 | ID)\",\n  p_adj_method = \"holm\",\n  pseudo_sens = TRUE,\n  prv_cut = 0.10,\n  lib_cut = 1000,\n  s0_perc = 0.05,\n  group = \"Depth_cm\",\n  struc_zero = TRUE,\n  neg_lb = TRUE,\n  alpha = 0.05,\n  n_cl = 2,\n  verbose = TRUE,\n  global = TRUE,\n  pairwise = TRUE,\n  dunnet = TRUE,\n  trend = TRUE,\n  iter_control = list(tol = 1e-2, max_iter = 20, verbose = TRUE),\n  em_control = list(tol = 1e-5, max_iter = 100),\n  lme_control = lme4::lmerControl(),\n  mdfdr_control = list(fwer_ctrl_method = \"holm\", B = 100),\n  trend_control = list(\n    contrast = contrast_matrices,\n    node = nodes,\n    solver = \"ECOS\",\n    B = 100\n  )\n)\n\n# save RDS\n```\n\n# 03. Get differential data\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract results\nres_pair <- output$res_pair\n\n# Create dataframe df_fig_pair1\ndf_fig_pair1 <- res_pair %>%\n  dplyr::filter(`diff_Depth_cm16-30` == 1 |\n                  `diff_Depth_cm31-45` == 1 |\n                  `diff_Depth_cm50-75` == 1 |\n                  `diff_Depth_cm31-45_Depth_cm16-30` == 1 |\n                  `diff_Depth_cm50-75_Depth_cm16-30` == 1 |\n                  `diff_Depth_cm50-75_Depth_cm31-45` == 1) %>%\n  dplyr::mutate(lfc1 = ifelse(`diff_Depth_cm16-30` == 1, round(`lfc_Depth_cm16-30`, 2), NA),\n                lfc2 = ifelse(`diff_Depth_cm31-45` == 1, round(`lfc_Depth_cm31-45`, 2), NA),\n                lfc3 = ifelse(`diff_Depth_cm50-75` == 1, round(`lfc_Depth_cm50-75`, 2), NA),\n                lfc4 = ifelse(`diff_Depth_cm31-45_Depth_cm16-30` == 1, round(`lfc_Depth_cm31-45_Depth_cm16-30`, 2), NA),\n                lfc5 = ifelse(`diff_Depth_cm50-75_Depth_cm16-30` == 1, round(`lfc_Depth_cm50-75_Depth_cm16-30`, 2), NA),\n                lfc6 = ifelse(`diff_Depth_cm50-75_Depth_cm31-45` == 1, round(`lfc_Depth_cm50-75_Depth_cm31-45`, 2), NA)) %>%\n  tidyr::pivot_longer(cols = lfc1:lfc6, names_to = \"group\", values_to = \"value\") %>%\n  dplyr::arrange(taxon)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create dataframe fig_pair2\ndf_fig_pair2 <- res_pair %>%\n  dplyr::filter(`diff_Depth_cm16-30` == 1 |\n                  `diff_Depth_cm31-45` == 1 |\n                  `diff_Depth_cm50-75` == 1 |\n                  `diff_Depth_cm31-45_Depth_cm16-30` == 1 |\n                  `diff_Depth_cm50-75_Depth_cm16-30` == 1 |\n                  `diff_Depth_cm50-75_Depth_cm31-45` == 1) %>%\n  dplyr::mutate(lfc1 = ifelse(`passed_ss_Depth_cm16-30` == 1 & `diff_Depth_cm16-30` == 1, \"blue3\", \"black\"),\n                lfc2 = ifelse(`passed_ss_Depth_cm31-45` == 1 & `diff_Depth_cm31-45` == 1, \"blue3\", \"black\"),\n                lfc3 = ifelse(`passed_ss_Depth_cm50-75` == 1 & `diff_Depth_cm50-75` == 1, \"blue3\", \"black\"),\n                lfc4 = ifelse(`passed_ss_Depth_cm31-45_Depth_cm16-30` == 1 & `diff_Depth_cm31-45_Depth_cm16-30` == 1, \"#00CCFF\", \"black\"),\n                lfc5 = ifelse(`passed_ss_Depth_cm50-75_Depth_cm16-30` == 1 & `diff_Depth_cm50-75_Depth_cm16-30` == 1, \"#00CCFF\", \"black\"),\n                lfc6 = ifelse(`passed_ss_Depth_cm50-75_Depth_cm31-45` == 1 & `diff_Depth_cm50-75_Depth_cm31-45` == 1, \"#00CCFF\", \"black\")) %>%\n  tidyr::pivot_longer(cols = lfc1:lfc6, names_to = \"group\", values_to = \"color\") %>%\n  dplyr::arrange(taxon)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine dataframes df_fig_pair1 and df_fig_pair2\ndf_fig_pair <- df_fig_pair1 %>%\n  dplyr::left_join(df_fig_pair2, by = c(\"taxon\", \"group\"))\n\n# Rename groups\ndf_fig_pair$group <- recode(df_fig_pair$group,\n                            `lfc1` = \"16-30 vs 0-15\",\n                            `lfc2` = \"31-45 vs 0-15\",\n                            `lfc3` = \"50-75 vs 0-15\",\n                            `lfc4` = \"31-45 vs 16-30\",\n                            `lfc5` = \"50-75 vs 16-30\",\n                            `lfc6` = \"50-75 vs 31-45\")\n\ndf_fig_pair$group <- factor(df_fig_pair$group,\n                            levels = c(\"16-30 vs 0-15\",\n                                       \"31-45 vs 0-15\",\n                                       \"50-75 vs 0-15\",\n                                       \"31-45 vs 16-30\",\n                                       \"50-75 vs 16-30\",\n                                       \"50-75 vs 31-45\"))\n\n# Filter comparisons with significant values\ndf_fig_pair <- df_fig_pair %>%\n  group_by(group) %>%\n  filter(any(!is.na(value))) %>%\n  ungroup()\n```\n:::\n\n\n\n\n\n\n\n\n# 04. Merge with KO DiTing cycles info\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read data \nDiTing_cycles<-suppressMessages(read_delim(\n  \"https://raw.githubusercontent.com/xuechunxu/DiTing/master/table/KO_affilated_to_biogeochemical_cycle.tab\",\n  delim=\"\\t\") %>%\n    fill(Cycle) %>%\n     fill(Pathway) %>%\n    rename_with(~ c(\"Cycle\", \"Pathway_cycle\", \"KO\", \"Detail_cycle\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get KO description\nko_list <- KEGGREST::keggList(\"ko\") %>%\n  enframe() %>%\n  rename_with(~ c(\"KO\", \"KO_description\")) %>%\n  separate(KO_description, c(\"Genes\", \"Gene_description\"), sep=\"; \", extra=\"merge\") %>%\n  mutate(KO = str_remove_all(KO, \"ko:\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# convert to data.frame\ndf_fig_pair <- as.data.frame(df_fig_pair)\nDiTing_cycles <- as.data.frame(DiTing_cycles)\n\n\n# rename ko ids\ndf_fig_pair <- df_fig_pair %>%\n  rename_with(~ ifelse(. == \"taxon\", \"KO\", .)) %>%\n  mutate(KO = str_remove_all(KO, \"ko:\"))\n\nDiTing_cycles <- DiTing_cycles %>%\n  mutate(KO = str_remove_all(KO, \"ko:\"))\n\n# force KO to character df\ndf_fig_pair$KO <- as.character(df_fig_pair$KO)\nDiTing_cycles$KO <- as.character(DiTing_cycles$KO)\n\n# Select cycles\nkegg_abundance_depth_DT <- df_fig_pair %>%\n  dplyr::left_join(DiTing_cycles, by = \"KO\",relationship = \"many-to-many\") %>%\n  drop_na(Cycle) %>%\n  filter(Cycle %in% c(\"Nitrogen metabolism\", \"Methane metabolism\", \n                      \"Sulfur metabolism\")) %>% distinct() \n\n# join\nkegg_abundance_depth_DT <- kegg_abundance_depth_DT %>%\n  merge(ko_list, by = \"KO\")\n\n\n# filter informative comparisons\nkegg_abundance_depth_DT <- kegg_abundance_depth_DT %>%\n  filter(!group %in% c(\"31-45 vs 16-30\", \"50-75 vs 16-30\", \"50-75 vs 31-45\"))\n\n\n# limits\nlo <- floor(min(df_fig_pair$value, na.rm = TRUE))\nup <- ceiling(max(df_fig_pair$value, na.rm = TRUE))\nmid <- (lo + up) / 2\n\n# # join gene names\nkegg_abundance_depth_DT <- kegg_abundance_depth_DT %>%\n  mutate(Gene_label = paste0(Genes, \" (\", Gene_description, \")\"))\n```\n:::\n\n\n\n\n\n\n\n\n# 05. Heatmap\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# check heatmap_matrix format\nheatmap_matrix <- kegg_abundance_depth_DT %>%\n  select(group, value, Genes) %>%\n  pivot_wider(names_from = group, values_from = value, values_fn = mean) %>%\n  column_to_rownames(\"Genes\") %>%\n  as.matrix()\n\n# Create row Cycle annotations\nannotation_row <- kegg_abundance_depth_DT %>%\n  select(Genes, Cycle) %>%\n  distinct(Genes, Cycle, .keep_all = TRUE) %>%\n  column_to_rownames(\"Genes\")\n\n# check that Cycle is sort factor\nannotation_row <- annotation_row %>%\n  arrange(Cycle)\n\n# Reorder heatmap_matrix same of annotation_row\nheatmap_matrix <- heatmap_matrix[rownames(annotation_row), ]\n\n# Define colors to row annotation\ncycle_colors <- setNames(\n  brewer.pal(length(unique(annotation_row$Cycle)), \"Blues\"),\n  unique(annotation_row$Cycle))\n\n# Create row annotation sorted\nha_row <- rowAnnotation(\n  Cycle = annotation_row$Cycle,\n  col = list(Cycle = cycle_colors),\n  annotation_legend_param = list(title = \"Cycle\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# heatmap\nht <- Heatmap(\n  heatmap_matrix,\n  name = \"LFC\",\n  col = colorRamp2(c(-2,0,4), c(\"#D7bAfEfF\",\"white\",\"#011c50FF\")),\n  left_annotation = ha_row,\n  cluster_rows = FALSE,  \n  cluster_columns = FALSE,\n  row_names_gp = gpar(fontsize = 12),  \n  column_names_gp = gpar(fontsize = 12),\n  column_names_rot = 0,\n  column_title_gp = gpar(fontsize = 10),\n  rect_gp = gpar(col = \"white\", lwd = 0.5),\n  heatmap_legend_param = list(title = \"LFC\", direction = \"horizontal\"))\n\n# Draw with bottom legend\nht_bottom <- draw(ht, heatmap_legend_side = \"bottom\", \n                  annotation_legend_side = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](03.6.MetabolicInference_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# save\npdf(\"Figures/interior_mangroves/DA_picrust_Heatmap_depth.pdf\",  width = 6, height = 8)\nht\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nquartz_off_screen \n                2 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(ht, \"rds/interior_mangroves/DA_picrust.rds\")\n```\n:::\n",
    "supporting": [
      "03.6.MetabolicInference_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}