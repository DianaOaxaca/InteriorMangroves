[
  {
    "objectID": "Binning.html",
    "href": "Binning.html",
    "title": "Genomas a partir de metagenomas",
    "section": "",
    "text": "La metagen√≥mica hace referencia al estudios de todo el ADN de los organismos que se encuentran en un ambiente. La secuenciaci√≥n de este material gen√©tico produce lecturas que pueden ensamblarse para conocer la diversidad microbiana y sus funciones.\nT√≠picamente los metagenomas pueden estudiarse mediante dos aproximaciones:\nEn este apartado nos enfocaremos en la segunda aproximaci√≥n. Los MAGs se reconstruyen a partir de un ensamble metagen√≥mico, los contigs de dicho ensamble se agrupan mediante la informaci√≥n de cobertura y frecuencia de tetranucle√≥tidos. Esta agrupaci√≥n puede generar errores, por lo que es indispensable evaluar la calidad de los MAGs mediante la completitud y redundancia de genes de copia √∫nica (MerenLab y col.)\nPara obtener MAGs podemos seguir el siguiente flujo de an√°lisis:",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "01.Surface sediment",
      "Genomas a partir de metagenomas"
    ]
  },
  {
    "objectID": "Binning.html#binning",
    "href": "Binning.html#binning",
    "title": "Genomas a partir de metagenomas",
    "section": "Binning",
    "text": "Binning\nEn la secci√≥n anterior aprendimos como evaluar la calidad, filtrar las lecturas y a ensamblarlas, por lo que este apartado comenzar√° con el ensamble ya generado.\nDe acuerdo con el flujo de an√°lisis (Figura 2), debemos partir de un ensamble y mapear las lecturas a dicho ensamble para obtener un archivo de profundidad de cada contig en el ensamble.\n\n\n\n\n\n\nNota\n\n\n\nEl proceso de mapeo es demandante en tiempo de ejecuci√≥n y recursos. As√≠ que nos dimos a la tarea de generar el archivo de profundidad para comenzar directamente con el binning.\nEl mapeo lo corrimos con bowtie2 que es una herramienta confiable y muy utilizada para alinear lecturas cortas a una referencia, en nuestro caso, la referencia es el ensamble metagen√≥mico de la muestra de 48hrs. Bowtie2 genera un archivo de mapeo (SAM) que debe convertirse a un formato binario (BAM), para esta conversi√≥n usamos samtools que contiene multiples subherramientas para trabajar con archivos de mapeos.\nPara generar este archivo se utilizaron las siguientes lineas de c√≥digo.\n# Formatear el ensamble\nbowtie2-build results/02.ensambles/megahit/48hrs/48hrs.fasta results/03.profundidad/48hrs --threads 40\n# Mapear las lecturas contra el ensamble\nbowtie2 -x results/03.profundidad/48hrs -1 data/48hrs_sm_R1.fastq -2 data/48hrs_sm_R2.fastq -p 40 -S results/03.profundidad/48hrs.sam\n# Convertir de SAM a BAM y ordenar\nsamtools view -Sb -O BAM -@ 40 results/03.profundidad/48hrs.sam | samtools sort -@ 40  -o results/03.profundidad/48hrs_sorted.bam\n# Obtener el √≠ndice\nsamtools index results/03.profundidad/48hrs_sorted.bam\nYa que generamos el archivo bam ordenado y el √≠ndice obtuvimos un archivo con la informaci√≥n de cobertura de cada contig dentro del ensamble, este archivo de profundidad se gener√≥ con jgi_summarize_bam_contig_depths que es una herramienta de metabat.\n# jgi\n#Obtener el archivo de profundidad de cada contig\njgi_summarize_bam_contig_depths  --outputDepth results/03.profundidad/48hrs.mgh_depth.txt results/03.profundidad/48hrs_sorted.bam\n\n\n\n\n\n\nAtenci√≥n\n\n\n\nNo las ejecutes, s√≥lo son un ejemplo para que las puedas usar con tus propios datos en el futuro.\n\n\n\n\n\n\n\n\n\n\n\n\nEjercicio 1\n\n\n\nAntes de comenzar, re√∫nete con tu equipo y juntos\n\nrevisen el contenido de los directorios 02.ensambles y 03.profundidad.txt\nDiscutan y en una diapositiva expliquen el flujo que se sigui√≥ para obtener los archivos que est√°n en esos directorios\n\nLa liga de drive para ir trabajando durante el taller es esta: https://drive.google.com/drive/folders/1iKfhMz_JdfImmsCmkPg10r-NC-nrzhQ4?usp=sharing\n\n\n\n\nPor si te pierdes\nS√≥lo por si te pierdes\n\n\n\n\n\n\nDirectorio de trabajo\n\n\n\nSi en alg√∫n momento te pierdes entre directorios, puedes regresar al espacio principal asi:\ncd && cd taller_metagenomica_pozol/\n\n\nAhora si, vamos a agrupar los contigs del metaensamble en bins ‚Ä¶\n\n\nMetabat2\nMetabat2 es una herramienta que agrupa los contigs tomando la cobertura de cada contig y calcula su composici√≥n nucleot√≠dica.\nPara correr metabat necesitamos activar el ambiente conda donde se aloja.\n\n\n\n\n\n\nActivar ambiente para Metabat2\n\n\n\n\nbetterlab\nconda activate binning\n\n\n\n\n\n\nMetabat2. Kang et al., 2015. DOI:10.7717/peerj.1165\n\n\nAhora que ya tenemos el ambiente activado ejecutemos la siguiente linea:\nmetabat2 -i results/02.ensambles/48hrs.fasta -a results/03.profundidad/48hrs.mgh_depth.txt -o results/04.metabat/metabat -t 4 -m 1500\n\n\n\n\n\n\nResponde:\n\n\n\n\n\n\n¬øCu√°ntos bins se formaron?\n\n2. ¬øQu√© par√°metros cambiar√≠as o agregar√≠as?\n\n\n\n\n\n\nAyuda\n\n\n\n\n\n\nls results/04.metabat/\nmetabat2 ‚Äì-help\n\n\n\n\n\n\n\nYa que corrimos Metabat2 vamos a ejecutar MaxBin2, pero primero necesitamos desactivar el ambiente:\n\n\n\n\n\n\nDesactiva el ambiente\n\n\n\nPara desactivar el ambiente debemos correr la siguiente linea:\nconda deactivate\n\n\n\n\nMaxBin2\nMaxBin2 agrupa los contigs de acuerdo a la informaci√≥n de cobertura, composici√≥n nucleot√≠dica y genes de marcadores de copia √∫nica.\nVamos a ejecutarlo, activemos el ambiente conda para maxbin.\n\n\n\n\n\n\nActivar ambiente para MaxBin2\n\n\n\n\nbetterlab\nconda activate metagenomics\n\n\n\n\n\n\nMaxBin2. Wu et al., 2014. https://doi.org/10.1186/2049-2618-2-26\n\n\nCrea el directorio para los resultados de MaxBin2\nmkdir -p results/05.maxbin\nAhora si, vamos a ejecutarlo.\n\nrun_MaxBin.pl -thread 4 -min_contig_length 1500 -contig results/02.ensambles/48hrs.fasta -out results/05.maxbin/48hrs_maxbin -abund results/03.profundidad/48hrs.mgh_depth.txt\n\n\n\n\n\n\nEjercicio:\n\n\n\n\n\n1. ¬øCu√°ntos bins se formaron?\n2. ¬øQu√© porcentaje de completitud tienen??\n\n\n\n\n\n\nSoluci√≥n\n\n\n\n\n\n\nls results/05.maxbin/*.fasta | wc -l\ncat results/05.maxbin/48hrs_maxbin.summary | column -t\n\n\n\n\n\n\n\n\n\n\n\n\n\nDesactiva el ambiente\n\n\n\nconda deactivate\n\n\n\n\nVamb\nVAMB utiliza una combinaci√≥n de enfoques de aprendizaje profundo y t√©cnicas de agrupamiento bas√°ndose en sus patrones de composici√≥n de nucle√≥tidos y en la co-ocurrencia de sus frecuencias de cobertura.\n\n\n\n\n\n\nActiva el ambiente binning\n\n\n\n\nbetterlab\nconda activate binning\n\n\n\nVamos a correr vamb, pero primero crea el directorio de resultados\nmkdir -p results/06.vamb\nEjecutemos vamb:\nvamb --fasta results/02.ensambles/48hrs.fasta --jgi results/03.profundidad/48hrs.mgh_depth.txt --minfasta 500000 --outdir results/06.vamb/48hrs\n\n\n\n\n\n\nImportant\n\n\n\nSi quisieras recuperar los genomas de virus ¬øQu√© par√°metro cambiar√≠as?\n\n\n\n\n\n\n\n\nOtros programas para binning\n\n\n\nRecientemente se public√≥ COMEBin, que utiliza un enfoque distinto a lo que hemos usado en este tutorial. En el siguiente link encontrar√°s el manual y una explicaci√≥n general sobre su funcionamiento.",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "01.Surface sediment",
      "Genomas a partir de metagenomas"
    ]
  },
  {
    "objectID": "Binning.html#refinamiento",
    "href": "Binning.html#refinamiento",
    "title": "Genomas a partir de metagenomas",
    "section": "Refinamiento",
    "text": "Refinamiento\nYa corrimos tres programas de binning, pero, recordemos que los agrupamientos pueden tener errores:\n\n\n\nContaminaci√≥n de bins\n\n\nPara disminuir la contaminaci√≥n e incrementar la completitud hay algunos programas que pueden ayudarnos. entre ellos est√°n Binning_refiner y DASTool.\n\nCheckM\nAntes de proceder al refinamiento es necesario tener claro c√≥mo se eval√∫a la completitud y contaminaci√≥n de los bins. Para esta evaluaci√≥n se usa CheckM que se ha convertido en una herramienta est√°ndar para la evaluaci√≥n de la calidad de genomas y MAGs, y es usada por la mayor√≠a de programas de refinamiento.\nPara hacer esta evaluaci√≥n, CheckM utiliza una serie de herramientas: tree organiza los genomas en un √°rbol de referencia. tree_qa eval√∫a la cantidad de genes marcadores filogen√©ticos y su ubicaci√≥n en el √°rbol. El comando lineage_set crea un archivo de marcadores espec√≠ficos de linaje, que se usa en el comando analyze para evaluar la integridad y contaminaci√≥n de los genomas. Finalmente, el comando qa genera tablas que resumen la calidad de los genomas.\n\n\n\nCheckM Workflow\n\n\nEn este taller no vamos a correr CheckM porque los programas de refinamiento que usaremos ya lo corren de forma interna, sin embargo, es √∫til correrlo para tener una idea clara sobre la calidad de los bins que obtengamos.\nTe dejamos la siguiente l√≠nea para que la uses en tus proyectos.\n#ejemplo de como correrlo con los bins de vamb\n#se debe activar el ambiente metagenomics\n#checkm lineage_wf results/06.vamb/48hrs/bins results/checkm/ -x fna -t 4  -f results/checkm/checkm_vamb_bins.txt\nY una captura de ejemplo de como se ve la salida de CheckM:\n\n\n\n\n\nY ahora si, a refinar los bins ‚Ä¶ ü•≥\n\n\nBinning_refiner\nBinning_refiner se enfoca en refinar y fusionar los bins para mejorar la integridad y reducir la contaminaci√≥n. Identifica bins que pueden representar el mismo genoma y los fusiona. Despu√©s elimina posibles contaminaciones, durante el proceso, Binning_refiner eval√∫a la calidad de los bins.\n\n\n\n\n\n\n\nBinning_refiner\n\n\nhttps://doi.org/10.1093/bioinformatics/btx086\nNecesitamos crear el directorio de resultados para binning_refiner y un directorio con los bins generados por cada programa\nmkdir -p results/07.binning_refiner/48hrsbins/{metabat,maxbin,vamb}\nAhora vamos a crear ligas simb√≥licas de los bins generados por cada herramienta.\n#metabat\ncd results/07.binning_refiner/48hrsbins/metabat/\n\nln -s ../../../04.metabat/*.fa .\n\n#maxbin\ncd ../maxbin/\nln -s ../../../05.maxbin/*.fasta .\n\n# vamb\ncd ../vamb/\nln -s ../../../06.vamb/48hrs/bins/*.fna .\n\n\n#regresar\ncd ../../\nAhora si, corramos Binning_refiner\nBinning_refiner -i 48hrsbins/ -p 48hrs\nY regresemos a nuestro directorio principal\ncd && cd taller_metagenomica_pozol/\nExploremos los resultados!\ncat results/07.binning_refiner/48hrs_Binning_refiner_outputs/48hrs_sources_and_length.txt\nRefined_bin     Size(Kbp)       Source\n48hrs_1 1535.49 48hrs_maxbin.004.fasta,metabat.5.fa,676.fna\n48hrs_2 1506.01 48hrs_maxbin.002.fasta,metabat.3.fa,6952.fna\n48hrs_3 1319.12 48hrs_maxbin.008.fasta,metabat.2.fa,28067.fna\n48hrs_4 1263.79 48hrs_maxbin.005.fasta,metabat.9.fa,3736.fna\n48hrs_5 1185.25 48hrs_maxbin.001.fasta,metabat.11.fa,15732.fna\n48hrs_6 1052.67 48hrs_maxbin.003.fasta,metabat.4.fa,15732.fna\n48hrs_7 557.49  48hrs_maxbin.006.fasta,metabat.1.fa,28990.fna\nCopia y pega este contenido en la consola de Rscript\n# Cargar las librerias\nlibrary(dplyr)\nlibrary(networkD3)\n\n# revisa tu ubicaci√≥n\ngetwd()\n\n# OJO\nsetwd(\"/home/ELALUMNOQUEERES/taller_metagenomica_pozol\")\n\n# Cargar los datos\nsankey_data &lt;- read.csv(\"results/07.binning_refiner/48hrs_Binning_refiner_outputs/48hrs_sankey.csv\")\n\n# Crear una lista de nodos √∫nicos\nnodes &lt;- data.frame(name = unique(c(sankey_data$C1, sankey_data$C2)))\n\n# Crear el dataframe de enlaces\nlinks &lt;- sankey_data %&gt;%\n  mutate(source = match(C1, nodes$name) - 1,\n         target = match(C2, nodes$name) - 1,\n         value = Length_Kbp) %&gt;%\n  select(source, target, value)\n\n# Crear el gr√°fico Sankey\nsankey_plot &lt;- sankeyNetwork(Links = links, Nodes = nodes,\n                             Source = \"source\", Target = \"target\",\n                             Value = \"value\", NodeID = \"name\",\n                             fontSize = 12, nodeWidth = 30)\n\n# Mostrar el gr√°fico\nsankey_plot\n\n# Guardar\nlibrary(htmlwidgets)\nsaveWidget(sankey_plot, file = \"48hrs_sankey_plot.html\")\n\n\n\nBinning_refiner sankey plot\n\n\n\n\nDASTool\nDASTool es una herramienta utilizada para mejorar la calidad de los bins. Eval√∫a la integridad, combina los resultados de diferentes bineadores y por consenso selecciona los mejores bins de cada herramienta. Una vez que DASTool ha seleccionado los mejores bins, realiza un proceso de refinamiento para optimizar los resultados.\n\n\n\nDASTool\n\n\nVamos a correr DASTool ‚Ä¶\nPrimero crea el directorio para los resultados\nmkdir -p results/08.dastool\nDASTool necesita como entrada un archivo tabular con informaci√≥n de los resultados de cada programa de binning.\nFasta_to_Contig2Bin.sh -i results/04.metabat/ -e fa &gt; results/08.dastool/48hrs_metabat.dastool.tsv\n\nFasta_to_Contig2Bin.sh -i results/05.maxbin/ -e fasta &gt; results/08.dastool/48hrs_maxbin.dastool.tsv\n\nFasta_to_Contig2Bin.sh -i results/06.vamb/48hrs/bins/ -e fna &gt; results/08.dastool/48hrs_vamb.dastool.tsv\nYa que tenemos los archivos tsv podemos empezar con el refinamiento!! ü•≥\nDAS_Tool -i results/08.dastool/48hrs_metabat.dastool.tsv,results/08.dastool/48hrs_maxbin.dastool.tsv,results/08.dastool/48hrs_vamb.dastool.tsv -l metabat,maxbin,vamb -c results/02.ensambles/48hrs.fasta -o results/08.dastool/48hrs -t 4 --write_bins",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "01.Surface sediment",
      "Genomas a partir de metagenomas"
    ]
  },
  {
    "objectID": "Binning.html#dereplicaci√≥n",
    "href": "Binning.html#dereplicaci√≥n",
    "title": "Genomas a partir de metagenomas",
    "section": "Dereplicaci√≥n",
    "text": "Dereplicaci√≥n\n\ndRep\nLa desreplicaci√≥n es el proceso de identificar conjuntos de genomas que son ‚Äúiguales‚Äù en una lista de genomas y eliminar todos los genomas excepto el ‚Äúmejor‚Äù de cada conjunto redundante. dRep es una herramienta √∫til para esto.\n\n\n\n\n\n\n\ndRep\n\n\nYa que tenemos los resultados de los dos refinadores ejecutaremos dRep para desreplicar y seleccionar el mejor representante de cada bin.\nPrimero vamos a crear el directorio de resultados para dRep.\nmkdir -p results/09.drep/bins\nY entraremos al directorio bins dentro del directorio de resultados para colocar los bins que queremos comparar. En este caso los generados por ambos refinadores.\ncd results/09.drep/bins/\nCon las siguientes lineas podemos copiar los bins en este directorio:\nfor i in $(ls ../../08.dastool/48hrs_DASTool_bins/*.fa) ; do name=$(basename $i .fa); cp $i $name\".fasta\" ; done\n\ncp ../../07.binning_refiner/48hrs_Binning_refiner_outputs/48hrs_refined_bins/*.fasta .\nYa que los copiamos, regresemos al directorio principal.\ncd && cd taller_metagenomica_pozol/\nY ahora si, vamos a correr dRep ‚Ä¶\n\nexport PATH=/miniconda3/envs/metagenomics/bin:$PATH\ndRep dereplicate results/09.drep/ -d -comp 50 -con 10 --SkipSecondary -g results/09.drep/bins/*.fasta\nEste es uno de los plots generados por dRep, que representa los mejores bins desreplicados.\n\n\n\ndRepWinningGenomes\n\n\nVamos a desactivar el ambiente de dRep\nconda deactivate\n\n\n\n\n\n\n\nPara reflexionar\n\n\n\nQu√© har√≠as si antes de desreplicar tienes un bin que tiene 98 % de completitud y 11 % de contaminaci√≥n?. dRep en autom√°tico lo descartar√≠a.\nPropondr√≠as alguna manera para quedarte con este bin y curarlo para reducir su contaminaci√≥n?\nPor suerte hay m√°s programas que pueden ayudarnos a curar nuestros bins manualmente, una herramienta √∫til para esto es mmgenome2\n\n\nPara tomar en consideraci√≥n:\n\n\n\n\n\n\nTip\n\n\n\nYa que tenemos los bins refinados y desreplicados opcionalmente podr√≠as reensamblarlos. La manera ser√≠a mapear las lecturas de toda la muestra a los bins finales y con las lecturas mapeadas y el bin, generar un ensamble gen√≥mico para cada uno. Con esta aproximaci√≥n se genera un MAG m√°s pulido y la contaminaci√≥n se reduce.\nAunque en muchos reportes ver√°s que los autores reensamblan sus MAGs, en otros no lo hacen y no hacerlo no est√° mal, pero hacerlo mejora la calidad.\n\n\n\nAhora te toca a t√≠\n\n\n\n\n\n\nEjercicio 2\n\n\n\nAhora te toca a t√≠.\n\nRe√∫nanse en equipos y repliquen todo el flujo hasta este punto con la muestra que les toca.\nDiscutan cada resultado obtenido.\nEn la carpeta compartida de Drive busquen la presentaci√≥n para el Ejercicio 2, en la diapositiva correspondiente resuman sus resultados obtenidos para que los presenten.\n\nTiempo de actividad (1 hr)\nTiempo de presentaci√≥n de resultados (5 min por equipo)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "01.Surface sediment",
      "Genomas a partir de metagenomas"
    ]
  },
  {
    "objectID": "Project.html",
    "href": "Project.html",
    "title": "01.Preprocessing",
    "section": "",
    "text": "Reglas del juego\n\n\n\n\nEn este tutorial haremos el ejemplo corriendo la muestra de 48 hrs.\nSe formaran 6 equipos (2 de los tiempos 0, 9 y 24 hrs).\nLos equipos discutir√°n y presentar√°n sus resultados cuando se indique en el tutorial.",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "01.Preprocessing"
    ]
  },
  {
    "objectID": "Project.html#espacio-de-trabajo",
    "href": "Project.html#espacio-de-trabajo",
    "title": "01.Preprocessing",
    "section": "Espacio de trabajo",
    "text": "Espacio de trabajo\n\nEntra a tu cuenta en el servidor y sit√∫ate en tu $HOME\nObten los datos y la estructura de tu directorio del proyecto corriendo lo siguiente:\n\n# ve al $HOME\ncd\n# copia los directorios de trabajo\n# metagen√≥mica\ncp -r /home/alumno1/taller_metagenomica_pozol .\n# amplicones\ncp -r /home/alumno1/taller_amplicones_pozol .\n\nEntra al directorio del proyecto\n\ncd taller_metagenomica_pozol\n\n\n\n\n\n\nDirectorio de trabajo\n\n\n\nSi en alg√∫n momento te pierdes entre directorios, puedes regresar al espacio principal asi:\ncd && cd taller_metagenomica_pozol/\n\n\n\n\nLa presente pr√°ctica s√≥lo es una representaci√≥n del flujo de trabajo para el an√°lisis metagen√≥mico, sin embargo, no sustituye los manuales de cada programa y el flujo puede variar dependiendo del tipo de datos y pregunta de investigaci√≥n, de hecho para fines del taller, con frecuencia se utilizan las lineas de comando m√°s simples para eficientar tiempo y recursos, t√≥malo en cuenta.\n\nCada programa tiene una ayuda y un manual de usuario, es importante revisarlo y conocer cada par√°metro que se ejecute. En terminal se puede consultar el manual con el comando man y tambi√©n se puede consultar la ayuda con -h o --help, por ejemplo fastqc -h.\n\n\n\n\n\n\nImportant\n\n\n\nüß† Para tenerlo presente\nEn bioinform√°tica cualquier l√≠nea de comandos generar√° un resultado, de ah√≠ a que esos resultados sean correctos puede haber una gran diferencia.\nEn cada paso detente a revisar la informaci√≥n de cada programa, lee el manual, visita foros de ayuda y selecciona los argumentos que se ajusten a las necesidades de tus datos.",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "01.Preprocessing"
    ]
  },
  {
    "objectID": "Amplicones16S.html",
    "href": "Amplicones16S.html",
    "title": "Amplicones 16S",
    "section": "",
    "text": "El an√°lisis de amplicones, tambi√©n llamado meta-taxonom√≠a y mal llamado metagen√≥mica. Se usa ampliamente para conocer la diversidad taxon√≥mica de un ambiente. Se amplifica y secuenc√≠a una regi√≥n de cada organismo que se encuentra en la comunidad. Estos marcadores pueden ser los genes ribosomales 16S, 18S, ITS o el COI, etc.\n\nExisten diversas herramientas para analizar este tipo de datos como Mothur, USEARCH, VSEARCH, Deblur, AMPtk, DADA2 en R, QIIME2, etc.\nEn este taller vamos a usar Qiime2 con DADA2 para inferir las ASVs"
  },
  {
    "objectID": "Amplicones16S.html#srccreate_manifest.sh",
    "href": "Amplicones16S.html#srccreate_manifest.sh",
    "title": "Amplicones 16S",
    "section": "src/create_manifest.sh",
    "text": "src/create_manifest.sh\n#!/usr/bin/bash\n#Create manifest file\n\ncd results/01.cutadapt\n\nid=$(ls *.gz |  sed 's/_.*//g' | sort -u)\n\necho -e \"sample-id\"\",\"\"absolute-filepath\"\",\"\"direction\" &gt; ../../data/manifest.csv\n\nfor sample in $id; do\n        source=$(awk -F\"\\t\" -v sample=\"$sample\" '$1 == sample {print $1}' ../../data/metadata.tsv)\n        r1=$(echo -e $sample\"_1.fastq.gz\"\",\"\"forward\")\n        r2=$(echo -e $sample\"_2.fastq.gz\"\",\"\"reverse\")\n        path=$(pwd)\n        echo -e $source\",\"$path\"/\"$r1 &gt;&gt; ../../data/manifest.csv\n        echo -e $source\",\"$path\"/\"$r2 &gt;&gt; ../../data/manifest.csv\ndone"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Microbioma_del_pozol",
    "section": "",
    "text": "Taller de An√°lisis de Metagenomas, Reconstrucci√≥n de Genomas y An√°lisis de Amplicones.\nEn este taller introductorio aprenderemos a organizar un proyecto, analizar y visualizar datos metagen√≥micos; reconstruir genomas a partir de metagenomas (MAGs), a clasificar los MAGs taxon√≥micamente y a predecir sus genes e inferir su metabolismo. Adem√°s, abordaremos un poco sobre el an√°lisis de amplicones del gene 16S ARNr.",
    "crumbs": [
      "TallerMetagenomasCBF2023-2024-1251"
    ]
  },
  {
    "objectID": "index.html#temario",
    "href": "index.html#temario",
    "title": "Microbioma_del_pozol",
    "section": "Temario",
    "text": "Temario\nLos d√≠as 1 y 2 ser√°n de introducci√≥n a bash, R y metagen√≥mica. Se seguir√° la lecci√≥n de metagen√≥mica de Software Carpentry que cubre los siguientes puntos:\n\nOrganizaci√≥n de un proyecto metagen√≥mico: link\nIntroducci√≥n a la l√≠nea de comandos: link\nIntroducci√≥n a R: link\nProcesamiento y visualizaci√≥n de datos metagen√≥micos: link\n\nLos d√≠as 3 y 4 Nos enfocaremos en la reconstrucci√≥n de MAGs y su inferencia taxon√≥mica y funcional. El d√≠a 5 abordaremos el an√°lisis de amplicones. El material para los d√≠as 3-5 se encuentra en esta p√°gina.\nD√≠a 3\n\n\n\nHora\nTema\n\n\n\n\n9:00 - 9:30\nReconstrucci√≥n de genomas\n\n\n9:30 - 9:50\n¬øQu√© es el binning?\n\n\n9:50 - 10:00\nDescanso\n\n\n10:00 - 12:15\nReconstrucci√≥n de genomas\n\n\n12:15 - 12:30\nDescanso\n\n\n12:30 - 13:30\nDesreplicaci√≥n\n\n\n13:30 - 14:00\nDiscusi√≥n de resultados\n\n\n14:00 - 15:30\nComida\n\n\n15:30 - 16:00\nEjercicio por equipo\n\n\n16:00 - 17:00\nDiscusi√≥n de resultados\n\n\n\nD√≠a 4\n\n\n\n\n\n\n\nHora\nTema\n\n\n\n\n9:00 - 10:00\nClasificaci√≥n taxon√≥mica\n\n\n10:00 - 10:45\nPredicci√≥n g√©nica\n\n\n10:45 - 11:00\nDescanso\n\n\n11:00 - 11:30\nPl√°tica sobre el microbioma del chinicuil\n\n\n10:30 - 10:45\nDescanso\n\n\n10:45 - 12:00\nRbims\n\n\n12:00 - 12:15\nDescanso\n\n\n12:15 - 14:00\nOtras inferencias metab√≥licas y discusi√≥n de resultados\n\n\n14:00 - 15:30\nComida\n\n\n15:30 - 17:00\nVistazo a la reconstrucci√≥n viral y eucari√≥tica\n\n\n\nD√≠a 5\n\n\n\n\n\n\n\nHora\nTema\n\n\n\n\n9:00 - 10:00\nIntroducci√≥n al an√°lisis de amplicones\n\n\n10:00 - 10:30\nIntroducci√≥n a QIIME2\n\n\n10:30 - 10:45\nDescanso\n\n\n10:45 - 12:00\nImportaci√≥n de datos e inferencia de ASVs\n\n\n12:00 - 12:15\nDescanso\n\n\n12:15 - 14:00\nAsignaci√≥n taxon√≥mica, limpieza e inferencia filogen√©tica\n\n\n14:00 - 15:30\nComida\n\n\n15:30 - 17:00\nImportaci√≥n a R, gr√°ficos y diversidad",
    "crumbs": [
      "TallerMetagenomasCBF2023-2024-1251"
    ]
  },
  {
    "objectID": "metabolic.html",
    "href": "metabolic.html",
    "title": "Metabolismo",
    "section": "",
    "text": "Ahora que ya tenemos los bins refinados, queremos saber qu√© capacidades metab√≥licas poseen. Para ello es necesario predecir sus genes y asignarles funci√≥n.\n\nPROKKA\nProkka es una herramienta √∫til, usa diferentes programas para predecir genes, secuencias codificantes, tRNAs, rRNAs. Hace la traducci√≥n de CDS a amino√°cidos y asigna funciones usando varias bases de datos.\n\n\n\n\n\nPara correrlo vamos a activar el ambiente en el que se aloja.\n\n\n\n\n\n\nActiva el ambiente para PROKKA\n\n\n\nconda activate Prokka_Global\n\n\nTenemos el ambiente activo, ahora vamos a crear un directorio de resultados para prokka.\nmkdir -p results/11.prokka\nPara correrlo, podemos hacer un ciclo que nos permita anotar todos los bins.\nfor FASTA in $(ls results/10.gtdbtk/bins/); do LOCUSTAG=$(basename $FASTA .fasta); prokka --locustag \"${LOCUSTAG}_Scaffold\"  --prefix $LOCUSTAG --addgenes --addmrn --cpus 4 --outdir \"results/11.prokka/$LOCUSTAG\" \"results/10.gtdbtk/bins/$FASTA\" ;\ndone\n\n\n\n\n\n\nExplora\n\n\n\nMientras prokka se ejecuta en los bins que obtuviste, despliega la ayuda y discute:\n\n¬ø qu√© argumentos quitar√≠as o agregar√≠as?\nCu√°les te llamaron la atenci√≥n?\n\n\n\nDesactivemos el ambiente:\nconda deactivate\nAhora que tenemos las prote√≠nas predichas vamos a obtener m√°s anotaciones √∫tiles, usaremos kofam para esto.\n\n\nKofamScan\nKofamScan es una herramienta de anotaci√≥n, usa la base de datos KOfam de KEGG para obtener informaci√≥n sobre los genes que participan en diferentes rutas metab√≥licas.\nVamos a crear el directorio de resultados\nmkdir -p results/12.kofam\n\n\n\n\n\n\nEjemplo de como correr KOfamScan\n\n\n\nGHH\nKofamScan requiere mucho tiempo de ejecuci√≥n. Para efectos del taller nosotros ya lo corrimos y te proporcionaremos los resultados. Pero te dejamos el bloque de c√≥digo que usamos para este paso.\nfor FAA in $(ls results/11.prokka/*/*.faa); do\n    name=$(basename $FAA .faa)\n    exec_annotation $FAA \\\n        -o results/12.kofam/\"$name.txt\" \\\n        --report-unannotated \\\n        --cpu 4 \\\n        --tmp-dir results/12.kofam/\"tmp$name\" \\\n        -p /home/alumno1/kofam/db/profiles/ \\\n        -k /home/alumno1/kofam/db/ko_list\ndone\n# remover los directorios temporales\n#rm -r results/12.kofam/tmp*\n\n\nEstos resultados ya los tienes en el directorio results/12.kofam\nY ahora que ya tenemos los identificadores de KO para cada prote√≠na, vamos a filtrar y graficar el metabolismo de los bins.\n\n\nRbiMs\nRbiMs es un paquete de R muy √∫til para obtener la anotaci√≥n de cada KEGG ID y generar plots de esta informaci√≥n. Puede trabajar con anotaciones de KOFAM, Interpro o PFAM.\n\n\n\nRbiMs\n\n\nVamos al editor de Rstudio para correr RbiMs ‚ú®\nlibrary(tidyverse)\nlibrary(tidyr)\nlibrary(rbims)\nlibrary(readxl)\n\n#setwd(\"/home/alumnoX/taller_metagenomica_pozol/\")\n\n#A continuaci√≥n, leemos los resultados de KEGG \npozol_table &lt;- read_ko(data_kofam = \"results/12.kofam/\") \n\n#y los mapeamos con la base de datos de KEGG:\npozol_mapp &lt;- mapping_ko(pozol_table)\n\n#Nos centraremos en las v√≠as metab√≥licas relacionadas con la biosintesis de aminoacidos y vitaminas:\n\nOverview &lt;- c(\"Biosynthesis of amino acids\", \"Vitamin B6 metabolism\")\nAminoacids_metabolism_pozol &lt;- pozol_mapp %&gt;%\n  drop_na(Module_description) %&gt;%\n  get_subset_pathway(Pathway_description, Overview) \n\n#Visualizamos los datos con un gr√°fico de burbujas:\n\nplot_bubble(tibble_ko = Aminoacids_metabolism_pozol,\n            x_axis = Bin_name, \n            y_axis = Pathway_description,\n            analysis = \"KEGG\",\n            calc = \"Percentage\",\n            range_size = c(1, 10),\n            y_labs = FALSE,\n            x_labs = FALSE)  \n\n#A√±adiremos metadatos, como la taxonom√≠a:\n\nMetadatos &lt;- read_delim(\"results/10.gtdbtk/Metadatos.txt\", delim = \"\\t\")\n\n#Y generaremos un gr√°fico de burbujas con metadatos:\n\nplot_bubble(tibble_ko = Aminoacids_metabolism_pozol,\n            x_axis = Bin_name, \n            y_axis = Pathway_description,\n            analysis = \"KEGG\",\n            data_experiment = Metadatos,\n            calc = \"Percentage\",\n            color_character = Family,\n            range_size = c(1, 10),\n            y_labs = FALSE,\n            x_labs = FALSE) \n\n# Exploraci√≥n de una V√≠a Espec√≠fica\n# podemos explorar una sola v√≠a, como el ‚ÄúSecretion system,‚Äù y crear un mapa de calor para visualizar los genes relacionados con esta v√≠a:\n\nSecretion_system_pozol &lt;- pozol_mapp %&gt;%\n  drop_na(Cycle) %&gt;%\n  get_subset_pathway(Cycle, \"Secretion system\")\n\n#Y, finalmente, generamos un mapa de calor:\n\nplot_heatmap(tibble_ko = Secretion_system_pozol, \n             y_axis = Genes,\n             analysis = \"KEGG\",\n             calc = \"Binary\")\n\n#Tambi√©n podemos agregar metadatos para obtener una visi√≥n m√°s completa:\n\nplot_heatmap(tibble_ko = Secretion_system_pozol, \n             y_axis = Genes,\n             data_experiment = Metadatos,\n             order_x = Family,\n             analysis = \"KEGG\",\n             calc = \"Binary\")\n\nplot_heatmap(tibble_ko = Secretion_system_pozol, \n             y_axis = Genes,\n             data_experiment = Metadatos,\n             order_y = Pathway_cycle,\n             order_x = Family,\n             analysis = \"KEGG\",\n             calc = \"Binary\")\n\n# Explorar\ncolnames(pozol_mapp) \n\npozol_mapp %&gt;%\n  select(Cycle, Pathway_cycle, Pathway_description) %&gt;%\n  distinct()\n\n\n\n\n\n\n\nAntismash\nAdicionalmente podr√≠as anotar el metabolismo secundario de los bins siguiendo el flujo de an√°lisis propuestos en la lecci√≥n de Miner√≠a Gen√≥mica de Software Carpentry.",
    "crumbs": [
      "Metabolismo",
      "Metabolismo"
    ]
  },
  {
    "objectID": "gtdbtk.html",
    "href": "gtdbtk.html",
    "title": "Asignaci√≥n taxon√≥mica",
    "section": "",
    "text": "GTDB-tk\nGTDB-Tk es una herramienta que asigna taxonom√≠a a genomas utilizando la base de datos GTDB (Genome Taxonomy Database). Basado en √°rboles filogen√©ticos y medidas de ANI (Average Nucleotide Identity), GTDB-Tk clasifica genomas bacterianos y arqueanos, proporciona una taxonom√≠a coherente y actualizada. Se utiliza mucho en el an√°lisis de genomas y metagenomas.\n\n\n\nGTDB-tk Workflow\n\n\nRecordemos que ya tenemos un set de bins refinados y desreplicados. Ahora vamos a asignarles identidad taxon√≥mica, para ello vamos a correr GTDB-tk\n\n\n\n\n\n\nActiva el ambiente de gtdbtk\n\n\n\nconda activate gtdbtk-2.1.1\n\n\nEl directorio de resultados para gtdbtk ya lo tienes en tu carpeta de resultados. Para colocar los bins refinados y renombrados ejecuta el script `src/copiar_renombrarbins.sh` :\n bash src/copiar_renombrarbins.sh\nAhora si, vamos a correr gtdbtk\npip install numpy==1.19.5\n\ngtdbtk classify_wf --genome_dir results/10.gtdbtk/bins/ --out_dir results/10.gtdbtk/ --cpus 4 -x fasta\nNo olvides desactivar el ambiente\nconda deactivate\n\n\n\n\n\n\nResultado de GTDB-Tk\n\n\n\nSi gtdbtk est√° tomando mucho tiempo puedes parar el proceso con ctrl + C en tu teclado. El resultado final se encuentra en el directorio y archivo: results/10.gtdbtk/gtdbtk.bac120.summary.tsv que se copi√≥ desde el inicio.\n\n\nDespu√©s de ejecutar GTDB-tk, continuaremos en R para visualizar los datos.\nlibrary(tidyverse)\nlibrary(ggplot2)\n# Leer la tabla ------------------------------------------------------------####\nGTDBtk &lt;- read.table(\"gtdbtk.bac120.summary.tsv\", \n                    sep = \"\\t\", header = TRUE, na.strings = \"\", \n                    stringsAsFactors = FALSE) %&gt;%\n  as_tibble()\n\n# Transformar datos --------------------------------------------------------####\n\npozol_gtdbtk &lt;- GTDBtk %&gt;%\n  select(user_genome, classification) %&gt;%\n  separate(classification, c(\n    \"Domain\", \"Phylum\", \"Class\", \"Order\", \"Family\", \"Genus\", \"Species\"), \n    sep = \";\") %&gt;%\n  rename(Bin_name = user_genome) %&gt;%\n  unite(Bin_name_2, c(\"Bin_name\", \"Phylum\"), remove = FALSE) %&gt;%\n  select(Bin_name, Domain, Phylum, Class, Order, Family, Genus, Species)\n\n# Guardamos los datos en un archivo de metadatos ---------------------------####\nwrite.table(pozol_gtdbtk, file = \"Metadatos.txt\", \n            sep = \"\\t\", quote = FALSE, row.names = FALSE, col.names = TRUE)\n\n# Visualizaci√≥n de Datos ---------------------------------------------------####\nGTDBtk_barplot &lt;- pozol_gtdbtk %&gt;%\n  count(Phylum, Genus) %&gt;%\n  rename(Number_of_MAGs = n) %&gt;%\n  ggplot(aes(x = Phylum, y = Number_of_MAGs, fill = Genus)) + \n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  theme_minimal()\n\nGTDBtk_barplot\n\n\n\n\n\n\nDiscusi√≥n\n\n\n\nEn equipos revisen los resultados generados por GTDB-tk y propongan un plan para mejorar la identificaci√≥n taxon√≥mica, qu√© har√≠an para darle m√°s soporte a estos resultados?",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "02.Surface sediments comparison from inland and coastal mangroves",
      "Asignaci√≥n taxon√≥mica"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Interior and coastal mangroves compare",
    "section": "",
    "text": "El pozol es un alimento √°cido, fermentado a partir de ma√≠z nixtamalizado, de importancia econ√≥mica y cultural, se consume desde tiempos prehisp√°nicos y se ha estudiado desde los a√±os 50s.\nAlgunos puntos importantes que conocemos son:\n\n\nNo se inocula y al final de su fermentaci√≥n tiene alta diversidad microbiana.\nEs muy nutritivo, tiene un alto contenido de amino√°cidos esenciales.\nEs considerado como prebi√≥tico, contiene fibras solubles y microorganismos ben√©ficos para la salud intestinal humana.\n\n\n\nüß¨üîäü¶† Imaginemos que se quiere impulsar la producci√≥n de esta bebida y para ello necesitan saber todo acerca de su naturaleza microbiana.\nUna importante industria alimenticia los contacta como expertos en ecolog√≠a microbiana y les pide ayuda para descubrir los siguientes puntos:\n\n\n¬øQu√© actores microbianos est√°n presentes durante el proceso de fermentaci√≥n?\n¬øC√≥mo ocurre la bioconversi√≥n del ma√≠z durante la fermentaci√≥n, qui√©n participa y c√≥mo lo hace? ¬øQu√© funciones metab√≥licas est√°n ocurriendo?\n¬øCambia la comunidad microbiana a lo largo del proceso?\n\n\nLa empresa secuenci√≥ cuatro puntos de fermentaci√≥n de muestras que se obtuvieron en un mercado de Campeche. Las muestras se secuenciaron con Illumina NextSeq500 con lecturas pareadas de 75 pb. Los datos est√°n p√∫blicos bajo el Bioproject: PRJNA648868\n\n\n\n\n\n\n\n\nImportante\n\n\n\nComo las muestras contienen ma√≠z, es indispensable remover las lecturas que correspondan al genoma del ma√≠z, no hacerlo producir√° un ensamble muy fragmentado, mayoritariamente del ma√≠z y poco microbiano.\nEl autor del art√≠culo amablemente nos proporcion√≥ sus muestras libres del ma√≠z y el c√≥digo que us√≥ para ello est√° disponible en un repositorio p√∫blico de GitHub.\n\n\nEl art√≠culo: L√≥pez-S√°nchez et al., 2023. Analysing the dynamics of the bacterial community in pozol, a Mexican fermented corn dough. 10.1099/mic.0.001355",
    "crumbs": [
      "Interior and coastal mangroves compare"
    ]
  },
  {
    "objectID": "Recursos_extra.html",
    "href": "Recursos_extra.html",
    "title": "Recursos extra",
    "section": "",
    "text": "Metagen√≥mica\n\nSitio web de Anvio, canal de YouTube y canal de DIscord.\n\n\n\nAmplicones\nSi quieres profundizar en el an√°lisis de amplicones te recomendamos visitar\n\nTutoriales completos para el procesamiento de los datos, filtros y an√°lisis complementarios de Microbiome Helper y su art√≠culo asociado.\nTutoriales para usar el paquete Microbiome.\nFlujo completo de amplicones y otros rescursos de bioinform√°tica y gen√≥mica de Mike Lee.\nBases de datos para asignar taxonom√≠a en DADA2 dentro de R.\ncanal de youtube y/o los cursos y asesorias de microbioma-lab."
  },
  {
    "objectID": "Creditos.html",
    "href": "Creditos.html",
    "title": "Cr√©ditos",
    "section": "",
    "text": "El contenido de esta p√°gina fue creado como parte del proyecto Ciencia de Frontera CBF2023-2024-1251 liderado por la Dra. Mirna Rosas V√°zquez Landa y la Dra. Karina Verdel Aranda.\nAutoras: Diana Hern√°ndez Oaxaca @DianaOaxaca y Mirna Rosas V√°zquez Landa @MirnaVazquez .\nAgradecimientos:\n\nTodos los miembros del laboratorio LandaLab del Departamento de Ecolog√≠a Molecular y gen√≥mica poblacional del ICMyL de la UNAM, por la sugerencias a la mejora de este tutorial.\nAl M. en C. Rafael L√≥pez S√°nchez, por donar los datos de metagen√≥mica del pozol libres de ma√≠z y por revisar el material del taller.\nA la Dra. Nelly Sel√©m por brindar apoyo y acceso al servidor de trabajo.\nAl M. en C. Luis Gerardo Tejero G√≥mez de la unidad de computo del Centro de Ciencias Matem√°tica de la UNAM. Por su invaluable apoyo en la instalaci√≥n y soporte de las herramientas usadas en este taller.\n\n\nEl material de esta pr√°ctica inicialmente se prepar√≥ para los Talleres Internacionales de Bioinform√°tica (TIB2022) organizados por la Sociedad Mexicana de Bioinform√°tica (SMB) y la Comunidad de Desarrollo de Software Bioinform√°tico (CDSB). Se ha usado en talleres intersemestrales del Instituto de Ciencias del Mar y Limnolog√≠a (ICMyL) de la UNAM, el t√≥pico de posgrado Hackeando las comunidades microbianas. Cursos intensivos de posgrado del INECOL yel taller de metagen√≥mica de la Red Mexicana de Bioinform√°tica RMB organizado en el CIBNOR Junio 2024. El material se ha ido modificando con el tiempo y sigue en desarrollo.",
    "crumbs": [
      "Cr√©ditos"
    ]
  },
  {
    "objectID": "src/MetaAnalysis.html",
    "href": "src/MetaAnalysis.html",
    "title": "Meta-analysis",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "src/MetaAnalysis.html#quarto",
    "href": "src/MetaAnalysis.html#quarto",
    "title": "Meta-analysis",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "src/MetaAnalysis.html#running-code",
    "href": "src/MetaAnalysis.html#running-code",
    "title": "Meta-analysis",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "01.Presentation.html",
    "href": "01.Presentation.html",
    "title": "Unraveling microbial diversity from a fossil lagoon with an inland mangrove forest",
    "section": "",
    "text": "Website of microbial diversity analysis of the paper ‚Ä¶\n\n\nMangrove forests protect, store carbon, and support diverse life forms. Although coastal mangroves have been extensively studied, less is known about inland mangroves, which are isolated environments left behind by ancient seas. We explored microbial communities in sediments of inland mangroves along the San Pedro Martir River in Mexico, which houses a fossil lagoon. Using 16S rDNA sequencing, we found that microbes across deep sediments were adapted to low-oxygen conditions and played key roles in nitrogen fixation, sulphur reduction, and methane production. The inland mangroves showed greater diversity in phyla such as WS2, Verrucomicromicrobia, Zixibacteria, and Crenarchaeota than coastal mangroves. Our findings suggest that the microbial community structure is significantly shaped by both depth and geographical location, and these microbes are crucial for recycling nutrients and capturing carbon. We highlight the importance of conserving inland mangroves as biodiversity hotspots that contribute to global efforts against climate change.",
    "crumbs": [
      "Presentation"
    ]
  },
  {
    "objectID": "A_InteriorCoastalCompare.html",
    "href": "A_InteriorCoastalCompare.html",
    "title": "Interior and coastal mangroves compare",
    "section": "",
    "text": "This section focuses on comparisons between inland and coastal mangroves in order to answer the following questions:\nHow are coastal and inland mangroves similar?\nHow are coastal and inland mangroves similar, considering their depth?\nHow are inland mangroves similar to a degraded coastal mangrove?",
    "crumbs": [
      "Interior and coastal mangroves compare"
    ]
  },
  {
    "objectID": "01.Preprocessing.html",
    "href": "01.Preprocessing.html",
    "title": "Preprocessing",
    "section": "",
    "text": "Prior to conducting analyses that will elucidate the microbial dynamics associated with the mangroves under study, it is necessary to process the amplicon sequencing data. The following workflow was employed to achieve this purpose.\nFirst, the workspace was prepared:\nOnce the directories were prepared, the following steps were executed:",
    "crumbs": [
      "Preprocessing"
    ]
  },
  {
    "objectID": "01.Preprocessing.html#espacio-de-trabajo",
    "href": "01.Preprocessing.html#espacio-de-trabajo",
    "title": "01.Preprocessing",
    "section": "Espacio de trabajo",
    "text": "Espacio de trabajo\n\nEntra a tu cuenta en el servidor y sit√∫ate en tu $HOME\nObten los datos y la estructura de tu directorio del proyecto corriendo lo siguiente:\n\n# ve al $HOME\ncd\n# copia los directorios de trabajo\n# metagen√≥mica\ncp -r /home/alumno1/taller_metagenomica_pozol .\n# amplicones\ncp -r /home/alumno1/taller_amplicones_pozol .\n\nEntra al directorio del proyecto\n\ncd taller_metagenomica_pozol\n\n\n\n\n\n\nDirectorio de trabajo\n\n\n\nSi en alg√∫n momento te pierdes entre directorios, puedes regresar al espacio principal asi:\ncd && cd taller_metagenomica_pozol/\n\n\n\n\nLa presente pr√°ctica s√≥lo es una representaci√≥n del flujo de trabajo para el an√°lisis metagen√≥mico, sin embargo, no sustituye los manuales de cada programa y el flujo puede variar dependiendo del tipo de datos y pregunta de investigaci√≥n, de hecho para fines del taller, con frecuencia se utilizan las lineas de comando m√°s simples para eficientar tiempo y recursos, t√≥malo en cuenta.\n\nCada programa tiene una ayuda y un manual de usuario, es importante revisarlo y conocer cada par√°metro que se ejecute. En terminal se puede consultar el manual con el comando man y tambi√©n se puede consultar la ayuda con -h o --help, por ejemplo fastqc -h.\n\n\n\n\n\n\nImportant\n\n\n\nüß† Para tenerlo presente\nEn bioinform√°tica cualquier l√≠nea de comandos generar√° un resultado, de ah√≠ a que esos resultados sean correctos puede haber una gran diferencia.\nEn cada paso detente a revisar la informaci√≥n de cada programa, lee el manual, visita foros de ayuda y selecciona los argumentos que se ajusten a las necesidades de tus datos.",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "01.Preprocessing"
    ]
  },
  {
    "objectID": "Presentation.html",
    "href": "Presentation.html",
    "title": "Unraveling microbial diversity from a fossil lagoon with an inland mangrove forest",
    "section": "",
    "text": "Website of microbial diversity analysis of the paper ‚Ä¶\n\n\nMangrove forests protect, store carbon, and support diverse life forms. Although coastal mangroves have been extensively studied, less is known about inland mangroves, which are isolated environments left behind by ancient seas. We explored microbial communities in sediments of inland mangroves along the San Pedro Martir River in Mexico, which houses a fossil lagoon. Using 16S rDNA sequencing, we found that microbes across deep sediments were adapted to low-oxygen conditions and played key roles in nitrogen fixation, sulphur reduction, and methane production. The inland mangroves showed greater diversity in phyla such as WS2, Verrucomicromicrobia, Zixibacteria, and Crenarchaeota than coastal mangroves. Our findings suggest that the microbial community structure is significantly shaped by both depth and geographical location, and these microbes are crucial for recycling nutrients and capturing carbon. We highlight the importance of conserving inland mangroves as biodiversity hotspots that contribute to global efforts against climate change.",
    "crumbs": [
      "Presentation"
    ]
  },
  {
    "objectID": "01.Preprocessing.html#remove-adapters",
    "href": "01.Preprocessing.html#remove-adapters",
    "title": "Preprocessing",
    "section": "01. Remove adapters",
    "text": "01. Remove adapters\n#Remove primers\n\nmkdir -p results/02.cutadapt\nout=\"results/02.cutadapt\"\nFASTQ=$(ls data/*.gz | sed 's/_.*//' | sed 's/data\\///' | sort -u)\n\ndate\n\nfor FILE in ${FASTQ[@]}; do\n    echo -e \"Run cutadapt to $FILE sample\"\n        CUTADAPT='cutadapt -m 200 --pair-filter any --no-indels -g CCTACGGGNGGCWGCAG -G GACTACHVGGGTATCTAATCC -Z -j 80 -o '$out'/'$FILE'_1.fastq.gz -p '$out'/'$FILE'_2.fastq.gz data/'$FILE'_R1.fastq.gz  data/'$FILE'_R2.fastq.gz'\n        echo -e $CUTADAPT \"\\n\"\n        $CUTADAPT\ndone",
    "crumbs": [
      "Preprocessing"
    ]
  },
  {
    "objectID": "01.Preprocessing.html#get-asvs-with-dada2",
    "href": "01.Preprocessing.html#get-asvs-with-dada2",
    "title": "Preprocessing",
    "section": "02. Get ASVs with DADA2",
    "text": "02. Get ASVs with DADA2\n# Get path info\ngetwd()\n\n# Load packages\nlibrary(Rcpp)\nlibrary(dada2)\nlibrary(ggplot2)\nlibrary(gridExtra)\n\n##### 01. Prepare files -------------------------------------------------------\n\n#Load trim fastq files and list fastq_path content\nfastq_path &lt;- \"/axolote/diana/manglares/v0.2/results/02.cutadapt\"\nlist.files(fastq_path) \n\n#Sort file names\nFs &lt;- sort(list.files(fastq_path, pattern=\"_1.fastq\"))\nRs &lt;- sort(list.files(fastq_path, pattern=\"_2.fastq\"))\n\n# Extract sample names\nsampleNames &lt;- sapply(strsplit(Fs, \"_1\"), `[`, 1)\nsampleNames\n\n# Add complete path to remove ambiguities errors\nFs &lt;- file.path(fastq_path, Fs)\nRs &lt;- file.path(fastq_path, Rs)\n\n##### 02. Check Quality --------------------------------------------------------\n\n# Quality check plot with only the first fastq file\nQC_F1_15 &lt;- plotQualityProfile(Fs[1:15], aggregate = TRUE)\nQC_R1_15 &lt;- plotQualityProfile(Rs[1:15], aggregate = TRUE)\nQCsFR1_15 &lt;- grid.arrange(QC_F1_15, QC_R1_15, nrow = 1)\n\n#save in png format\nggsave(\"results/plots/01.QualityProfile_1-15.png\", QCsFR1_15, width = 7, height = 3)\n\n#save in pdf format\nQCsFR1_15 &lt;- grid.arrange(QC_F1_15, QC_R1_15, nrow = 1)\nggsave(\"results/plots/01.QualityProfile_1-15.pdf\", QCsFR1_15, width = 7, height = 3)\n\n##### 03.Quality control -------------------------------------------------------\n\n# Create directory for clean reads\nfilt_path &lt;- file.path(\"results/03.Dada2\" , \"01.filter_reads\") \nif(!file_test(\"-d\", filt_path)) \n  dir.create(filt_path)\nfiltFs &lt;- file.path(filt_path, paste0(sampleNames, \"_F_filt.fastq.gz\"))\nfiltRs &lt;- file.path(filt_path, paste0(sampleNames, \"_R_filt.fastq.gz\"))\n\n# Filter versions\n\n# V1 \nout1 &lt;- filterAndTrim(Fs, filtFs, Rs, filtRs,\n                      truncLen=c(250,200),\n                      maxN=0, maxEE=c(5,5), truncQ=2, rm.phix=TRUE,\n                      compress=TRUE, multithread=TRUE) \nhead(out1)\n\n#V2 extra permissive\nout2 &lt;- filterAndTrim(Fs, filtFs, Rs, filtRs,\n                      maxN=0, maxEE=c(5,5), truncQ=2, rm.phix=TRUE,\n                      compress=TRUE, multithread=TRUE) \nhead(out2)\n\n#V3\nout3 &lt;- filterAndTrim(Fs, filtFs, Rs, filtRs,\n                      truncLen=c(280,200),\n                      maxN=0, maxEE=c(5,5), truncQ=2, rm.phix=TRUE,\n                      compress=TRUE, multithread=TRUE) \nhead(out3)\n\n##v4\nout4 &lt;- filterAndTrim(Fs, filtFs, Rs, filtRs,\n                      truncLen=c(0,200),\n                      maxN=0, maxEE=c(5,5), truncQ=2, rm.phix=TRUE,\n                      compress=TRUE, multithread=TRUE) \nhead(out4)\n\n##v5\nout5 &lt;- filterAndTrim(Fs, filtFs, Rs, filtRs,\n                      truncLen=c(260,200),\n                      maxN=0, maxEE=c(5,5), truncQ=2, rm.phix=TRUE,\n                      compress=TRUE, multithread=TRUE)\nhead(out5)\n\n## compare trunc versions\nv1 &lt;- as.data.frame(out1)\nv2 &lt;- as.data.frame(out2)\nv3 &lt;- as.data.frame(out3)\nv4 &lt;- as.data.frame(out4)\nv5 &lt;- as.data.frame(out5)\n\n\n# Percentage function\ncalculate_percentage &lt;- function(df, group_name) {\n  df$percentage &lt;- (df$reads.out / df$reads.in) * 100\n  df$version &lt;- group_name\n  return(df)\n}\n\n# Get percentage\nout1_with_percentage &lt;- calculate_percentage(v1, 'v1:250-200')\nout2_with_percentage &lt;- calculate_percentage(v2, 'v2:0-0')\nout3_with_percentage &lt;- calculate_percentage(v3, 'v3:280-200')\nout4_with_percentage &lt;- calculate_percentage(v4, 'v4:0-200')\nout5_with_percentage &lt;- calculate_percentage(v5, 'v5:260-200')\n\n# Combine percentage versions\ncombined_data &lt;- rbind(out1_with_percentage, out2_with_percentage, \n                       out3_with_percentage, out4_with_percentage,\n                       out5_with_percentage)\n\n# Compare plot\nboxplot_versions &lt;- ggplot(combined_data, aes(x = version, y = percentage, \n                    fill = version)) + geom_boxplot() + theme_bw() +\n  labs(x = \"Filter version\", y = \"Percentage of reads after filter\") +\n  scale_fill_brewer(palette = \"Set2\")\n\nboxplot_versions\n\n#save plot as png\nggsave(\"results/plots/02.boxplot_trunc_versions.png\", boxplot_versions, width = 6)\n\n#save plot as pdf\nggsave(\"results/plots/02.boxplot_trunc_versions.pdf\", boxplot_versions, width = 6)\n\n#Save info of final version\n#We chose v5 \nwrite.table(out5_with_percentage, file=\"results/03.Dada2/Dada_clean_reads.tsv\", quote=F, sep=\"\\t\",col.names=NA) # Table with the totals before and after cleaning\n\n##### 04.Error Model -----------------------------------------------------------\n\n#De-replicate to reduce redundance \n\nderepFs &lt;- derepFastq(filtFs, verbose=TRUE)\nderepRs &lt;- derepFastq(filtRs, verbose=TRUE)\n\n# Add names to de-rep object\nnames(derepFs) &lt;- sampleNames\nnames(derepRs) &lt;- sampleNames\n\n#Generate Error model IMPORTANT\nerrF &lt;- learnErrors(derepFs, multithread=TRUE, verbose = TRUE)\nerrR &lt;- learnErrors(derepRs, multithread=TRUE, verbose=TRUE)\n\nsave.image(file = \"src/Dada2.RData\") # Save point to stop for now\n\n##### 0.5 Get ASVs -------------------------------------------------------------\n# ASVs inference\ndadaFs &lt;- dada(derepFs, err=errF, multithread=TRUE, pool = \"pseudo\", verbose=TRUE)\ndadaRs &lt;- dada(derepRs, err=errR, multithread=TRUE, pool = \"pseudo\", verbose = TRUE)\n\nsave.image(file = \"src/Dada2.RData\") # Save point to stop for now\n\n# Merge pairs\nmergers &lt;- mergePairs(dadaFs, derepFs, dadaRs, derepRs, minOverlap = 8, verbose=TRUE)\n\n# Create ASVs table \nseqtabAll &lt;- makeSequenceTable(mergers)\ntable(nchar(getSequences(seqtabAll)))\n\n# Remove chimeras\nseqtab_nochim &lt;- removeBimeraDenovo(seqtabAll, method=\"consensus\", multithread=TRUE, verbose=TRUE)\n\ndim(seqtab_nochim)\nsum(seqtab_nochim)/sum(seqtabAll)\n\n##### 0.6 info -----------------------------------------------------------------\n\n# create a new table with each ASV number and its representative sequence\nPE.table_tsv_output &lt;- seqtab_nochim\nPE.table_tsv_output[PE.table_tsv_output==1]=0 # Don't consider those values that have a single observation per sample, make them 0 (sample singletons)\nPE.table_tsv_output &lt;- PE.table_tsv_output[,colSums(PE.table_tsv_output)&gt;1] # filter singleton ASVs across the table\n\n# Export sequences as in fasta format\nuniquesToFasta(PE.table_tsv_output, fout=\"results/03.Dada2/ASVs.fasta\", ids=paste(\"ASV_\",1:ncol(PE.table_tsv_output), sep=\"\"))\nnochim=PE.table_tsv_output\nwrite.table(cbind(\"ASVs\"=1:nrow(t(PE.table_tsv_output)),\"rep_seq\"=rownames(t(PE.table_tsv_output))), file=\"results/03.Dada2/ASV_to_seqs-nochim.tsv\", quote=F, sep=\"\\t\",row.names=FALSE)\n\n# replace the rep_seq with an incremental ASV number\nPE.table_tsv_output &lt;- t(PE.table_tsv_output)\nrownames(PE.table_tsv_output) &lt;- paste0(\"ASV_\",1:nrow(PE.table_tsv_output))\n\n# and print the output ASV table\nwrite.table(PE.table_tsv_output, file=\"results/03.Dada2/ASV_to_seqs-nochim.tsv\", quote=F, sep=\"\\t\",col.names=NA)\n\n# evaluate the total table dimensions\ndim(nochim)\n\ntable(nchar(getSequences(nochim))) \n\n###Track reads lost per step ###\n\n# By using this, we can create a function to automate this for all samples in a set:\ngetN &lt;- function(x) sum(getUniques(x)) # Where getUniques gets non-repeated sequences from a dada2 object or merger object (joined reads)\ntrack &lt;- cbind(out1, sapply(derepFs, getN), sapply(dadaFs, getN), sapply(dadaRs, getN), rowSums(seqtabAll), rowSums(nochim))\ncolnames(track) &lt;- c(\"Raw\", \"Qual_filter\", \"Derep\", \"ASVs R1\", \"ASVs R2\", \"Merged\", \"nonchim\")\nrownames(track) &lt;- sampleNames\nwrite.table(track, \"results/03.Dada2/Seqs_lost_in_ASVs_processing.tsv\", col.names=NA, sep=\"\\t\")\n\n\n# Create a quick assesment of sequences lost throughout the process\npng(\"results/plots/03.preview_reads_passing_ASV_processing.png\")\n# And same thing for the percentage remaining\nmatplot(t(track[,-5]/track[,1]*100),type='l',xaxt='n', main=\"Sequences remaining after each step  - R1 (%)\", xlab=\"Step\", ylab=\" Percentage of Sequences remaining\")\naxis(1,at=1:ncol(track[,-5]),labels=colnames(track[,-5]))\n# R2\nmatplot(t(track[,-4]/track[,1]*100),type='l',xaxt='n', main=\"Sequences remaining after each step  - R2 (%)\", xlab=\"Step\", ylab=\" Percentage of Sequences remaining\")\naxis(1,at=1:ncol(track[,-4]),labels=colnames(track[,-4]))\ndev.off()\n\n##Add final table\ntrack2 &lt;- data.frame(track)\ntrack2$percentage_used &lt;-(track2$nonchim / track2$Raw) * 100\ntrack2\nwrite.table(track2, \"results/03.Dada2/Seqs_lost_in_ASVs_processing_percentage.tsv\", col.names=NA, sep=\"\\t\")\n\n# Save work so far\nsave.image(file = \"src/Dada2.RData\")",
    "crumbs": [
      "Preprocessing"
    ]
  },
  {
    "objectID": "01.Preprocessing.html#import-to-qiime2",
    "href": "01.Preprocessing.html#import-to-qiime2",
    "title": "Preprocessing",
    "section": "03. Import to QIIME2",
    "text": "03. Import to QIIME2\n#!/usr/bin/bash\n## DianaOaxaca\n## Import data to QIIME2\n\n#Run in qiime conda environment\n#conda activate qiime2-2023.5\n\n#import rep seqs\nqiime tools import --input-path results/03.Dada2/ASVs.fasta --type 'FeatureData[Sequence]' --output-path results/04.qiime/ASV_rep_seq.qza\n\n# append missing header to the table for import\ncat &lt;(echo -n \"#OTU Table\") results/03.Dada2/ASV_to_seqs-nochim.tsv &gt; temp.txt\n\n# convert to biom\nbiom convert -i temp.txt -o temp.biom --table-type=\"OTU table\" --to-hdf5\n\n# and create table-type qza\nqiime tools import --input-path temp.biom --type 'FeatureTable[Frequency]' --input-format BIOMV210Format --output-path results/04.qiime/ASV_table.qza\n\n# remove temporal files\nrm temp.*",
    "crumbs": [
      "Preprocessing"
    ]
  },
  {
    "objectID": "01.Preprocessing.html#taxonomic-assignment",
    "href": "01.Preprocessing.html#taxonomic-assignment",
    "title": "Preprocessing",
    "section": "04. Taxonomic assignment",
    "text": "04. Taxonomic assignment\n#!/usr/bin/bash\n## DianaOaxaca\n## Import data to QIIME2\n\n#Run in qiime conda environment\n#conda activate qiime2-2023.5\n\n#import rep seqs\nqiime tools import --input-path results/03.Dada2/ASVs.fasta --type 'FeatureData[Sequence]' --output-path results/04.qiime/ASV_rep_seq.qza\n\n# append missing header to the table for import\ncat &lt;(echo -n \"#OTU Table\") results/03.Dada2/ASV_to_seqs-nochim.tsv &gt; temp.txt\n\n# convert to biom\nbiom convert -i temp.txt -o temp.biom --table-type=\"OTU table\" --to-hdf5\n\n# and create table-type qza\nqiime tools import --input-path temp.biom --type 'FeatureTable[Frequency]' --input-format BIOMV210Format --output-path results/04.qiime/ASV_table.qza\n\n# remove temporal files\nrm temp.*",
    "crumbs": [
      "Preprocessing"
    ]
  },
  {
    "objectID": "01.Preprocessing.html#filters",
    "href": "01.Preprocessing.html#filters",
    "title": "Preprocessing",
    "section": "05. Filters",
    "text": "05. Filters\n#!/usr/bin/bash\n#DianaOaxaca\n#Filters\n\n#Summary of the qza table imported from R\nqiime feature-table summarize \\\n--i-table results/04.qiime/ASV_table.qza \\\n--o-visualization results/04.qiime/ASV_table.qzv\n\n#Filter by frequency\n#Here I removed all ASVs with a frequency of less than 0.1% of the mean sample depth. \n#This cut-off excludes ASVs that are likely due to MiSeq bleed-through between runs (reported by Illumina to be 0.1% of reads). \n#To calculate this cut-off I identified the mean sample depth, multiplied it by 0.001, and rounded to the nearest integer. \n#This step are describe in [this paper](https://journals.asm.org/doi/pdf/10.1128/msystems.00127-16)\n\nqiime feature-table filter-features --i-table  results/04.qiime/ASV_table.qza \\\n --p-min-samples 1 --p-min-frequency 218 --o-filtered-table results/04.qiime/ASV_table_filter_freq218.qza\n\nqiime feature-table summarize --i-table results/04.qiime/ASV_table_filter_freq218.qza \\\n --o-visualization results/04.qiime/ASV_table_filter_freq218.qzv\n\n#Filter Mitochondria, chloroplast and Eukaryota\n\nqiime taxa filter-table --i-table results/04.qiime/ASV_table_filter_freq218.qza \\\n --i-taxonomy results/04.qiime/taxonomy.qza --p-exclude Eukaryota,Mitochondria,Chloroplast \\\n --p-include p__ --o-filtered-table results/04.qiime/ASV_table_filter_freq218_emc.qza\n\nqiime feature-table summarize --i-table results/04.qiime/ASV_table_filter_freq218_emc.qza \\\n --o-visualization results/04.qiime/ASV_table_filter_freq218_emc.qzv\n\n#remove in fasta sequences\nqiime feature-table filter-seqs  --i-table results/04.qiime/ASV_table_filter_freq218_emc.qza \\\n --i-data results/04.qiime/ASV_rep_seq.qza --o-filtered-data results/04.qiime/ASV_rep_seq_filters.qza",
    "crumbs": [
      "Preprocessing"
    ]
  },
  {
    "objectID": "01.Preprocessing.html#phylogeny",
    "href": "01.Preprocessing.html#phylogeny",
    "title": "Preprocessing",
    "section": "06. Phylogeny",
    "text": "06. Phylogeny\n#!/usr/bin/bash\n#Get iqtree phylogeny\n\ndate\necho \"Start phylogeny\"\n\nqiime phylogeny align-to-tree-mafft-iqtree \\\n --p-n-threads auto --i-sequences results/04.qiime/ASV_rep_seq_filters.qza \\\n --o-alignment results/04.qiime/align.qza \\\n --o-masked-alignment results/04.qiime/masked-align.qza \\\n --o-tree results/04.qiime/unrooted-tree-iqtree.qza \\\n --o-rooted-tree results/04.qiime/rooted-tree-iqtree.qza --verbose\n\necho \"finish phylogeny!\"\n\ndate",
    "crumbs": [
      "Preprocessing"
    ]
  },
  {
    "objectID": "01.Preprocessing.html#get-public-data",
    "href": "01.Preprocessing.html#get-public-data",
    "title": "Preprocessing",
    "section": "07. Get public data",
    "text": "07. Get public data\n# Yaxche\n\n\n\n\n\n\nPublic data preprocessing\n\n\n\nThe public data obtained for comparative purposes was preprocessed in the same way as described in the previous steps.",
    "crumbs": [
      "Preprocessing"
    ]
  },
  {
    "objectID": "01.Preprocessing.html#clustering-types-of-mangroves-for-comparative-analysis",
    "href": "01.Preprocessing.html#clustering-types-of-mangroves-for-comparative-analysis",
    "title": "Preprocessing",
    "section": "08. Clustering types of mangroves for comparative analysis",
    "text": "08. Clustering types of mangroves for comparative analysis\n#Run in qiime conda environment\nconda activate qiime2-2023.5\n\n#Repeat with every ASV_table (Celest√∫n, Estero Pargo and San Pedro River)\n#import rep seqs\nqiime tools import --input-path results/03.Dada2/ASVs.fasta --type 'FeatureData[Sequence]' --output-path results/04.qiime/ASV_rep_seq.qza\n\n# append missing header to the table for import\ncat &lt;(echo -n \"#OTU Table\") results/03.Dada2/ASV_to_seqs-nochim.tsv &gt; temp.txt\n\n# convert to biom\nbiom convert -i temp.txt -o temp.biom --table-type=\"OTU table\" --to-hdf5\n\n# and create table-type qza\nqiime tools import --input-path temp.biom --type 'FeatureTable[Frequency]' --input-format BIOMV210Format --output-path results/04.qiime/ASV_table.qza\n\n# remove temporal files\nrm temp.*\n\n#Merge of the frequency tables from distinct analysis\nqiime feature-table merge \n--i-tables ASV_table_Celestun.qza ASV_table_Estero.qza ASV_table_SanPedro.qza --p-overlap-method sum \n--o-merged-table merged-table.qza\n\n#Merge of the Representative sequences from distinct analysis \nqiime feature-table merge-seqs \n--i-data ASV_Celestun_rep_seq.qza ASV_Estero_rep_seq.qza ASV_SanPedro_rep_seq.qza \n--o-merged-data merged-rep_seqs.qza\n\n#Closed reference clustering for Meta-Analysis\nqiime vsearch cluster-features-closed-reference   \n--i-table merged-table.qza   \n--i-sequences merged-rep_seqs.qza   \n--i-reference-sequences silva-138-99-seqs.qza   \n--p-perc-identity 0.97   \n--o-clustered-table table-cr-97.qza   \n--o-clustered-sequences rep-seqs-cr-97.qza   \n--o-unmatched-sequences unmatched-cr-97.qza\n\n#Taxonomic assignment with SILVA\n qiime feature-classifier classify-sklearn   \n--i-classifier classifier_silva_138_trained.qza   \n--i-reads rep-seqs-cr-97.qza    \n--o-classification taxonomyEstero.qza \n--p-n-jobs 40\n\n#Filter by frequency\nqiime feature-table filter-features --i-table  merged_table.qza \n--p-min-samples 1 \n--p-min-frequency 218 \n--o-filtered-table clustered_table_filter_freq218.qza\n\n#Filter Mitochondria, chloroplast and Eukaryota\nqiime taxa filter-table \n--i-table Clustered_table_filter_freq218.qza \n--i-taxonomy taxonomy.qza \n--p-exclude Eukaryota,Mitochondria,Chloroplast  \n--p-include p__ \n--o-filtered-table clustered_table_filter_freq218_emcEstero.qza",
    "crumbs": [
      "Preprocessing"
    ]
  },
  {
    "objectID": "02.Surface sediments comparison from inland and coastal mangroves.html",
    "href": "02.Surface sediments comparison from inland and coastal mangroves.html",
    "title": "Genomas a partir de metagenomas",
    "section": "",
    "text": "La metagen√≥mica hace referencia al estudios de todo el ADN de los organismos que se encuentran en un ambiente. La secuenciaci√≥n de este material gen√©tico produce lecturas que pueden ensamblarse para conocer la diversidad microbiana y sus funciones.\nT√≠picamente los metagenomas pueden estudiarse mediante dos aproximaciones:\nEn este apartado nos enfocaremos en la segunda aproximaci√≥n. Los MAGs se reconstruyen a partir de un ensamble metagen√≥mico, los contigs de dicho ensamble se agrupan mediante la informaci√≥n de cobertura y frecuencia de tetranucle√≥tidos. Esta agrupaci√≥n puede generar errores, por lo que es indispensable evaluar la calidad de los MAGs mediante la completitud y redundancia de genes de copia √∫nica (MerenLab y col.)\nPara obtener MAGs podemos seguir el siguiente flujo de an√°lisis:",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "02.Surface sediments comparison from inland and coastal mangroves",
      "Genomas a partir de metagenomas"
    ]
  },
  {
    "objectID": "02.Surface sediments comparison from inland and coastal mangroves.html#binning",
    "href": "02.Surface sediments comparison from inland and coastal mangroves.html#binning",
    "title": "Genomas a partir de metagenomas",
    "section": "Binning",
    "text": "Binning\nEn la secci√≥n anterior aprendimos como evaluar la calidad, filtrar las lecturas y a ensamblarlas, por lo que este apartado comenzar√° con el ensamble ya generado.\nDe acuerdo con el flujo de an√°lisis (Figura 2), debemos partir de un ensamble y mapear las lecturas a dicho ensamble para obtener un archivo de profundidad de cada contig en el ensamble.\n\n\n\n\n\n\nNota\n\n\n\nEl proceso de mapeo es demandante en tiempo de ejecuci√≥n y recursos. As√≠ que nos dimos a la tarea de generar el archivo de profundidad para comenzar directamente con el binning.\nEl mapeo lo corrimos con bowtie2 que es una herramienta confiable y muy utilizada para alinear lecturas cortas a una referencia, en nuestro caso, la referencia es el ensamble metagen√≥mico de la muestra de 48hrs. Bowtie2 genera un archivo de mapeo (SAM) que debe convertirse a un formato binario (BAM), para esta conversi√≥n usamos samtools que contiene multiples subherramientas para trabajar con archivos de mapeos.\nPara generar este archivo se utilizaron las siguientes lineas de c√≥digo.\n# Formatear el ensamble\nbowtie2-build results/02.ensambles/megahit/48hrs/48hrs.fasta results/03.profundidad/48hrs --threads 40\n# Mapear las lecturas contra el ensamble\nbowtie2 -x results/03.profundidad/48hrs -1 data/48hrs_sm_R1.fastq -2 data/48hrs_sm_R2.fastq -p 40 -S results/03.profundidad/48hrs.sam\n# Convertir de SAM a BAM y ordenar\nsamtools view -Sb -O BAM -@ 40 results/03.profundidad/48hrs.sam | samtools sort -@ 40  -o results/03.profundidad/48hrs_sorted.bam\n# Obtener el √≠ndice\nsamtools index results/03.profundidad/48hrs_sorted.bam\nYa que generamos el archivo bam ordenado y el √≠ndice obtuvimos un archivo con la informaci√≥n de cobertura de cada contig dentro del ensamble, este archivo de profundidad se gener√≥ con jgi_summarize_bam_contig_depths que es una herramienta de metabat.\n# jgi\n#Obtener el archivo de profundidad de cada contig\njgi_summarize_bam_contig_depths  --outputDepth results/03.profundidad/48hrs.mgh_depth.txt results/03.profundidad/48hrs_sorted.bam\n\n\n\n\n\n\nAtenci√≥n\n\n\n\nNo las ejecutes, s√≥lo son un ejemplo para que las puedas usar con tus propios datos en el futuro.\n\n\n\n\n\n\n\n\n\n\n\n\nEjercicio 1\n\n\n\nAntes de comenzar, re√∫nete con tu equipo y juntos\n\nrevisen el contenido de los directorios 02.ensambles y 03.profundidad.txt\nDiscutan y en una diapositiva expliquen el flujo que se sigui√≥ para obtener los archivos que est√°n en esos directorios\n\nLa liga de drive para ir trabajando durante el taller es esta: https://drive.google.com/drive/folders/1iKfhMz_JdfImmsCmkPg10r-NC-nrzhQ4?usp=sharing\n\n\n\n\nPor si te pierdes\nS√≥lo por si te pierdes\n\n\n\n\n\n\nDirectorio de trabajo\n\n\n\nSi en alg√∫n momento te pierdes entre directorios, puedes regresar al espacio principal asi:\ncd && cd taller_metagenomica_pozol/\n\n\nAhora si, vamos a agrupar los contigs del metaensamble en bins ‚Ä¶\n\n\nMetabat2\nMetabat2 es una herramienta que agrupa los contigs tomando la cobertura de cada contig y calcula su composici√≥n nucleot√≠dica.\nPara correr metabat necesitamos activar el ambiente conda donde se aloja.\n\n\n\n\n\n\nActivar ambiente para Metabat2\n\n\n\n\nbetterlab\nconda activate binning\n\n\n\n\n\n\nMetabat2. Kang et al., 2015. DOI:10.7717/peerj.1165\n\n\nAhora que ya tenemos el ambiente activado ejecutemos la siguiente linea:\nmetabat2 -i results/02.ensambles/48hrs.fasta -a results/03.profundidad/48hrs.mgh_depth.txt -o results/04.metabat/metabat -t 4 -m 1500\n\n\n\n\n\n\nResponde:\n\n\n\n\n\n\n¬øCu√°ntos bins se formaron?\n\n2. ¬øQu√© par√°metros cambiar√≠as o agregar√≠as?\n\n\n\n\n\n\nAyuda\n\n\n\n\n\n\nls results/04.metabat/\nmetabat2 ‚Äì-help\n\n\n\n\n\n\n\nYa que corrimos Metabat2 vamos a ejecutar MaxBin2, pero primero necesitamos desactivar el ambiente:\n\n\n\n\n\n\nDesactiva el ambiente\n\n\n\nPara desactivar el ambiente debemos correr la siguiente linea:\nconda deactivate\n\n\n\n\nMaxBin2\nMaxBin2 agrupa los contigs de acuerdo a la informaci√≥n de cobertura, composici√≥n nucleot√≠dica y genes de marcadores de copia √∫nica.\nVamos a ejecutarlo, activemos el ambiente conda para maxbin.\n\n\n\n\n\n\nActivar ambiente para MaxBin2\n\n\n\n\nbetterlab\nconda activate metagenomics\n\n\n\n\n\n\nMaxBin2. Wu et al., 2014. https://doi.org/10.1186/2049-2618-2-26\n\n\nCrea el directorio para los resultados de MaxBin2\nmkdir -p results/05.maxbin\nAhora si, vamos a ejecutarlo.\n\nrun_MaxBin.pl -thread 4 -min_contig_length 1500 -contig results/02.ensambles/48hrs.fasta -out results/05.maxbin/48hrs_maxbin -abund results/03.profundidad/48hrs.mgh_depth.txt\n\n\n\n\n\n\nEjercicio:\n\n\n\n\n\n1. ¬øCu√°ntos bins se formaron?\n2. ¬øQu√© porcentaje de completitud tienen??\n\n\n\n\n\n\nSoluci√≥n\n\n\n\n\n\n\nls results/05.maxbin/*.fasta | wc -l\ncat results/05.maxbin/48hrs_maxbin.summary | column -t\n\n\n\n\n\n\n\n\n\n\n\n\n\nDesactiva el ambiente\n\n\n\nconda deactivate\n\n\n\n\nVamb\nVAMB utiliza una combinaci√≥n de enfoques de aprendizaje profundo y t√©cnicas de agrupamiento bas√°ndose en sus patrones de composici√≥n de nucle√≥tidos y en la co-ocurrencia de sus frecuencias de cobertura.\n\n\n\n\n\n\nActiva el ambiente binning\n\n\n\n\nbetterlab\nconda activate binning\n\n\n\nVamos a correr vamb, pero primero crea el directorio de resultados\nmkdir -p results/06.vamb\nEjecutemos vamb:\nvamb --fasta results/02.ensambles/48hrs.fasta --jgi results/03.profundidad/48hrs.mgh_depth.txt --minfasta 500000 --outdir results/06.vamb/48hrs\n\n\n\n\n\n\nImportant\n\n\n\nSi quisieras recuperar los genomas de virus ¬øQu√© par√°metro cambiar√≠as?\n\n\n\n\n\n\n\n\nOtros programas para binning\n\n\n\nRecientemente se public√≥ COMEBin, que utiliza un enfoque distinto a lo que hemos usado en este tutorial. En el siguiente link encontrar√°s el manual y una explicaci√≥n general sobre su funcionamiento.",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "02.Surface sediments comparison from inland and coastal mangroves",
      "Genomas a partir de metagenomas"
    ]
  },
  {
    "objectID": "02.Surface sediments comparison from inland and coastal mangroves.html#refinamiento",
    "href": "02.Surface sediments comparison from inland and coastal mangroves.html#refinamiento",
    "title": "Genomas a partir de metagenomas",
    "section": "Refinamiento",
    "text": "Refinamiento\nYa corrimos tres programas de binning, pero, recordemos que los agrupamientos pueden tener errores:\n\n\n\nContaminaci√≥n de bins\n\n\nPara disminuir la contaminaci√≥n e incrementar la completitud hay algunos programas que pueden ayudarnos. entre ellos est√°n Binning_refiner y DASTool.\n\nCheckM\nAntes de proceder al refinamiento es necesario tener claro c√≥mo se eval√∫a la completitud y contaminaci√≥n de los bins. Para esta evaluaci√≥n se usa CheckM que se ha convertido en una herramienta est√°ndar para la evaluaci√≥n de la calidad de genomas y MAGs, y es usada por la mayor√≠a de programas de refinamiento.\nPara hacer esta evaluaci√≥n, CheckM utiliza una serie de herramientas: tree organiza los genomas en un √°rbol de referencia. tree_qa eval√∫a la cantidad de genes marcadores filogen√©ticos y su ubicaci√≥n en el √°rbol. El comando lineage_set crea un archivo de marcadores espec√≠ficos de linaje, que se usa en el comando analyze para evaluar la integridad y contaminaci√≥n de los genomas. Finalmente, el comando qa genera tablas que resumen la calidad de los genomas.\n\n\n\nCheckM Workflow\n\n\nEn este taller no vamos a correr CheckM porque los programas de refinamiento que usaremos ya lo corren de forma interna, sin embargo, es √∫til correrlo para tener una idea clara sobre la calidad de los bins que obtengamos.\nTe dejamos la siguiente l√≠nea para que la uses en tus proyectos.\n#ejemplo de como correrlo con los bins de vamb\n#se debe activar el ambiente metagenomics\n#checkm lineage_wf results/06.vamb/48hrs/bins results/checkm/ -x fna -t 4  -f results/checkm/checkm_vamb_bins.txt\nY una captura de ejemplo de como se ve la salida de CheckM:\n\n\n\n\n\nY ahora si, a refinar los bins ‚Ä¶ ü•≥\n\n\nBinning_refiner\nBinning_refiner se enfoca en refinar y fusionar los bins para mejorar la integridad y reducir la contaminaci√≥n. Identifica bins que pueden representar el mismo genoma y los fusiona. Despu√©s elimina posibles contaminaciones, durante el proceso, Binning_refiner eval√∫a la calidad de los bins.\n\n\n\n\n\n\n\nBinning_refiner\n\n\nhttps://doi.org/10.1093/bioinformatics/btx086\nNecesitamos crear el directorio de resultados para binning_refiner y un directorio con los bins generados por cada programa\nmkdir -p results/07.binning_refiner/48hrsbins/{metabat,maxbin,vamb}\nAhora vamos a crear ligas simb√≥licas de los bins generados por cada herramienta.\n#metabat\ncd results/07.binning_refiner/48hrsbins/metabat/\n\nln -s ../../../04.metabat/*.fa .\n\n#maxbin\ncd ../maxbin/\nln -s ../../../05.maxbin/*.fasta .\n\n# vamb\ncd ../vamb/\nln -s ../../../06.vamb/48hrs/bins/*.fna .\n\n\n#regresar\ncd ../../\nAhora si, corramos Binning_refiner\nBinning_refiner -i 48hrsbins/ -p 48hrs\nY regresemos a nuestro directorio principal\ncd && cd taller_metagenomica_pozol/\nExploremos los resultados!\ncat results/07.binning_refiner/48hrs_Binning_refiner_outputs/48hrs_sources_and_length.txt\nRefined_bin     Size(Kbp)       Source\n48hrs_1 1535.49 48hrs_maxbin.004.fasta,metabat.5.fa,676.fna\n48hrs_2 1506.01 48hrs_maxbin.002.fasta,metabat.3.fa,6952.fna\n48hrs_3 1319.12 48hrs_maxbin.008.fasta,metabat.2.fa,28067.fna\n48hrs_4 1263.79 48hrs_maxbin.005.fasta,metabat.9.fa,3736.fna\n48hrs_5 1185.25 48hrs_maxbin.001.fasta,metabat.11.fa,15732.fna\n48hrs_6 1052.67 48hrs_maxbin.003.fasta,metabat.4.fa,15732.fna\n48hrs_7 557.49  48hrs_maxbin.006.fasta,metabat.1.fa,28990.fna\nCopia y pega este contenido en la consola de Rscript\n# Cargar las librerias\nlibrary(dplyr)\nlibrary(networkD3)\n\n# revisa tu ubicaci√≥n\ngetwd()\n\n# OJO\nsetwd(\"/home/ELALUMNOQUEERES/taller_metagenomica_pozol\")\n\n# Cargar los datos\nsankey_data &lt;- read.csv(\"results/07.binning_refiner/48hrs_Binning_refiner_outputs/48hrs_sankey.csv\")\n\n# Crear una lista de nodos √∫nicos\nnodes &lt;- data.frame(name = unique(c(sankey_data$C1, sankey_data$C2)))\n\n# Crear el dataframe de enlaces\nlinks &lt;- sankey_data %&gt;%\n  mutate(source = match(C1, nodes$name) - 1,\n         target = match(C2, nodes$name) - 1,\n         value = Length_Kbp) %&gt;%\n  select(source, target, value)\n\n# Crear el gr√°fico Sankey\nsankey_plot &lt;- sankeyNetwork(Links = links, Nodes = nodes,\n                             Source = \"source\", Target = \"target\",\n                             Value = \"value\", NodeID = \"name\",\n                             fontSize = 12, nodeWidth = 30)\n\n# Mostrar el gr√°fico\nsankey_plot\n\n# Guardar\nlibrary(htmlwidgets)\nsaveWidget(sankey_plot, file = \"48hrs_sankey_plot.html\")\n\n\n\nBinning_refiner sankey plot\n\n\n\n\nDASTool\nDASTool es una herramienta utilizada para mejorar la calidad de los bins. Eval√∫a la integridad, combina los resultados de diferentes bineadores y por consenso selecciona los mejores bins de cada herramienta. Una vez que DASTool ha seleccionado los mejores bins, realiza un proceso de refinamiento para optimizar los resultados.\n\n\n\nDASTool\n\n\nVamos a correr DASTool ‚Ä¶\nPrimero crea el directorio para los resultados\nmkdir -p results/08.dastool\nDASTool necesita como entrada un archivo tabular con informaci√≥n de los resultados de cada programa de binning.\nFasta_to_Contig2Bin.sh -i results/04.metabat/ -e fa &gt; results/08.dastool/48hrs_metabat.dastool.tsv\n\nFasta_to_Contig2Bin.sh -i results/05.maxbin/ -e fasta &gt; results/08.dastool/48hrs_maxbin.dastool.tsv\n\nFasta_to_Contig2Bin.sh -i results/06.vamb/48hrs/bins/ -e fna &gt; results/08.dastool/48hrs_vamb.dastool.tsv\nYa que tenemos los archivos tsv podemos empezar con el refinamiento!! ü•≥\nDAS_Tool -i results/08.dastool/48hrs_metabat.dastool.tsv,results/08.dastool/48hrs_maxbin.dastool.tsv,results/08.dastool/48hrs_vamb.dastool.tsv -l metabat,maxbin,vamb -c results/02.ensambles/48hrs.fasta -o results/08.dastool/48hrs -t 4 --write_bins",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "02.Surface sediments comparison from inland and coastal mangroves",
      "Genomas a partir de metagenomas"
    ]
  },
  {
    "objectID": "02.Surface sediments comparison from inland and coastal mangroves.html#dereplicaci√≥n",
    "href": "02.Surface sediments comparison from inland and coastal mangroves.html#dereplicaci√≥n",
    "title": "Genomas a partir de metagenomas",
    "section": "Dereplicaci√≥n",
    "text": "Dereplicaci√≥n\n\ndRep\nLa desreplicaci√≥n es el proceso de identificar conjuntos de genomas que son ‚Äúiguales‚Äù en una lista de genomas y eliminar todos los genomas excepto el ‚Äúmejor‚Äù de cada conjunto redundante. dRep es una herramienta √∫til para esto.\n\n\n\n\n\n\n\ndRep\n\n\nYa que tenemos los resultados de los dos refinadores ejecutaremos dRep para desreplicar y seleccionar el mejor representante de cada bin.\nPrimero vamos a crear el directorio de resultados para dRep.\nmkdir -p results/09.drep/bins\nY entraremos al directorio bins dentro del directorio de resultados para colocar los bins que queremos comparar. En este caso los generados por ambos refinadores.\ncd results/09.drep/bins/\nCon las siguientes lineas podemos copiar los bins en este directorio:\nfor i in $(ls ../../08.dastool/48hrs_DASTool_bins/*.fa) ; do name=$(basename $i .fa); cp $i $name\".fasta\" ; done\n\ncp ../../07.binning_refiner/48hrs_Binning_refiner_outputs/48hrs_refined_bins/*.fasta .\nYa que los copiamos, regresemos al directorio principal.\ncd && cd taller_metagenomica_pozol/\nY ahora si, vamos a correr dRep ‚Ä¶\n\nexport PATH=/miniconda3/envs/metagenomics/bin:$PATH\ndRep dereplicate results/09.drep/ -d -comp 50 -con 10 --SkipSecondary -g results/09.drep/bins/*.fasta\nEste es uno de los plots generados por dRep, que representa los mejores bins desreplicados.\n\n\n\ndRepWinningGenomes\n\n\nVamos a desactivar el ambiente de dRep\nconda deactivate\n\n\n\n\n\n\n\nPara reflexionar\n\n\n\nQu√© har√≠as si antes de desreplicar tienes un bin que tiene 98 % de completitud y 11 % de contaminaci√≥n?. dRep en autom√°tico lo descartar√≠a.\nPropondr√≠as alguna manera para quedarte con este bin y curarlo para reducir su contaminaci√≥n?\nPor suerte hay m√°s programas que pueden ayudarnos a curar nuestros bins manualmente, una herramienta √∫til para esto es mmgenome2\n\n\nPara tomar en consideraci√≥n:\n\n\n\n\n\n\nTip\n\n\n\nYa que tenemos los bins refinados y desreplicados opcionalmente podr√≠as reensamblarlos. La manera ser√≠a mapear las lecturas de toda la muestra a los bins finales y con las lecturas mapeadas y el bin, generar un ensamble gen√≥mico para cada uno. Con esta aproximaci√≥n se genera un MAG m√°s pulido y la contaminaci√≥n se reduce.\nAunque en muchos reportes ver√°s que los autores reensamblan sus MAGs, en otros no lo hacen y no hacerlo no est√° mal, pero hacerlo mejora la calidad.\n\n\n\nAhora te toca a t√≠\n\n\n\n\n\n\nEjercicio 2\n\n\n\nAhora te toca a t√≠.\n\nRe√∫nanse en equipos y repliquen todo el flujo hasta este punto con la muestra que les toca.\nDiscutan cada resultado obtenido.\nEn la carpeta compartida de Drive busquen la presentaci√≥n para el Ejercicio 2, en la diapositiva correspondiente resuman sus resultados obtenidos para que los presenten.\n\nTiempo de actividad (1 hr)\nTiempo de presentaci√≥n de resultados (5 min por equipo)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "02.Surface sediments comparison from inland and coastal mangroves",
      "Genomas a partir de metagenomas"
    ]
  },
  {
    "objectID": "02.SurfaceComparison.html",
    "href": "02.SurfaceComparison.html",
    "title": "Data Prepare",
    "section": "",
    "text": "How similar are coastal and inland mangroves‚ùì\n\n\n\nTo answer this question, only samples that met the selection criteria were selected for comparison with each other. These samples were as follows:\n\nThey hailed from the same depth range.\nThey hailed from the strip, in the case of coastal mangroves.\nThey hailed from the flooding season, in the case of coastal mangroves.",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Data Prepare"
    ]
  },
  {
    "objectID": "02.SurfaceComparison.html#binning",
    "href": "02.SurfaceComparison.html#binning",
    "title": "Genomas a partir de metagenomas",
    "section": "Binning",
    "text": "Binning\nEn la secci√≥n anterior aprendimos como evaluar la calidad, filtrar las lecturas y a ensamblarlas, por lo que este apartado comenzar√° con el ensamble ya generado.\nDe acuerdo con el flujo de an√°lisis (Figura 2), debemos partir de un ensamble y mapear las lecturas a dicho ensamble para obtener un archivo de profundidad de cada contig en el ensamble.\n\n\n\n\n\n\nNota\n\n\n\nEl proceso de mapeo es demandante en tiempo de ejecuci√≥n y recursos. As√≠ que nos dimos a la tarea de generar el archivo de profundidad para comenzar directamente con el binning.\nEl mapeo lo corrimos con bowtie2 que es una herramienta confiable y muy utilizada para alinear lecturas cortas a una referencia, en nuestro caso, la referencia es el ensamble metagen√≥mico de la muestra de 48hrs. Bowtie2 genera un archivo de mapeo (SAM) que debe convertirse a un formato binario (BAM), para esta conversi√≥n usamos samtools que contiene multiples subherramientas para trabajar con archivos de mapeos.\nPara generar este archivo se utilizaron las siguientes lineas de c√≥digo.\n# Formatear el ensamble\nbowtie2-build results/02.ensambles/megahit/48hrs/48hrs.fasta results/03.profundidad/48hrs --threads 40\n# Mapear las lecturas contra el ensamble\nbowtie2 -x results/03.profundidad/48hrs -1 data/48hrs_sm_R1.fastq -2 data/48hrs_sm_R2.fastq -p 40 -S results/03.profundidad/48hrs.sam\n# Convertir de SAM a BAM y ordenar\nsamtools view -Sb -O BAM -@ 40 results/03.profundidad/48hrs.sam | samtools sort -@ 40  -o results/03.profundidad/48hrs_sorted.bam\n# Obtener el √≠ndice\nsamtools index results/03.profundidad/48hrs_sorted.bam\nYa que generamos el archivo bam ordenado y el √≠ndice obtuvimos un archivo con la informaci√≥n de cobertura de cada contig dentro del ensamble, este archivo de profundidad se gener√≥ con jgi_summarize_bam_contig_depths que es una herramienta de metabat.\n# jgi\n#Obtener el archivo de profundidad de cada contig\njgi_summarize_bam_contig_depths  --outputDepth results/03.profundidad/48hrs.mgh_depth.txt results/03.profundidad/48hrs_sorted.bam\n\n\n\n\n\n\nAtenci√≥n\n\n\n\nNo las ejecutes, s√≥lo son un ejemplo para que las puedas usar con tus propios datos en el futuro.\n\n\n\n\n\n\n\n\n\n\n\n\nEjercicio 1\n\n\n\nAntes de comenzar, re√∫nete con tu equipo y juntos\n\nrevisen el contenido de los directorios 02.ensambles y 03.profundidad.txt\nDiscutan y en una diapositiva expliquen el flujo que se sigui√≥ para obtener los archivos que est√°n en esos directorios\n\nLa liga de drive para ir trabajando durante el taller es esta: https://drive.google.com/drive/folders/1iKfhMz_JdfImmsCmkPg10r-NC-nrzhQ4?usp=sharing\n\n\n\n\nPor si te pierdes\nS√≥lo por si te pierdes\n\n\n\n\n\n\nDirectorio de trabajo\n\n\n\nSi en alg√∫n momento te pierdes entre directorios, puedes regresar al espacio principal asi:\ncd && cd taller_metagenomica_pozol/\n\n\nAhora si, vamos a agrupar los contigs del metaensamble en bins ‚Ä¶\n\n\nMetabat2\nMetabat2 es una herramienta que agrupa los contigs tomando la cobertura de cada contig y calcula su composici√≥n nucleot√≠dica.\nPara correr metabat necesitamos activar el ambiente conda donde se aloja.\n\n\n\n\n\n\nActivar ambiente para Metabat2\n\n\n\n\nbetterlab\nconda activate binning\n\n\n\n\n\n\nMetabat2. Kang et al., 2015. DOI:10.7717/peerj.1165\n\n\nAhora que ya tenemos el ambiente activado ejecutemos la siguiente linea:\nmetabat2 -i results/02.ensambles/48hrs.fasta -a results/03.profundidad/48hrs.mgh_depth.txt -o results/04.metabat/metabat -t 4 -m 1500\n\n\n\n\n\n\nResponde:\n\n\n\n\n\n\n¬øCu√°ntos bins se formaron?\n\n2. ¬øQu√© par√°metros cambiar√≠as o agregar√≠as?\n\n\n\n\n\n\nAyuda\n\n\n\n\n\n\nls results/04.metabat/\nmetabat2 ‚Äì-help\n\n\n\n\n\n\n\nYa que corrimos Metabat2 vamos a ejecutar MaxBin2, pero primero necesitamos desactivar el ambiente:\n\n\n\n\n\n\nDesactiva el ambiente\n\n\n\nPara desactivar el ambiente debemos correr la siguiente linea:\nconda deactivate\n\n\n\n\nMaxBin2\nMaxBin2 agrupa los contigs de acuerdo a la informaci√≥n de cobertura, composici√≥n nucleot√≠dica y genes de marcadores de copia √∫nica.\nVamos a ejecutarlo, activemos el ambiente conda para maxbin.\n\n\n\n\n\n\nActivar ambiente para MaxBin2\n\n\n\n\nbetterlab\nconda activate metagenomics\n\n\n\n\n\n\nMaxBin2. Wu et al., 2014. https://doi.org/10.1186/2049-2618-2-26\n\n\nCrea el directorio para los resultados de MaxBin2\nmkdir -p results/05.maxbin\nAhora si, vamos a ejecutarlo.\n\nrun_MaxBin.pl -thread 4 -min_contig_length 1500 -contig results/02.ensambles/48hrs.fasta -out results/05.maxbin/48hrs_maxbin -abund results/03.profundidad/48hrs.mgh_depth.txt\n\n\n\n\n\n\nEjercicio:\n\n\n\n\n\n1. ¬øCu√°ntos bins se formaron?\n2. ¬øQu√© porcentaje de completitud tienen??\n\n\n\n\n\n\nSoluci√≥n\n\n\n\n\n\n\nls results/05.maxbin/*.fasta | wc -l\ncat results/05.maxbin/48hrs_maxbin.summary | column -t\n\n\n\n\n\n\n\n\n\n\n\n\n\nDesactiva el ambiente\n\n\n\nconda deactivate\n\n\n\n\nVamb\nVAMB utiliza una combinaci√≥n de enfoques de aprendizaje profundo y t√©cnicas de agrupamiento bas√°ndose en sus patrones de composici√≥n de nucle√≥tidos y en la co-ocurrencia de sus frecuencias de cobertura.\n\n\n\n\n\n\nActiva el ambiente binning\n\n\n\n\nbetterlab\nconda activate binning\n\n\n\nVamos a correr vamb, pero primero crea el directorio de resultados\nmkdir -p results/06.vamb\nEjecutemos vamb:\nvamb --fasta results/02.ensambles/48hrs.fasta --jgi results/03.profundidad/48hrs.mgh_depth.txt --minfasta 500000 --outdir results/06.vamb/48hrs\n\n\n\n\n\n\nImportant\n\n\n\nSi quisieras recuperar los genomas de virus ¬øQu√© par√°metro cambiar√≠as?\n\n\n\n\n\n\n\n\nOtros programas para binning\n\n\n\nRecientemente se public√≥ COMEBin, que utiliza un enfoque distinto a lo que hemos usado en este tutorial. En el siguiente link encontrar√°s el manual y una explicaci√≥n general sobre su funcionamiento."
  },
  {
    "objectID": "02.SurfaceComparison.html#refinamiento",
    "href": "02.SurfaceComparison.html#refinamiento",
    "title": "Genomas a partir de metagenomas",
    "section": "Refinamiento",
    "text": "Refinamiento\nYa corrimos tres programas de binning, pero, recordemos que los agrupamientos pueden tener errores:\n\n\n\nContaminaci√≥n de bins\n\n\nPara disminuir la contaminaci√≥n e incrementar la completitud hay algunos programas que pueden ayudarnos. entre ellos est√°n Binning_refiner y DASTool.\n\nCheckM\nAntes de proceder al refinamiento es necesario tener claro c√≥mo se eval√∫a la completitud y contaminaci√≥n de los bins. Para esta evaluaci√≥n se usa CheckM que se ha convertido en una herramienta est√°ndar para la evaluaci√≥n de la calidad de genomas y MAGs, y es usada por la mayor√≠a de programas de refinamiento.\nPara hacer esta evaluaci√≥n, CheckM utiliza una serie de herramientas: tree organiza los genomas en un √°rbol de referencia. tree_qa eval√∫a la cantidad de genes marcadores filogen√©ticos y su ubicaci√≥n en el √°rbol. El comando lineage_set crea un archivo de marcadores espec√≠ficos de linaje, que se usa en el comando analyze para evaluar la integridad y contaminaci√≥n de los genomas. Finalmente, el comando qa genera tablas que resumen la calidad de los genomas.\n\n\n\nCheckM Workflow\n\n\nEn este taller no vamos a correr CheckM porque los programas de refinamiento que usaremos ya lo corren de forma interna, sin embargo, es √∫til correrlo para tener una idea clara sobre la calidad de los bins que obtengamos.\nTe dejamos la siguiente l√≠nea para que la uses en tus proyectos.\n#ejemplo de como correrlo con los bins de vamb\n#se debe activar el ambiente metagenomics\n#checkm lineage_wf results/06.vamb/48hrs/bins results/checkm/ -x fna -t 4  -f results/checkm/checkm_vamb_bins.txt\nY una captura de ejemplo de como se ve la salida de CheckM:\n\n\n\n\n\nY ahora si, a refinar los bins ‚Ä¶ ü•≥\n\n\nBinning_refiner\nBinning_refiner se enfoca en refinar y fusionar los bins para mejorar la integridad y reducir la contaminaci√≥n. Identifica bins que pueden representar el mismo genoma y los fusiona. Despu√©s elimina posibles contaminaciones, durante el proceso, Binning_refiner eval√∫a la calidad de los bins.\n\n\n\n\n\n\n\nBinning_refiner\n\n\nhttps://doi.org/10.1093/bioinformatics/btx086\nNecesitamos crear el directorio de resultados para binning_refiner y un directorio con los bins generados por cada programa\nmkdir -p results/07.binning_refiner/48hrsbins/{metabat,maxbin,vamb}\nAhora vamos a crear ligas simb√≥licas de los bins generados por cada herramienta.\n#metabat\ncd results/07.binning_refiner/48hrsbins/metabat/\n\nln -s ../../../04.metabat/*.fa .\n\n#maxbin\ncd ../maxbin/\nln -s ../../../05.maxbin/*.fasta .\n\n# vamb\ncd ../vamb/\nln -s ../../../06.vamb/48hrs/bins/*.fna .\n\n\n#regresar\ncd ../../\nAhora si, corramos Binning_refiner\nBinning_refiner -i 48hrsbins/ -p 48hrs\nY regresemos a nuestro directorio principal\ncd && cd taller_metagenomica_pozol/\nExploremos los resultados!\ncat results/07.binning_refiner/48hrs_Binning_refiner_outputs/48hrs_sources_and_length.txt\nRefined_bin     Size(Kbp)       Source\n48hrs_1 1535.49 48hrs_maxbin.004.fasta,metabat.5.fa,676.fna\n48hrs_2 1506.01 48hrs_maxbin.002.fasta,metabat.3.fa,6952.fna\n48hrs_3 1319.12 48hrs_maxbin.008.fasta,metabat.2.fa,28067.fna\n48hrs_4 1263.79 48hrs_maxbin.005.fasta,metabat.9.fa,3736.fna\n48hrs_5 1185.25 48hrs_maxbin.001.fasta,metabat.11.fa,15732.fna\n48hrs_6 1052.67 48hrs_maxbin.003.fasta,metabat.4.fa,15732.fna\n48hrs_7 557.49  48hrs_maxbin.006.fasta,metabat.1.fa,28990.fna\nCopia y pega este contenido en la consola de Rscript\n# Cargar las librerias\nlibrary(dplyr)\nlibrary(networkD3)\n\n# revisa tu ubicaci√≥n\ngetwd()\n\n# OJO\nsetwd(\"/home/ELALUMNOQUEERES/taller_metagenomica_pozol\")\n\n# Cargar los datos\nsankey_data &lt;- read.csv(\"results/07.binning_refiner/48hrs_Binning_refiner_outputs/48hrs_sankey.csv\")\n\n# Crear una lista de nodos √∫nicos\nnodes &lt;- data.frame(name = unique(c(sankey_data$C1, sankey_data$C2)))\n\n# Crear el dataframe de enlaces\nlinks &lt;- sankey_data %&gt;%\n  mutate(source = match(C1, nodes$name) - 1,\n         target = match(C2, nodes$name) - 1,\n         value = Length_Kbp) %&gt;%\n  select(source, target, value)\n\n# Crear el gr√°fico Sankey\nsankey_plot &lt;- sankeyNetwork(Links = links, Nodes = nodes,\n                             Source = \"source\", Target = \"target\",\n                             Value = \"value\", NodeID = \"name\",\n                             fontSize = 12, nodeWidth = 30)\n\n# Mostrar el gr√°fico\nsankey_plot\n\n# Guardar\nlibrary(htmlwidgets)\nsaveWidget(sankey_plot, file = \"48hrs_sankey_plot.html\")\n\n\n\nBinning_refiner sankey plot\n\n\n\n\nDASTool\nDASTool es una herramienta utilizada para mejorar la calidad de los bins. Eval√∫a la integridad, combina los resultados de diferentes bineadores y por consenso selecciona los mejores bins de cada herramienta. Una vez que DASTool ha seleccionado los mejores bins, realiza un proceso de refinamiento para optimizar los resultados.\n\n\n\nDASTool\n\n\nVamos a correr DASTool ‚Ä¶\nPrimero crea el directorio para los resultados\nmkdir -p results/08.dastool\nDASTool necesita como entrada un archivo tabular con informaci√≥n de los resultados de cada programa de binning.\nFasta_to_Contig2Bin.sh -i results/04.metabat/ -e fa &gt; results/08.dastool/48hrs_metabat.dastool.tsv\n\nFasta_to_Contig2Bin.sh -i results/05.maxbin/ -e fasta &gt; results/08.dastool/48hrs_maxbin.dastool.tsv\n\nFasta_to_Contig2Bin.sh -i results/06.vamb/48hrs/bins/ -e fna &gt; results/08.dastool/48hrs_vamb.dastool.tsv\nYa que tenemos los archivos tsv podemos empezar con el refinamiento!! ü•≥\nDAS_Tool -i results/08.dastool/48hrs_metabat.dastool.tsv,results/08.dastool/48hrs_maxbin.dastool.tsv,results/08.dastool/48hrs_vamb.dastool.tsv -l metabat,maxbin,vamb -c results/02.ensambles/48hrs.fasta -o results/08.dastool/48hrs -t 4 --write_bins"
  },
  {
    "objectID": "02.SurfaceComparison.html#dereplicaci√≥n",
    "href": "02.SurfaceComparison.html#dereplicaci√≥n",
    "title": "Genomas a partir de metagenomas",
    "section": "Dereplicaci√≥n",
    "text": "Dereplicaci√≥n\n\ndRep\nLa desreplicaci√≥n es el proceso de identificar conjuntos de genomas que son ‚Äúiguales‚Äù en una lista de genomas y eliminar todos los genomas excepto el ‚Äúmejor‚Äù de cada conjunto redundante. dRep es una herramienta √∫til para esto.\n\n\n\n\n\n\n\ndRep\n\n\nYa que tenemos los resultados de los dos refinadores ejecutaremos dRep para desreplicar y seleccionar el mejor representante de cada bin.\nPrimero vamos a crear el directorio de resultados para dRep.\nmkdir -p results/09.drep/bins\nY entraremos al directorio bins dentro del directorio de resultados para colocar los bins que queremos comparar. En este caso los generados por ambos refinadores.\ncd results/09.drep/bins/\nCon las siguientes lineas podemos copiar los bins en este directorio:\nfor i in $(ls ../../08.dastool/48hrs_DASTool_bins/*.fa) ; do name=$(basename $i .fa); cp $i $name\".fasta\" ; done\n\ncp ../../07.binning_refiner/48hrs_Binning_refiner_outputs/48hrs_refined_bins/*.fasta .\nYa que los copiamos, regresemos al directorio principal.\ncd && cd taller_metagenomica_pozol/\nY ahora si, vamos a correr dRep ‚Ä¶\n\nexport PATH=/miniconda3/envs/metagenomics/bin:$PATH\ndRep dereplicate results/09.drep/ -d -comp 50 -con 10 --SkipSecondary -g results/09.drep/bins/*.fasta\nEste es uno de los plots generados por dRep, que representa los mejores bins desreplicados.\n\n\n\ndRepWinningGenomes\n\n\nVamos a desactivar el ambiente de dRep\nconda deactivate\n\n\n\n\n\n\n\nPara reflexionar\n\n\n\nQu√© har√≠as si antes de desreplicar tienes un bin que tiene 98 % de completitud y 11 % de contaminaci√≥n?. dRep en autom√°tico lo descartar√≠a.\nPropondr√≠as alguna manera para quedarte con este bin y curarlo para reducir su contaminaci√≥n?\nPor suerte hay m√°s programas que pueden ayudarnos a curar nuestros bins manualmente, una herramienta √∫til para esto es mmgenome2\n\n\nPara tomar en consideraci√≥n:\n\n\n\n\n\n\nTip\n\n\n\nYa que tenemos los bins refinados y desreplicados opcionalmente podr√≠as reensamblarlos. La manera ser√≠a mapear las lecturas de toda la muestra a los bins finales y con las lecturas mapeadas y el bin, generar un ensamble gen√≥mico para cada uno. Con esta aproximaci√≥n se genera un MAG m√°s pulido y la contaminaci√≥n se reduce.\nAunque en muchos reportes ver√°s que los autores reensamblan sus MAGs, en otros no lo hacen y no hacerlo no est√° mal, pero hacerlo mejora la calidad.\n\n\n\nAhora te toca a t√≠\n\n\n\n\n\n\nEjercicio 2\n\n\n\nAhora te toca a t√≠.\n\nRe√∫nanse en equipos y repliquen todo el flujo hasta este punto con la muestra que les toca.\nDiscutan cada resultado obtenido.\nEn la carpeta compartida de Drive busquen la presentaci√≥n para el Ejercicio 2, en la diapositiva correspondiente resuman sus resultados obtenidos para que los presenten.\n\nTiempo de actividad (1 hr)\nTiempo de presentaci√≥n de resultados (5 min por equipo)"
  },
  {
    "objectID": "02.SurfaceComparison.html#select-samples",
    "href": "02.SurfaceComparison.html#select-samples",
    "title": "Data Prepare",
    "section": "01. Select samples",
    "text": "01. Select samples\n## Los filtros que hizo Yaxche",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Data Prepare"
    ]
  },
  {
    "objectID": "02.SurfaceComparison.html#data-preparation",
    "href": "02.SurfaceComparison.html#data-preparation",
    "title": "Data Prepare",
    "section": "02. Data preparation",
    "text": "02. Data preparation\n\n#load\nphyseq_qiime &lt;- readRDS(\"rds/compare_mangroves/physeq_objeto_Estero.rds\")\n\n02.1 Remove empty ASVs and singletons\n\n#check data\nlibrary(microbiome)\nlibrary(dplyr)\n\n\n#library(microbiome)\nmicrobiome::summarize_phyloseq(physeq_qiime)\n\nCompositional = NO2\n\n\n1] Min. number of reads = 35812] Max. number of reads = 1504313] Total number of reads = 19263064] Average number of reads = 77052.245] Median number of reads = 783677] Sparsity = 0.5742662632375196] Any OTU sum to 1 or less? YES8] Number of singletons = 849] Percent of OTUs that are singletons \n        (i.e. exactly one read detected across all samples)010] Number of sample variables are: 25SampleIDBioSampleIDSRASampleNameCollection_datedepthsiteelevationBroad_scale_environmental_contextLocal_scale_environmental_contextEnvironmental_mediumLatitude_and_LongitudeGeographic.LocationStudy_zoneEcological_typeParametrosTemperaturaSalinidadpHRedox.mVS.2SO4seasonfilter2\n\n\n[[1]]\n[1] \"1] Min. number of reads = 3581\"\n\n[[2]]\n[1] \"2] Max. number of reads = 150431\"\n\n[[3]]\n[1] \"3] Total number of reads = 1926306\"\n\n[[4]]\n[1] \"4] Average number of reads = 77052.24\"\n\n[[5]]\n[1] \"5] Median number of reads = 78367\"\n\n[[6]]\n[1] \"7] Sparsity = 0.574266263237519\"\n\n[[7]]\n[1] \"6] Any OTU sum to 1 or less? YES\"\n\n[[8]]\n[1] \"8] Number of singletons = 84\"\n\n[[9]]\n[1] \"9] Percent of OTUs that are singletons \\n        (i.e. exactly one read detected across all samples)0\"\n\n[[10]]\n[1] \"10] Number of sample variables are: 25\"\n\n[[11]]\n [1] \"SampleID\"                          \"BioSample\"                        \n [3] \"ID\"                                \"SRA\"                              \n [5] \"SampleName\"                        \"Collection_date\"                  \n [7] \"depth\"                             \"site\"                             \n [9] \"elevation\"                         \"Broad_scale_environmental_context\"\n[11] \"Local_scale_environmental_context\" \"Environmental_medium\"             \n[13] \"Latitude_and_Longitude\"            \"Geographic.Location\"              \n[15] \"Study_zone\"                        \"Ecological_type\"                  \n[17] \"Parametros\"                        \"Temperatura\"                      \n[19] \"Salinidad\"                         \"pH\"                               \n[21] \"Redox.mV\"                          \"S.2\"                              \n[23] \"SO4\"                               \"season\"                           \n[25] \"filter\"                           \n\n\n\n# get sums\ntaxa_sums &lt;- taxa_sums(physeq_qiime)\n# Identify ASVs with sum 0 present in all samples\nzero_taxa &lt;- taxa_names(physeq_qiime)[taxa_sums == 0]\n# Remove ASVs with sum 0\nphyseq_qiime2 &lt;- prune_taxa(!taxa_names(physeq_qiime) %in%\n                                zero_taxa, physeq_qiime)\n\n# Remove singletons\nphyseq_qiime3 &lt;- filter_taxa(physeq_qiime2, function(x) sum(x) &gt; 1, TRUE)\n\n02.2 Rename mangrove system\n\n# Extract metadata\nmetadata &lt;- as(sample_data(physeq_qiime3), \"data.frame\")\n\n# Rename specific levels in the Mangrove system column\n#library(dplyr)\nmetadata &lt;- metadata %&gt;%\n  mutate(`Mangrove system` = case_when(\n    Study_zone == \"Rio San Pedro\" ~ \"San Pedro River\",\n    Study_zone == \"Laguna Cacahuate\" ~ \"Fossil Lagoon\",\n    Study_zone == \"Estero_pargo\" ~ \"T√©rminos Lagoon\",\n    Study_zone == \"Celest√∫n\" ~ \"Celest√∫n Lagoon\",\n    TRUE ~ Study_zone))\n\n02.3 Add mangrove type\n\n# Extract sample_data\nsample_data_df &lt;- as(sample_data(physeq_qiime3), \"data.frame\")\n\n# Join sample_data with metadata to add Mangrove system\nsample_data_df &lt;- sample_data_df %&gt;%\n  left_join(dplyr::select(metadata, SampleID, `Mangrove system`), by = \"SampleID\")\n\n# Create Mangrove_type\nsample_data_df &lt;- sample_data_df %&gt;%\n  mutate(Mangrove_type = case_when(\n    `Mangrove system` %in% c(\"Fossil Lagoon\", \"San Pedro River\") ~ \"Interior\",\n    `Mangrove system` %in% c(\"Celest√∫n Lagoon\", \"T√©rminos Lagoon\") ~ \"Coastal\",\n    TRUE ~ NA_character_\n  ))\n\n# add .fastq.gz to SampleID \nsample_data_df$SampleID &lt;- gsub(\"_R1$\", \"_R1.fastq.gz\", sample_data_df$SampleID)\n\n# add rownames as SampleID\nrownames(sample_data_df) &lt;- sample_data_df$SampleID\n\n# update sample_data in phyloseq object\nsample_data(physeq_qiime3) &lt;- sample_data(sample_data_df)\n\n# check\ntail(sample_data(physeq_qiime3))\n\n                                   SampleID    BioSample  ID          SRA\nSRR9973332                       SRR9973332 SAMN12325037 Cel        TM5.8\nSRR9973344                       SRR9973344 SAMN12325034 Cel        TM5.5\nSRR9973347                       SRR9973347 SAMN12325033 Cel        TM5.4\nzr2502_14_R1.fastq.gz zr2502_14_R1.fastq.gz                E zr2502_14_R1\nzr2502_1_R1.fastq.gz   zr2502_1_R1.fastq.gz                E  zr2502_1_R1\nzr2502_37_R1.fastq.gz zr2502_37_R1.fastq.gz                E zr2502_37_R1\n                      SampleName Collection_date depth site elevation\nSRR9973332            SRS5272925      2018-10-04  0.15              3\nSRR9973344            SRS5272913      2018-10-04  0.15              3\nSRR9973347            SRS5272910      2018-10-04  0.15              3\nzr2502_14_R1.fastq.gz                 17/01/2018     5             NA\nzr2502_1_R1.fastq.gz                  17/01/2018     5             NA\nzr2502_37_R1.fastq.gz                 30/05/2018     5             NA\n                      Broad_scale_environmental_context\nSRR9973332                                ENVO:01000181\nSRR9973344                                ENVO:01000181\nSRR9973347                                ENVO:01000181\nzr2502_14_R1.fastq.gz                                  \nzr2502_1_R1.fastq.gz                                   \nzr2502_37_R1.fastq.gz                                  \n                      Local_scale_environmental_context Environmental_medium\nSRR9973332                                ENVO:00000057             sediment\nSRR9973344                                ENVO:00000057             sediment\nSRR9973347                                ENVO:00000057             sediment\nzr2502_14_R1.fastq.gz                                                       \nzr2502_1_R1.fastq.gz                                                        \nzr2502_37_R1.fastq.gz                                                       \n                      Latitude_and_Longitude Geographic.Location   Study_zone\nSRR9973332                   20.85 N 90.37 W      Mexico:Yucatan     Celest√∫n\nSRR9973344                   20.85 N 90.37 W      Mexico:Yucatan     Celest√∫n\nSRR9973347                   20.85 N 90.37 W      Mexico:Yucatan     Celest√∫n\nzr2502_14_R1.fastq.gz                            Mexico:Campeche Estero_pargo\nzr2502_1_R1.fastq.gz                             Mexico:Campeche Estero_pargo\nzr2502_37_R1.fastq.gz                            Mexico:Campeche Estero_pargo\n                      Ecological_type Parametros Temperatura Salinidad pH\nSRR9973332                     Fringe         no          NA        NA NA\nSRR9973344                     Fringe         no          NA        NA NA\nSRR9973347                     Fringe         no          NA        NA NA\nzr2502_14_R1.fastq.gz          Fringe         no          NA        NA NA\nzr2502_1_R1.fastq.gz           Fringe         no          NA        NA NA\nzr2502_37_R1.fastq.gz          Fringe         no          NA        NA NA\n                      Redox.mV S.2 SO4 season filter Mangrove.system\nSRR9973332                  NA  NA  NA  flood     si Celest√∫n Lagoon\nSRR9973344                  NA  NA  NA  flood     si Celest√∫n Lagoon\nSRR9973347                  NA  NA  NA  flood     si Celest√∫n Lagoon\nzr2502_14_R1.fastq.gz       NA  NA  NA  flood     si T√©rminos Lagoon\nzr2502_1_R1.fastq.gz        NA  NA  NA  flood     si T√©rminos Lagoon\nzr2502_37_R1.fastq.gz       NA  NA  NA  flood     si T√©rminos Lagoon\n                      Mangrove_type\nSRR9973332                  Coastal\nSRR9973344                  Coastal\nSRR9973347                  Coastal\nzr2502_14_R1.fastq.gz       Coastal\nzr2502_1_R1.fastq.gz        Coastal\nzr2502_37_R1.fastq.gz       Coastal\n\n\n02.4 Create color pallete\n\n#Mangrove system colors\nloc_colors &lt;- c(\"Fossil Lagoon\"= \"#A7fcc1\",\n                \"San Pedro River\" = \"#26B170\",\n                \"T√©rminos Lagoon\" = \"#329D9C\",\n                \"Celest√∫n Lagoon\" = \"#41e8d3\")\n\n#Mangrove type colors\nmt_colors &lt;- c(\"Interior\"= \"#A7fcc1\",\n                \"Coastal\" = \"#41e8d3\")\n\n02.5 Check samples\n\n# Samples Plot\nmetadata &lt;- as(sample_data(physeq_qiime3), \"data.frame\")\n\nsamples_plot &lt;- ggplot(metadata, aes(x = Mangrove.system, y = ..count..,\nfill = Mangrove.system)) + geom_bar(position = \"dodge\") +\n  facet_wrap(~ Mangrove_type, scales = \"free_x\") +\n  labs(title = \"Samples of the analysis\", y = \"Number of Samples\",\n       x = \"Mangrove system\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 0)) +\n  scale_fill_manual(values = loc_colors)\n\n# show plot\nprint(samples_plot)\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\n‚Ñπ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n\n\n02.6 Save objects in RDS to next analysis\n\nsaveRDS(physeq_qiime3, \"rds/compare_mangroves/physeq_qiime3.rds\")",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Data Prepare"
    ]
  },
  {
    "objectID": "02.1.AlphaDiversity.html",
    "href": "02.1.AlphaDiversity.html",
    "title": "Alpha diversity",
    "section": "",
    "text": "Tip\n\n\n\nAlpha diversity indices were calculated with Hill numbers (q0 = observed richness, q1 = Shannon Exp and q2 = Inv Simpson). The significance of the observed differences among mangrove systems was determined by employing a linear model, given the imbalanced sample numbers.",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Alpha diversity"
    ]
  },
  {
    "objectID": "02.1.AlphaDiversity.html#data-preparation",
    "href": "02.1.AlphaDiversity.html#data-preparation",
    "title": "Alpha diversity",
    "section": "",
    "text": "#load\nphyseq_qiime3 &lt;- readRDS(\"rds/compare_mangroves/metadata.rds\")\nmetadata &lt;- (\"rds/compare_mangroves/metadata.rds\")",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "Surface mangroves sediments comparison",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Alpha diversity"
    ]
  },
  {
    "objectID": "02.1.AlphaDiversity.html#get-hill-numbers",
    "href": "02.1.AlphaDiversity.html#get-hill-numbers",
    "title": "Alpha diversity",
    "section": "01. Get Hill numbers",
    "text": "01. Get Hill numbers\n\n# Calculate hill numbers\n#library(hilldiv)\n\nq0 &lt;- hill_div(otu_data, qvalue = 0)\nq1 &lt;- hill_div(otu_data, qvalue = 1)\nq2 &lt;- hill_div(otu_data, qvalue = 2)\n\n# Merge metadata with Hill numbers\n#library(tidyverse)\nq012 &lt;- cbind(q0, q1, q2) %&gt;% as.data.frame() %&gt;%\n  rownames_to_column(var = \"SampleID\")\n\n# join\nmetadata_with_hill &lt;- q012 %&gt;%\n  inner_join(metadata, by = c(\"SampleID\"=\"SampleID\"))\n\n# show\nmetadata_with_hill %&gt;% head()\n\n  SampleID   q0  q1    q2 BioSample  ID    SRA SampleName Collection_date depth\n1   S1A015 1266 330 106.0    S1A015 RSP S1A015                 2023-09-28  0-15\n2    S1B07 1502 164  36.0     S1B07 RSP  S1B07                 2023-09-28  0-15\n3    S2B07 1378 351 106.8     S2B07 RSP  S2B07                 2023-09-28  0-15\n4    S3A07 1190 154  37.6     S3A07 RSP  S3A07                 2023-09-28  0-15\n5    S4B07 1563 388 120.4     S4B07 RSP  S4B07                 2023-09-29  0-15\n6    S5A07 1160 131  32.1     S5A07 RSP  S5A07                 2023-09-29  0-15\n  site elevation Broad_scale_environmental_context\n1   1A        NA                                  \n2   1B        NA                                  \n3   2B        NA                                  \n4   3A        NA                                  \n5   4B        NA                                  \n6   5A        NA                                  \n  Local_scale_environmental_context Environmental_medium Latitude_and_Longitude\n1                                                                              \n2                                                                              \n3                                                                              \n4                                                                              \n5                                                                              \n6                                                                              \n  Geographic.Location    Study_zone Ecological_type Parametros Temperatura\n1      Mexico:Tabasco Rio San Pedro          Fringe         no          NA\n2      Mexico:Tabasco Rio San Pedro          Fringe         no          NA\n3      Mexico:Tabasco Rio San Pedro          Fringe         no          NA\n4      Mexico:Tabasco Rio San Pedro          Fringe         no          NA\n5      Mexico:Tabasco Rio San Pedro          Fringe         no          NA\n6      Mexico:Tabasco Rio San Pedro          Fringe         no          NA\n  Salinidad pH Redox.mV S.2 SO4 season filter Mangrove.system Mangrove_type\n1        NA NA       NA  NA  NA  flood     si San Pedro River      Interior\n2        NA NA       NA  NA  NA  flood     si San Pedro River      Interior\n3        NA NA       NA  NA  NA  flood     si San Pedro River      Interior\n4        NA NA       NA  NA  NA  flood     si San Pedro River      Interior\n5        NA NA       NA  NA  NA  flood     si San Pedro River      Interior\n6        NA NA       NA  NA  NA  flood     si San Pedro River      Interior\n\n#save table\nwrite.table(metadata_with_hill, \"Tables/SurfaceComparison/Metadata_with_hill.tsv\",\n            quote = FALSE, sep = \"\\t\", row.names = TRUE, col.names=TRUE)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Alpha diversity"
    ]
  },
  {
    "objectID": "02.1.AlphaDiversity.html#get-hill-means",
    "href": "02.1.AlphaDiversity.html#get-hill-means",
    "title": "Alpha diversity",
    "section": "02. Get Hill means",
    "text": "02. Get Hill means\n\n# Reorder q values\nmeta_qs &lt;- metadata_with_hill %&gt;%\n  pivot_longer(cols = q0:q2, names_to = \"q\", values_to = \"value\") %&gt;%\n  filter(q %in% c(\"q0\", \"q1\", \"q2\")) %&gt;%\n  mutate(\n    qs = case_when(\n      q == \"q0\" ~ \"q0=Observed\",\n      q == \"q1\" ~ \"q1=Exp Shannon\",\n      q == \"q2\" ~ \"q2=Inv Simpson\",\n    ))\n\n#Get means of Hill numbers\nmeans &lt;- meta_qs %&gt;% group_by(Mangrove_type, Mangrove.system, qs) %&gt;%\n  summarise(means = mean(value, na.rm = TRUE),\n            sd = sd(value, na.rm = TRUE),\n            .groups = 'drop')\n\nprint(means)\n\n# A tibble: 12 √ó 5\n   Mangrove_type Mangrove.system qs              means    sd\n   &lt;chr&gt;         &lt;chr&gt;           &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt;\n 1 Coastal       Celest√∫n Lagoon q0=Observed    1202   207. \n 2 Coastal       Celest√∫n Lagoon q1=Exp Shannon  496.   87.6\n 3 Coastal       Celest√∫n Lagoon q2=Inv Simpson  234.   40.5\n 4 Coastal       T√©rminos Lagoon q0=Observed     140    61.8\n 5 Coastal       T√©rminos Lagoon q1=Exp Shannon   78.8  48.9\n 6 Coastal       T√©rminos Lagoon q2=Inv Simpson   51.2  32.7\n 7 Interior      Fossil Lagoon   q0=Observed    1230   134. \n 8 Interior      Fossil Lagoon   q1=Exp Shannon  300.   75.1\n 9 Interior      Fossil Lagoon   q2=Inv Simpson   86.5  26.9\n10 Interior      San Pedro River q0=Observed    1368.  166. \n11 Interior      San Pedro River q1=Exp Shannon  254.  105. \n12 Interior      San Pedro River q2=Inv Simpson   71.7  38.4\n\n#save table\nwrite.table(means, \"Tables/SurfaceComparison/Hill_means_sd.tsv\", quote = FALSE,\n            sep = \"\\t\", row.names = TRUE, col.names=TRUE)\n\n# group by mangrove type\nmeans_mangrove_type &lt;- meta_qs %&gt;% group_by(Mangrove_type, qs) %&gt;%\n  summarise(means = mean(value, na.rm = TRUE),\n            sd = sd(value, na.rm = TRUE),\n            .groups = 'drop')\n\nprint(means_mangrove_type)\n\n# A tibble: 6 √ó 4\n  Mangrove_type qs              means    sd\n  &lt;chr&gt;         &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt;\n1 Coastal       q0=Observed     974.  488. \n2 Coastal       q1=Exp Shannon  407.  195. \n3 Coastal       q2=Inv Simpson  194.   86.3\n4 Interior      q0=Observed    1318.  163. \n5 Interior      q1=Exp Shannon  271.   94.0\n6 Interior      q2=Inv Simpson   77.1  34.0\n\nwrite.table(means, \"Tables/SurfaceComparison/Hill_means_sd_mangrove_type.tsv\", quote = FALSE,\n            sep = \"\\t\", row.names = TRUE, col.names=TRUE)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Alpha diversity"
    ]
  },
  {
    "objectID": "02.1.AlphaDiversity.html#get-sequencing-effort",
    "href": "02.1.AlphaDiversity.html#get-sequencing-effort",
    "title": "Alpha diversity",
    "section": "03. Get sequencing effort",
    "text": "03. Get sequencing effort\n\n### Sample effort\n#library(vegan)\nmat &lt;- as(t(otu_table(physeq_qiime3)), \"matrix\")\nraremax &lt;- min(rowSums(mat))\n\n# plot\nsystem.time(rarecurve(mat, step = 100, sample = raremax, col = \"green4\", \n                      label = FALSE))\n\n\n\n\n\n\n\n   user  system elapsed \n  4.698   0.143   4.846 \n\n# save\npdf(\"Figures/SurfaceComparison/sample_effort.pdf\")\nsystem.time(rarecurve(mat, step = 100, sample = raremax, col = \"green4\", \n                      label = FALSE))\n\n   user  system elapsed \n  4.939   0.137   5.078 \n\ndev.off()\n\nquartz_off_screen \n                2",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Alpha diversity"
    ]
  },
  {
    "objectID": "02.1.AlphaDiversity.html#get-significant-differences",
    "href": "02.1.AlphaDiversity.html#get-significant-differences",
    "title": "Alpha diversity",
    "section": "04. Get significant differences",
    "text": "04. Get significant differences\n\n\n\n\n\n\nRemember\n\n\n\nThe significance of the observed differences among mangrove systems was determined by employing a linear model, given the imbalanced sample numbers.\n\n\n\n# change variable to factor\nmetadata_with_hill$Mangrove.system &lt;- \n  factor(metadata_with_hill$Mangrove.system)\n\n# Change to Fossil Lagoon reference\nmetadata_with_hill$Mangrove.system &lt;- \n  relevel(metadata_with_hill$Mangrove.system,ref = \"Fossil Lagoon\")\n\nq0 Observed richness\n\n# linear model adjust\nq0lm &lt;- lm(q0 ~ Mangrove.system, data = metadata_with_hill)\n# summary\nsummary(q0lm)\n\n\nCall:\nlm(formula = q0 ~ Mangrove.system, data = metadata_with_hill)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-334.0 -102.4    9.6  140.0  247.0 \n\nCoefficients:\n                               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                      1230.0       88.3   13.93  4.5e-12 ***\nMangrove.systemCelest√∫n Lagoon    -28.0      103.1   -0.27     0.79    \nMangrove.systemSan Pedro River    138.4      110.7    1.25     0.22    \nMangrove.systemT√©rminos Lagoon  -1090.0      134.9   -8.08  7.0e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 177 on 21 degrees of freedom\nMultiple R-squared:  0.84,  Adjusted R-squared:  0.817 \nF-statistic: 36.7 on 3 and 21 DF,  p-value: 1.56e-08\n\n# check model reliability\nshapiro.test(residuals(q0lm))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(q0lm)\nW = 1, p-value = 0.4\n\n\n\n# get differences with emmeans\n#library(emmeans)\nq0_lm_means &lt;- emmeans(q0lm, pairwise ~ Mangrove.system)\n\n# get significance letters\n#library(multcomp)\ncld_results &lt;- cld(object = q0_lm_means$emmeans, Letters = letters)\n\n# Convertir a data frame\nq0_emmeans_df &lt;- as.data.frame(cld_results)\nq0_emmeans_df\n\n Mangrove.system emmean    SE df lower.CL upper.CL .group\n T√©rminos Lagoon    140 102.0 21      -72      352  a    \n Celest√∫n Lagoon   1202  53.3 21     1091     1313   b   \n Fossil Lagoon     1230  88.3 21     1046     1414   b   \n San Pedro River   1368  66.8 21     1230     1507   b   \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 4 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n# Reorder samples\nmetadata_with_hill$Mangrove.system &lt;- factor(\n  metadata_with_hill$Mangrove.system,\n  levels = c(\"Fossil Lagoon\", \"San Pedro River\", \n             \"T√©rminos Lagoon\", \"Celest√∫n Lagoon\"))\n\n\n# boxplot with significance\nq0plot &lt;- ggplot(metadata_with_hill, aes(x = Mangrove.system, y = q0, fill = Mangrove.system)) +\n  geom_boxplot() +\n  #geom_jitter(aes(fill = Mangrove.system), width = 0.1, alpha = 0.4) +\n  geom_text(data = q0_emmeans_df, aes(y = emmean, label = .group), vjust = -3,\n          color = \"black\", fontface = \"bold\", position = position_dodge(0.9)) +\n  labs(title = \"Observed\", y = NULL, x = NULL) + #,\n  #caption = \"letters by lm emmeans\") +\n  theme_bw() + scale_fill_manual(values = loc_colors) +\n  theme(legend.position = \"none\", axis.text.x = element_blank())\n\nq1 Diversity Exp Shannon\n\n# linear model\nq1lm &lt;- lm(q1 ~ Mangrove.system, data = metadata_with_hill)\n\n#check model reliability\nshapiro.test(residuals(q1lm))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(q1lm)\nW = 0.9, p-value = 0.2\n\n# significance\nq1_lm_means &lt;- emmeans(q1lm, pairwise ~ Mangrove.system)\ncld_results &lt;- cld(object = q1_lm_means$emmeans, Letters = letters)\n\n# Convert to data frame\nq1_emmeans_df &lt;- as.data.frame(cld_results)\nq1_emmeans_df\n\n Mangrove.system emmean   SE df lower.CL upper.CL .group\n T√©rminos Lagoon     79 51.1 21      -28      185  a    \n San Pedro River    254 33.5 21      185      324   b   \n Fossil Lagoon      300 44.3 21      208      392   b   \n Celest√∫n Lagoon    496 26.7 21      441      552    c  \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 4 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n\n\n# boxplot\nq1plot &lt;- ggplot(metadata_with_hill, aes(x = Mangrove.system , y = q1, fill = Mangrove.system)) +\n  geom_boxplot() +\n  #geom_jitter(aes(fill = Mangrove.system), width = 0.1, alpha = 0.4) +\n  geom_text(data = q1_emmeans_df, aes(y = emmean, label = .group), vjust = -5,\n          color = \"black\", fontface = \"bold\", position = position_dodge(0.9)) +   labs(title = \"Exp Shannon\", y = NULL, x = NULL) + #,\n  #caption = \"letters by lm emmeans\") +\n  theme_bw() + scale_fill_manual(values = loc_colors) +\n  theme(legend.position = \"none\", axis.text.x = element_blank())\n\nq2 Dominance Inv Simpson\n\n# Model\nq2lm &lt;- lm(q2 ~ Mangrove.system, data = metadata_with_hill)\n#check model reliability\nshapiro.test(residuals(q2lm))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(q2lm)\nW = 0.9, p-value = 0.2\n\n# get significance\nq2_lm_means &lt;- emmeans(q2lm, pairwise ~ Mangrove.system)\ncld_results &lt;- cld(object = q2_lm_means$emmeans, Letters = letters)\n\n# Convert to data frame\nq2_emmeans_df &lt;- as.data.frame(cld_results)\nq2_emmeans_df\n\n Mangrove.system emmean   SE df lower.CL upper.CL .group\n T√©rminos Lagoon   51.2 21.6 21      6.1     96.2  a    \n San Pedro River   71.7 14.2 21     42.3    101.2  a    \n Fossil Lagoon     86.5 18.8 21     47.5    125.5  a    \n Celest√∫n Lagoon  233.5 11.3 21    210.0    257.0   b   \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 4 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n\n\n# boxplot\nq2plot &lt;- ggplot(metadata_with_hill, aes(x = Mangrove.system, y = q2, fill = Mangrove.system)) +\n  geom_boxplot() +\n  #geom_jitter(aes(fill = Mangrove.system), width = 0.1, alpha = 0.4) +\n  geom_text(data = q2_emmeans_df, aes(y = emmean, label = .group), vjust = -5,\n            color = \"black\", fontface = \"bold\", position = position_dodge(0.9)) +\n  labs(title = \"Inv Simpson\", y = NULL, x = NULL,\n  caption = \"letters by lm emmeans\") +\n  theme_bw() + scale_fill_manual(values = loc_colors) +\n  theme(legend.position = \"none\")\n\nCombine plots\n\n#Combine alpha diversity plots\n# library(ggplot2)\n# library(cowplot)\n\nytitle &lt;- ggdraw() + draw_label(\"Effective number of ASVs\",\n                                angle = 90, size = 14 )\nq012plot &lt;- plot_grid(q0plot, q1plot, q2plot,\n                      labels = c(\"A)\", \"\", \"\"), ncol = 1)\nq012y_plot &lt;- plot_grid(ytitle, q012plot, ncol = 2, rel_widths = c(0.05, 1))\n\n# show\nq012y_plot\n\n\n\n\n\n\n# save\nggsave(\"Figures/SurfaceComparison/alphadiv_per_loc.pdf\",\n       q012y_plot, width = 6.3, height = 9.9)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Alpha diversity"
    ]
  },
  {
    "objectID": "02.1.AlphaDiversity.html#load-libraries-and-prepare-data",
    "href": "02.1.AlphaDiversity.html#load-libraries-and-prepare-data",
    "title": "Alpha diversity",
    "section": "Load libraries and prepare data",
    "text": "Load libraries and prepare data\n\n#Load libraries\nlibrary(phyloseq)\nlibrary(hilldiv)\nlibrary(tidyverse)\nlibrary(ggpubr)\nlibrary(ggplot2)\nlibrary(cowplot)\nlibrary(vegan)\nlibrary(emmeans)\nlibrary(multcomp)\n\n\n#load data\nphyseq_qiime3 &lt;- readRDS(\"rds/compare_mangroves/physeq_qiime3.rds\")\n\n\n#Mangrove system colors\nloc_colors &lt;- c(\"Fossil Lagoon\"= \"#A7fcc1\",\n                \"San Pedro River\" = \"#26B170\",\n                \"T√©rminos Lagoon\" = \"#329D9C\",\n                \"Celest√∫n Lagoon\" = \"#41e8d3\")\n\n\n# Extract data from phyloseq object\n#library(phyloseq)\notu_data &lt;- otu_table(physeq_qiime3, taxa_are_rows = TRUE)\nmetadata &lt;- as(sample_data(physeq_qiime3), \"data.frame\")",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Alpha diversity"
    ]
  },
  {
    "objectID": "02.1.AlphaDiversity.html#save-rds-alpha-diversity-plot",
    "href": "02.1.AlphaDiversity.html#save-rds-alpha-diversity-plot",
    "title": "Alpha diversity",
    "section": "Save rds alpha diversity plot",
    "text": "Save rds alpha diversity plot\n\nsaveRDS(q012y_plot, \"rds/compare_mangroves/alpha_diversity_surface_plot.rds\")",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Alpha diversity"
    ]
  },
  {
    "objectID": "00.Presentation.html",
    "href": "00.Presentation.html",
    "title": "Unraveling microbial diversity from a fossil lagoon with an inland mangrove forest",
    "section": "",
    "text": "Website of microbial diversity analysis of the paper ‚Ä¶\n\n\n\nMangroves play a crucial role in ecological services like hurricane protection, carbon storage, and biodiversity support by harboring essential microbial communities for nutrient recycling and biogeochemical cycling. The microbial diversity of inland mangroves, particularly the relict mangroves of the San Pedro River from the last interglacial period, remains understudied. The study of these surviving mangrove systems offers insights into microbial dynamics and the identification of resilient microbiota with potential applications in mangrove restoration efforts. By exploring similarities and differences between coastal and inland mangroves, as well as degraded coastal mangroves, we aim to understand the unique qualities that make inland mangroves distinct while also identifying common elements shared by all mangrove ecosystems.\nIn this work we studied the microbial diversity associated with Rhizophora mangle of inland and coastal mangroves distributed on the Yucatan platform. Inland mangroves, distributed along the San Pedro Martir river, are 170 km away from the nearest estuary. Samples were taken from Laguna El Cacahuate (Fossil Lagoon), in the upper part of the river, near Guatemala, and from the Miguelito Dike and Reforma Waterfalls in the lower part of the river, in the state of Tabasco. While for coastal mangroves, public data were taken from isolated sediments in the T√©rminos Lagoon and the Celest√∫n Lagoon.",
    "crumbs": [
      "Presentation"
    ]
  },
  {
    "objectID": "02.3.Coremicrobiome.html",
    "href": "02.3.Coremicrobiome.html",
    "title": "Core microbiome",
    "section": "",
    "text": "# load libraries\nlibrary(phyloseq)\nlibrary(dplyr)\nlibrary(UpSetR)\n\n\n#load data\nphyseq_qiime3 &lt;- readRDS(\"rds/compare_mangroves/physeq_qiime3.rds\")\n\n\n# Rename mangrove system columna\ncolnames(sample_data(physeq_qiime3))[colnames(sample_data(physeq_qiime3)) == \"Mangrove system\"] &lt;- \"Mangrove_system\"\n\n# Convert Mangrove_system to factor\nsample_data(physeq_qiime3)$Mangrove_system &lt;- as.factor(sample_data(physeq_qiime3)$Mangrove_system)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "Surface mangroves sediments comparison",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Core microbiome"
    ]
  },
  {
    "objectID": "02.3.Coremicrobiome.html#load-libraries-and-prepare-data",
    "href": "02.3.Coremicrobiome.html#load-libraries-and-prepare-data",
    "title": "Core microbiome",
    "section": "",
    "text": "# load libraries\nlibrary(phyloseq)\nlibrary(dplyr)\nlibrary(UpSetR)\n\n\n#load data\nphyseq_qiime3 &lt;- readRDS(\"rds/compare_mangroves/physeq_qiime3.rds\")\n\n\n# Rename mangrove system columna\ncolnames(sample_data(physeq_qiime3))[colnames(sample_data(physeq_qiime3)) == \"Mangrove system\"] &lt;- \"Mangrove_system\"\n\n# Convert Mangrove_system to factor\nsample_data(physeq_qiime3)$Mangrove_system &lt;- as.factor(sample_data(physeq_qiime3)$Mangrove_system)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "Surface mangroves sediments comparison",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Core microbiome"
    ]
  },
  {
    "objectID": "02.3.Coremicrobiome.html#calculate-core",
    "href": "02.3.Coremicrobiome.html#calculate-core",
    "title": "Core microbiome",
    "section": "01. Calculate core",
    "text": "01. Calculate core\n\n# Prevalence threshold\nprevalence_threshold &lt;- 0.8\n\n# Storage ASVs core list\ncore_list &lt;- list()\nlocations &lt;- levels(sample_data(physeq_qiime3)$Mangrove_system)\n\n# Calculate core\nfor (loc in locations) {\n  # Filter samples by mangrove system\n  physeq_loc &lt;- prune_samples(sample_data(physeq_qiime3)$Mangrove_system == loc, physeq_qiime3)\n  n_samples_loc &lt;- nsamples(physeq_loc)\n\n  # Extract OTU table\n  otu &lt;- as(otu_table(physeq_loc), \"matrix\")\n\n  # Calc prevalence\n  prevalence &lt;- rowSums(otu &gt; 0) / n_samples_loc\n\n  # Identify ASVs with prevalence &gt;= umbral\n  core_taxa &lt;- names(prevalence)[prevalence &gt;= prevalence_threshold]\n\n  # Guardar en la lista\n  core_list[[loc]] &lt;- core_taxa\n}\n\n# Show ASVs core by mangrove system\nprint(lapply(core_list, length))\n\n$`Celest√∫n Lagoon`\n[1] 577\n\n$`Fossil Lagoon`\n[1] 745\n\n$`San Pedro River`\n[1] 781\n\n$`T√©rminos Lagoon`\n[1] 16\n\n# checkpoint,if empty try threshold = 1\nif (all(sapply(core_list, length) == 0)) {\n  cat(\"Try prevalence = 1...\\n\")\n  prevalence_threshold &lt;- 1.0\n  core_list &lt;- list()\n  for (loc in locations) {\n    physeq_loc &lt;- prune_samples(sample_data(physeq_qiime3)$Mangrove_system == loc, physeq_qiime3)\n    n_samples_loc &lt;- nsamples(physeq_loc)\n    otu &lt;- as(otu_table(physeq_loc), \"matrix\")\n    prevalence &lt;- rowSums(otu &gt; 0) / n_samples_loc\n    core_taxa &lt;- names(prevalence)[prevalence &gt;= prevalence_threshold]\n    core_list[[loc]] &lt;- core_taxa\n  }\n  print(lapply(core_list, length))\n}",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "Surface mangroves sediments comparison",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Core microbiome"
    ]
  },
  {
    "objectID": "02.2.BetaDiversity.html",
    "href": "02.2.BetaDiversity.html",
    "title": "Beta diversity",
    "section": "",
    "text": "Tip\n\n\n\nThe analysis of beta diversity was conducted using both NMDS and PERMANOVA to identify the factors that influenced the structure of the microbial community.",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Beta diversity"
    ]
  },
  {
    "objectID": "02.2.BetaDiversity.html#load-libraries-and-prepare-data",
    "href": "02.2.BetaDiversity.html#load-libraries-and-prepare-data",
    "title": "Beta diversity",
    "section": "Load libraries and prepare data",
    "text": "Load libraries and prepare data\n\n# load libraries\nlibrary(vegan)\nlibrary(phyloseq)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(pairwiseAdonis)\nlibrary(reshape2)\n\n\n#load data\nphyseq_qiime3 &lt;- readRDS(\"rds/compare_mangroves/physeq_qiime3.rds\")\n\n\n#Mangrove system colors\nloc_colors &lt;- c(\"Fossil Lagoon\"= \"#A7fcc1\",\n                \"San Pedro River\" = \"#26B170\",\n                \"T√©rminos Lagoon\" = \"#329D9C\",\n                \"Celest√∫n Lagoon\" = \"#41e8d3\")\n\n\n# Extract data from phyloseq object\n#library(phyloseq)\notu_data &lt;- otu_table(physeq_qiime3, taxa_are_rows = TRUE)\nmetadata &lt;- as(sample_data(physeq_qiime3), \"data.frame\")\n\nsample_data &lt;- data.frame(sample_data(physeq_qiime3))",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Beta diversity"
    ]
  },
  {
    "objectID": "02.2.BetaDiversity.html#nmds",
    "href": "02.2.BetaDiversity.html#nmds",
    "title": "Beta diversity",
    "section": "01. NMDS",
    "text": "01. NMDS\nGet distances and stress\n\n\n\n\n\n\nNote\n\n\n\nBray-Curtis dissimilarity distances are a measure of the dissimilarity between microbial communities based on their species composition.\n\n\n\n# library(vegan)\n# library(dplyr)\n# distances\nset.seed(123)\nbray=vegdist(t(otu_data), method = \"bray\")\nnmds_source_bray = vegan::metaMDS(bray, trymax = 20, k = 2)\n\nRun 0 stress 0.11 \nRun 1 stress 0.078 \n... New best solution\n... Procrustes: rmse 0.111  max resid 0.476 \nRun 2 stress 0.161 \nRun 3 stress 0.078 \n... Procrustes: rmse 4.1e-05  max resid 0.00012 \n... Similar to previous best\nRun 4 stress 0.11 \nRun 5 stress 0.133 \nRun 6 stress 0.11 \nRun 7 stress 0.078 \n... Procrustes: rmse 1.87e-05  max resid 6.06e-05 \n... Similar to previous best\nRun 8 stress 0.161 \nRun 9 stress 0.0782 \n... Procrustes: rmse 0.015  max resid 0.057 \nRun 10 stress 0.133 \nRun 11 stress 0.11 \nRun 12 stress 0.166 \nRun 13 stress 0.145 \nRun 14 stress 0.078 \n... Procrustes: rmse 4.39e-05  max resid 0.000144 \n... Similar to previous best\nRun 15 stress 0.0782 \n... Procrustes: rmse 0.015  max resid 0.0572 \nRun 16 stress 0.0782 \n... Procrustes: rmse 0.015  max resid 0.0571 \nRun 17 stress 0.155 \nRun 18 stress 0.0782 \n... Procrustes: rmse 0.015  max resid 0.0572 \nRun 19 stress 0.0782 \n... Procrustes: rmse 0.015  max resid 0.0571 \nRun 20 stress 0.078 \n... New best solution\n... Procrustes: rmse 4.37e-05  max resid 0.000133 \n... Similar to previous best\n*** Best solution repeated 1 times\n\n# stress\nvar_stress_nmds_bray &lt;- round(nmds_source_bray$stress, 5)\n\n# score\nscores_source_bray= nmds_source_bray %&gt;% vegan::scores()\n\nPlot\n\n# library(ggplot2)\n# library(tidyverse)\n\nnmds_plot_bray &lt;- ggplot() +\n  geom_point(data=data.frame(scores_source_bray) %&gt;%\n               rownames_to_column(var = \"SampleID\")%&gt;%\n               left_join(metadata, by = \"SampleID\"),\n             aes(x=NMDS1, y=NMDS2,  color = Mangrove.system, \n                 shape = Mangrove_type),\n             size=5) + theme_linedraw()+\n  scale_fill_manual(values = loc_colors)+\n  scale_color_manual(values = loc_colors)+\n  theme(axis.text = element_text(colour = \"black\", size = 12),\n        axis.title = element_text(colour = \"black\", size = 12),\n        legend.text = element_text(size = 10),\n        legend.title = element_text(size = 12),\n        legend.position = \"right\",\n        legend.box = \"vertical\")+ theme_bw() +\n  labs(title=\"Bray-Curtis distances\") +\n  ylab(\"NMDS2\")+xlab(\"NMDS1\")\n\n## stress legend\nnmds_plot_bray &lt;- nmds_plot_bray +\n  annotate(\"text\", x = Inf, y = -Inf,\n           label = paste(\"Stress:\", var_stress_nmds_bray),\n           hjust = 1.1, vjust = -1.1, size = 4)\n\n# show plot\nnmds_plot_bray",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Beta diversity"
    ]
  },
  {
    "objectID": "02.2.BetaDiversity.html#permanova",
    "href": "02.2.BetaDiversity.html#permanova",
    "title": "Beta diversity",
    "section": "02. PERMANOVA",
    "text": "02. PERMANOVA\n\n\n\n\n\n\nNote\n\n\n\nTo test the effects of Mangrove type and Mangrove system on the Bray-Curtis dissimilarity, a PERMANOVA analysis was conducted using adonis2.\n\n\n\n# Extract and transpose OTU table\notu_mat &lt;- t(otu_table(physeq_qiime3))\n\n# PERMANOVA with adonis2\nset.seed(123)\nadonis_result &lt;- adonis2(otu_mat ~ Mangrove_type * Mangrove.system,\n                         data = sample_data,\n                         method = \"bray\",\n                         permutations = 999,\n                         by = \"terms\")\n\n# show adonis result\nprint(adonis_result)\n\nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 999\n\nadonis2(formula = otu_mat ~ Mangrove_type * Mangrove.system, data = sample_data, permutations = 999, method = \"bray\", by = \"terms\")\n                Df SumOfSqs    R2     F Pr(&gt;F)    \nMangrove_type    1     1.77 0.283 11.60  0.001 ***\nMangrove.system  2     1.29 0.206  4.23  0.001 ***\nResidual        21     3.20 0.511                 \nTotal           24     6.25 1.000                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nPlot with PERMANOVA results\n\n#add to plot\nnmds_plot_bray_perm &lt;- nmds_plot_bray + annotate(\"text\", x = Inf, y = -Inf,\n           label = paste(\"PERMANOVA:\",\n                         \"Mangrove system: R¬≤ = 0.206, p = 0.001\\n\",\n                         \"Mangrove type: R¬≤ = 0.283, p = 0.001\\n\",\n                         \"Residual: R¬≤ = 0.511\"),\n           hjust = 1.1, vjust = -7, size = 4)\n\n# Mostrar el gr√°fico\nprint(nmds_plot_bray_perm)\n\n\n\n\n\n\n#save\nggsave(\"Figures/SurfaceComparison/beta-diversity.pdf\", nmds_plot_bray_perm, width = 7.3, height = 5.5)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Beta diversity"
    ]
  },
  {
    "objectID": "02.2.BetaDiversity.html#post-hoc-adonis",
    "href": "02.2.BetaDiversity.html#post-hoc-adonis",
    "title": "Beta diversity",
    "section": "03. Post-hoc adonis",
    "text": "03. Post-hoc adonis\n\n\n\n\n\n\nNote\n\n\n\nTo test differences between the Mangrove systems a Post-hoc pairwise PERMANOVA was conducted using pairwise.adonis\n\n\nPairwise adonis\n\n## Post-hoc Mangrove.system\n#library(pairwiseAdonis)\npairwise_adonis &lt;- pairwiseAdonis::pairwise.adonis2(otu_mat ~ \n                  Mangrove.system, data = sample_data, \n                  method = \"bray\",  permutations = 999)\n\nSet of permutations &lt; 'minperm'. Generating entire set.\n\nprint(pairwise_adonis)\n\n$parent_call\n[1] \"otu_mat ~ Mangrove.system , strata = Null , permutations 999\"\n\n$`San Pedro River_vs_Fossil Lagoon`\n         Df SumOfSqs    R2    F Pr(&gt;F)   \nModel     1    0.274 0.256 3.09  0.003 **\nResidual  9    0.798 0.744               \nTotal    10    1.071 1.000               \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$`San Pedro River_vs_Celest√∫n Lagoon`\n         Df SumOfSqs    R2    F Pr(&gt;F)    \nModel     1     1.39 0.378 9.73  0.001 ***\nResidual 16     2.28 0.622                \nTotal    17     3.67 1.000                \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$`San Pedro River_vs_T√©rminos Lagoon`\n         Df SumOfSqs    R2    F Pr(&gt;F)  \nModel     1     1.15 0.476 7.26  0.014 *\nResidual  8     1.26 0.524              \nTotal     9     2.41 1.000              \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$`Fossil Lagoon_vs_Celest√∫n Lagoon`\n         Df SumOfSqs    R2    F Pr(&gt;F)   \nModel     1     1.04 0.351 7.03  0.004 **\nResidual 13     1.93 0.649               \nTotal    14     2.98 1.000               \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$`Fossil Lagoon_vs_T√©rminos Lagoon`\n         Df SumOfSqs    R2    F Pr(&gt;F)  \nModel     1    1.005 0.523 5.48  0.035 *\nResidual  5    0.916 0.477              \nTotal     6    1.921 1.000              \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$`Celest√∫n Lagoon_vs_T√©rminos Lagoon`\n         Df SumOfSqs    R2    F Pr(&gt;F)   \nModel     1     1.01 0.297 5.07  0.003 **\nResidual 12     2.40 0.703               \nTotal    13     3.41 1.000               \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nattr(,\"class\")\n[1] \"pwadstrata\" \"list\"      \n\n\nP-values matrix\n\n# heatmap \n# library(ggplot2)\n# library(reshape2)\n\n#  p-values of pairwise_adonis\np_values &lt;- c(\n  \"San Pedro River_vs_Fossil Lagoon\" = 0.004,\n  \"San Pedro River_vs_Celest√∫n Lagoon\" = 0.001,\n  \"San Pedro River_vs_T√©rminos Lagoon\" = 0.007,\n  \"Fossil Lagoon_vs_Celest√∫n Lagoon\" = 0.001,\n  \"Fossil Lagoon_vs_T√©rminos Lagoon\" = 0.02,\n  \"Celest√∫n Lagoon_vs_T√©rminos Lagoon\" = 0.003\n)\n\n# matrix of p-values\nlocations &lt;- c(\"San Pedro River\", \"Fossil Lagoon\", \"Celest√∫n Lagoon\", \"T√©rminos Lagoon\")\np_matrix &lt;- matrix(NA, nrow = length(locations), ncol = length(locations),\n                   dimnames = list(locations, locations))\n\n# Fill matrix with p-values (only for the upper half then make symmetrical)\npairs &lt;- strsplit(names(p_values), \"_vs_\")\nfor (i in seq_along(pairs)) {\n  row_name &lt;- pairs[[i]][1]\n  col_name &lt;- pairs[[i]][2]\n  p_matrix[row_name, col_name] &lt;- p_values[i]\n  p_matrix[col_name, row_name] &lt;- p_values[i]  # symmetrical\n}\ndiag(p_matrix) &lt;- 1  # compare with itself\n\n# long format\np_melt &lt;- melt(p_matrix)\n\nHeatmap of adonis posthoc\n\n# heatmap\nheatmap_plot &lt;- ggplot(p_melt, aes(x = Var1, y = Var2, fill = value)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient2(low = \"blue\", mid = \"white\", high = \"red\",\n                       midpoint = 0.025, limits = c(0, 0.05),\n                       name = \"p-value\") +\n  geom_text(aes(label = sprintf(\"%.3f\", value)), color = \"black\", size = 3) +\n  theme_minimal() +\n  labs(title = \"Pairwise PERMANOVA post-hoc)\",\n       x = \"Mangrove system\", y = \"Mangrove system\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        axis.title = element_text(size = 12),\n        plot.title = element_text(size = 14))\n\n# Mostrar el gr√°fico\nprint(heatmap_plot)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Beta diversity"
    ]
  },
  {
    "objectID": "02.2.BetaDiversity.html#beta-disper",
    "href": "02.2.BetaDiversity.html#beta-disper",
    "title": "Beta diversity",
    "section": "04. Beta disper",
    "text": "04. Beta disper\n\n\n\n\n\n\nNote\n\n\n\nTo validate the dissimilarity of the data, and to determine whether the differences found are due to changes in composition or to variations in dispersion within groups, the homogeneity of the dispersions between Mangrove type and Mangrove system was calculated using betadisper. Subsequently, the significance of the differences in dispersion was calculated with permutest\n\n\n\n# library(vegan)\n# library(phyloseq)\n# Bray distance matrix\ndist_matrix &lt;- phyloseq::distance(physeq_qiime3, method = \"bray\")\n\nBy Mangrove system\n\n# betadisper\ndisp_location &lt;- betadisper(dist_matrix, sample_data$Mangrove.system)\nprint(summary(disp_location))\n\n                Length Class  Mode   \neig              24    -none- numeric\nvectors         600    -none- numeric\ndistances        25    -none- numeric\ngroup            25    factor numeric\ncentroids        96    -none- numeric\ngroup.distances   4    -none- numeric\ncall              3    -none- call   \n\n\nPermutest\n\n# Significance permutest\nperm_location &lt;- permutest(disp_location, permutations = 999)\nprint(perm_location)\n\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 999\n\nResponse: Distances\n          Df Sum Sq Mean Sq    F N.Perm Pr(&gt;F)  \nGroups     3  0.143  0.0476 4.55    999  0.022 *\nResiduals 21  0.220  0.0105                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# Plots\nplot(disp_location, main = \"Beta Dispersi√≥n por Mangrove system\")\n\n\n\n\n\n\nboxplot(disp_location, main = \"Distancias al centroide por Mangrove system\")\n\n\n\n\n\n\n\nBy Mangrove type\n\n# Betadisper Mangrove_type\ndisp_mangrove_type &lt;- betadisper(dist_matrix, sample_data$Mangrove_type)\nprint(summary(disp_mangrove_type))\n\n                Length Class  Mode   \neig              24    -none- numeric\nvectors         600    -none- numeric\ndistances        25    -none- numeric\ngroup            25    factor numeric\ncentroids        48    -none- numeric\ngroup.distances   2    -none- numeric\ncall              3    -none- call   \n\n# Significance permutest\nperm_mangrove_type &lt;- permutest(disp_mangrove_type, permutations = 999)\nprint(perm_mangrove_type)\n\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 999\n\nResponse: Distances\n          Df Sum Sq Mean Sq   F N.Perm Pr(&gt;F)  \nGroups     1  0.154  0.1537 7.2    999  0.014 *\nResiduals 23  0.491  0.0213                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# plots\nplot(disp_mangrove_type, main = \"Betadisper  Mangrove_type\")\n\n\n\n\n\n\nboxplot(disp_mangrove_type, main = \"Dist to centroid Mangrove_type\")",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Beta diversity"
    ]
  },
  {
    "objectID": "02.2.BetaDiversity.html#save-rds-beta-diversity-plot",
    "href": "02.2.BetaDiversity.html#save-rds-beta-diversity-plot",
    "title": "Beta diversity",
    "section": "Save rds beta diversity plot",
    "text": "Save rds beta diversity plot\n\nsaveRDS(nmds_plot_bray_perm, \"rds/compare_mangroves/beta-diversity-surface-plot.rds\")",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Beta diversity"
    ]
  },
  {
    "objectID": "02.3.Coremicrobiome.html#extract-core-info",
    "href": "02.3.Coremicrobiome.html#extract-core-info",
    "title": "Core microbiome",
    "section": "02. Extract core info",
    "text": "02. Extract core info\n\n# Unique core ASV list\nall_core_asvs &lt;- unique(unlist(core_list))\n\n# Create matrix presence/absence\ncore_matrix &lt;- matrix(0, nrow = length(all_core_asvs), ncol = length(locations),\n                      dimnames = list(all_core_asvs, locations))\n\n# fill matrix: \nfor (loc in locations) {\n  core_matrix[core_list[[loc]], loc] &lt;- 1\n}\n\n# Convert to data frame to UpSetR\ncore_df &lt;- as.data.frame(core_matrix)\n\n# Create intersection list\nqueries_list &lt;- list()",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "Surface mangroves sediments comparison",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Core microbiome"
    ]
  },
  {
    "objectID": "02.3.Coremicrobiome.html#plot-aesthetics",
    "href": "02.3.Coremicrobiome.html#plot-aesthetics",
    "title": "Core microbiome",
    "section": "03. plot aesthetics",
    "text": "03. plot aesthetics\n\n#library(UpSetR)\n# Fossil Lagoon\nqueries_list &lt;- append(queries_list, list(\n  list(query = intersects, params = list(\"Fossil Lagoon\"), color = \"#A7FCC1\",\n       active = TRUE, query.name = \"Fossil Lagoon\")\n))\n\n# San Pedro River\nqueries_list &lt;- append(queries_list, list(\n  list(query = intersects, params = list(\"San Pedro River\"), color = \"#26B170\",\n       active = TRUE, query.name = \"San Pedro River\")\n))\n\n# Terminos Lagoon\nqueries_list &lt;- append(queries_list, list(\n  list(query = intersects, params = list(\"T√©rminos Lagoon\"), color = \"#329D9C\",\n       active = TRUE, query.name = \"T√©rminos Lagoon\")\n))\n\n# Celest√∫n\nqueries_list &lt;- append(queries_list, list(\n  list(query = intersects, params = list(\"Celest√∫n Lagoon\"), color = \"#41E8D3\",\n       active = TRUE, query.name = \"Celest√∫n Lagoon\")\n))\n\n# Core\nqueries_list &lt;- append(queries_list, list(\n  list(query = intersects, params = list(\"Fossil Lagoon\", \n                                         \"San Pedro River\",\n                                         \"T√©rminos Lagoon\",\n                                         \"Celest√∫n Lagoon\"),\n       color = \"#8D3CA3\", active = TRUE, query.name = \"Core\")))\n\n# Interior\nqueries_list &lt;- append(queries_list, list(\n  list(query = intersects, params = list(\"Fossil Lagoon\", \"San Pedro River\"),\n       color = \"#356E48\", active = TRUE, query.name = \"Interior\")\n))\n\n## Note: due to the fact that there were no unique asvs for coastal, it was not integrated in this selection.",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "Surface mangroves sediments comparison",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Core microbiome"
    ]
  },
  {
    "objectID": "02.3.Coremicrobiome.html#upset-plot",
    "href": "02.3.Coremicrobiome.html#upset-plot",
    "title": "Core microbiome",
    "section": "04. UpSet plot",
    "text": "04. UpSet plot\n\n#library(UpSetR)\nupset_plot &lt;- upset(core_df,\n                    sets = colnames(core_df),\n                    order.by = \"freq\",\n                    mainbar.y.label = \"Shared ASVs\",\n                    sets.x.label = \"ASVs per Site\",\n                    text.scale = 1.5,\n                    point.size = 4,\n                    line.size = 1.5,\n                    query.legend = \"bottom\",\n                    sets.bar.color = \n                      c(\"#26B170\",\"#A7FCC1\",\"#41E8D3\",\"#329D9C\"),\n                    queries = queries_list)\n\n# show\nprint(upset_plot)\n\n\n\n\n\n\n\nsave plot\n\npdf(\"Figures/SurfaceComparison/core_upset.pdf\", width = 5.8, height = 4)\nupset_plot\ndev.off()\n\nquartz_off_screen \n                2",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "Surface mangroves sediments comparison",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Core microbiome"
    ]
  },
  {
    "objectID": "02.3.Coremicrobiome.html#get-unique-and-core-asv-info",
    "href": "02.3.Coremicrobiome.html#get-unique-and-core-asv-info",
    "title": "Core microbiome",
    "section": "05. Get unique and core ASV info",
    "text": "05. Get unique and core ASV info\n\n### get unique ASVs per mangrove system\nunique_asvs &lt;- list()\nfor (loc in colnames(core_df)) {\n  unique_asvs[[loc]] &lt;- rownames(core_df)[rowSums(core_df == 1) == 1 & core_df[[loc]] == 1]\n  cat(loc, \": Unique ASVs:\", length(unique_asvs[[loc]]), \"\\n\")\n  print(head(unique_asvs[[loc]], 5))  # Show first 5\n}\n\nCelest√∫n Lagoon : Unique ASVs: 186 \n[1] \"KU578729.1.1383\" \"JF344529.1.1525\" \"JN483938.1.1414\" \"HE804536.1.1436\"\n[5] \"DQ811792.1.1512\"\nFossil Lagoon : Unique ASVs: 270 \n[1] \"FN398053.1.1489\" \"FR667789.1.1446\" \"EU385876.1.1464\" \"EU487871.1.1472\"\n[5] \"JQ989640.1.1399\"\nSan Pedro River : Unique ASVs: 256 \n[1] \"KY618740.1.1206\" \"EU592483.1.1535\" \"LN567307.1.1331\" \"DQ363844.1.926\" \n[5] \"HM598151.1.1526\"\nT√©rminos Lagoon : Unique ASVs: 1 \n[1] \"EU487913.1.1482\"\n\n#unique_asvs\n\n\n# Verify taxonomy\nif (!is.null(tax_table(physeq_qiime3))) {\n  tax_table_df &lt;- as.data.frame(tax_table(physeq_qiime3))\n\n  # Get taxonomy function\n  get_taxonomy &lt;- function(asv_list) {\n    if (length(asv_list) &gt; 0) {\n      taxonomy &lt;- tax_table_df[asv_list, , drop = FALSE]\n      return(taxonomy)\n    } else {\n      return(NULL)\n    }\n  }\n\n  # Get taxonomy\n  taxonomy_unique &lt;- lapply(unique_asvs, get_taxonomy)\n\n  # show first 5  unique ASVs\n  for (loc in names(taxonomy_unique)) {\n    cat(\"\\nFirst unique ASVs taxonomy\", loc, \":\\n\")\n    if (!is.null(taxonomy_unique[[loc]])) {\n      print(head(taxonomy_unique[[loc]], 5))\n    } else {\n      cat(\"There are no unique ASV to\", loc, \"\\n\")\n    }\n  }\n} else {\n  cat(\"Please import taxonomy.\\n\")\n}\n\n\nFirst unique ASVs taxonomy Celest√∫n Lagoon :\n                    Kingdom                       Phylum\nKU578729.1.1383 d__Bacteria            Verrucomicrobiota\nJF344529.1.1525 d__Bacteria                      Sva0485\nJN483938.1.1414 d__Bacteria                 Bacteroidota\nHE804536.1.1436 d__Bacteria             Actinobacteriota\nDQ811792.1.1512 d__Bacteria SAR324_clade(Marine_group_B)\n                                       Class                        Order\nKU578729.1.1383                  Omnitrophia                Omnitrophales\nJF344529.1.1525                      Sva0485                      Sva0485\nJN483938.1.1414                  Bacteroidia                 Cytophagales\nHE804536.1.1436               Coriobacteriia                        OPB41\nDQ811792.1.1512 SAR324_clade(Marine_group_B) SAR324_clade(Marine_group_B)\n                                      Family                        Genus\nKU578729.1.1383               Omnitrophaceae       Candidatus_Omnitrophus\nJF344529.1.1525                      Sva0485                      Sva0485\nJN483938.1.1414            Cyclobacteriaceae                   uncultured\nHE804536.1.1436                        OPB41                        OPB41\nDQ811792.1.1512 SAR324_clade(Marine_group_B) SAR324_clade(Marine_group_B)\n                         Species\nKU578729.1.1383             &lt;NA&gt;\nJF344529.1.1525             &lt;NA&gt;\nJN483938.1.1414             &lt;NA&gt;\nHE804536.1.1436             &lt;NA&gt;\nDQ811792.1.1512 uncultured_delta\n\nFirst unique ASVs taxonomy Fossil Lagoon :\n                    Kingdom           Phylum               Class\nFN398053.1.1489 d__Bacteria   Proteobacteria Gammaproteobacteria\nFR667789.1.1446 d__Bacteria   Proteobacteria Alphaproteobacteria\nEU385876.1.1464 d__Bacteria   Proteobacteria Gammaproteobacteria\nEU487871.1.1472 d__Bacteria      Chloroflexi     Dehalococcoidia\nJQ989640.1.1399  d__Archaea Thermoplasmatota      Thermoplasmata\n                                             Order\nFN398053.1.1489                    Cellvibrionales\nFR667789.1.1446                      Micropepsales\nEU385876.1.1464              UBA10353_marine_group\nEU487871.1.1472                       Napoli-4B-65\nJQ989640.1.1399 Marine_Benthic_Group_D_and_DHVEG-1\n                                            Family\nFN398053.1.1489                         Halieaceae\nFR667789.1.1446                     Micropepsaceae\nEU385876.1.1464              UBA10353_marine_group\nEU487871.1.1472                       Napoli-4B-65\nJQ989640.1.1399 Marine_Benthic_Group_D_and_DHVEG-1\n                                             Genus              Species\nFN398053.1.1489                               &lt;NA&gt;                 &lt;NA&gt;\nFR667789.1.1446                     Micropepsaceae uncultured_bacterium\nEU385876.1.1464              UBA10353_marine_group uncultured_bacterium\nEU487871.1.1472                       Napoli-4B-65 uncultured_bacterium\nJQ989640.1.1399 Marine_Benthic_Group_D_and_DHVEG-1  uncultured_archaeon\n\nFirst unique ASVs taxonomy San Pedro River :\n                    Kingdom           Phylum               Class\nKY618740.1.1206 d__Bacteria       Firmicutes             Bacilli\nEU592483.1.1535 d__Bacteria Desulfobacterota     Desulfobacteria\nLN567307.1.1331 d__Bacteria   Proteobacteria Alphaproteobacteria\nDQ363844.1.926   d__Archaea Thermoplasmatota      Thermoplasmata\nHM598151.1.1526 d__Bacteria Desulfobacterota     Desulfobacteria\n                             Order              Family          Genus\nKY618740.1.1206         Bacillales         Bacillaceae       Bacillus\nEU592483.1.1535 Desulfatiglandales Desulfatiglandaceae Desulfatiglans\nLN567307.1.1331        Rhizobiales  Methyloligellaceae     uncultured\nDQ363844.1.926          uncultured          uncultured     uncultured\nHM598151.1.1526 Desulfatiglandales Desulfatiglandaceae Desulfatiglans\n                             Species\nKY618740.1.1206                 &lt;NA&gt;\nEU592483.1.1535 uncultured_bacterium\nLN567307.1.1331                 &lt;NA&gt;\nDQ363844.1.926   uncultured_archaeon\nHM598151.1.1526                 &lt;NA&gt;\n\nFirst unique ASVs taxonomy T√©rminos Lagoon :\n                    Kingdom      Phylum        Class          Order\nEU487913.1.1482 d__Bacteria Chloroflexi Anaerolineae Anaerolineales\n                         Family      Genus Species\nEU487913.1.1482 Anaerolineaceae uncultured    &lt;NA&gt;\n\n# Confirm the total number of unique ASVs\nlapply(taxonomy_unique, function(x) if (!is.null(x)) nrow(x) else 0)\n\n$`Celest√∫n Lagoon`\n[1] 186\n\n$`Fossil Lagoon`\n[1] 270\n\n$`San Pedro River`\n[1] 256\n\n$`T√©rminos Lagoon`\n[1] 1\n\n\nGet taxonomy\nPhylum level\n\n# Create a list to store unique asv to Phylum level\nphylum_unique &lt;- list()\n\n# Iterate on each Mangrove system\nfor (loc in names(taxonomy_unique)) {\n  if (!is.null(taxonomy_unique[[loc]])) {\n    # Extract taxonomy phylum\n    tax_df &lt;- taxonomy_unique[[loc]]\n    if (\"Phylum\" %in% colnames(tax_df)) {\n      phylum &lt;- tax_df$Phylum\n      phylum &lt;- phylum[!is.na(phylum)]  # Exclude NA\n      phylum_unique[[loc]] &lt;- unique(phylum)\n    } else {\n      cat(\"Phylum is not available to\", loc, \"\\n\")\n      phylum_unique[[loc]] &lt;- character(0)\n    }\n  } else {\n    phylum_unique[[loc]] &lt;- character(0)\n  }\n}\n\n# Identify exclusive phylum for Mangrove system\nall_phylums &lt;- unique(unlist(phylum_unique))\nphylum_exclusive &lt;- list()\nfor (loc in names(phylum_unique)) {\n  other_locations &lt;- setdiff(names(phylum_unique), loc)\n  other_phylum &lt;- unique(unlist(phylum_unique[other_locations]))\n  exclusive_phylum &lt;- setdiff(phylum_unique[[loc]], other_phylum)\n  phylum_exclusive[[loc]] &lt;- exclusive_phylum\n  cat(\"Exclusive phylum in\", loc, \":\", length(exclusive_phylum), \"\\n\")\n  if (length(exclusive_phylum) &gt; 0) {\n    print(exclusive_phylum)\n  } else {\n    cat(\"There are not exclusive phylum.\\n\")\n  }\n}\n\nExclusive phylum in Celest√∫n Lagoon : 5 \n[1] \"SAR324_clade(Marine_group_B)\" \"RCP2-54\"                     \n[3] \"Caldatribacteriota\"           \"CK-2C2-2\"                    \n[5] \"Nitrospinota\"                \nExclusive phylum in Fossil Lagoon : 12 \n [1] \"Patescibacteria\" \"Modulibacteria\"  \"Elusimicrobiota\" \"Halobacterota\"  \n [5] \"PAUC34f\"         \"Micrarchaeota\"   \"Hydrogenedentes\" \"LCP-89\"         \n [9] \"Cyanobacteria\"   \"Armatimonadota\"  \"Dependentiae\"    \"Acetothermia\"   \nExclusive phylum in San Pedro River : 3 \n[1] \"Dadabacteria\"     \"Abditibacteriota\" \"Sumerlaeota\"     \nExclusive phylum in T√©rminos Lagoon : 0 \nThere are not exclusive phylum.\n\n\nFamily level\n\n# Create a list to store unique asv to specific taxonomy level\nfamilies_unique &lt;- list()\n\n# Iterate on each Mangrove system\nfor (loc in names(taxonomy_unique)) {\n  if (!is.null(taxonomy_unique[[loc]])) {\n    # Extract taxonomy families\n    tax_df &lt;- taxonomy_unique[[loc]]\n    if (\"Family\" %in% colnames(tax_df)) {\n      families &lt;- tax_df$Family\n      families &lt;- families[!is.na(families)]  # Exclude NA\n      families_unique[[loc]] &lt;- unique(families)\n    } else {\n      cat(\"Family is not available to\", loc, \"\\n\")\n      families_unique[[loc]] &lt;- character(0)\n    }\n  } else {\n    families_unique[[loc]] &lt;- character(0)\n  }\n}\n\n# Identify exclusive family for Mangrove system\nall_families &lt;- unique(unlist(families_unique))\nfamilies_exclusive &lt;- list()\nfor (loc in names(families_unique)) {\n  other_locations &lt;- setdiff(names(families_unique), loc)\n  other_families &lt;- unique(unlist(families_unique[other_locations]))\n  exclusive_families &lt;- setdiff(families_unique[[loc]], other_families)\n  families_exclusive[[loc]] &lt;- exclusive_families\n  cat(\"Exclusive family in\", loc, \":\", length(exclusive_families), \"\\n\")\n  if (length(exclusive_families) &gt; 0) {\n    print(exclusive_families)\n  } else {\n    cat(\"There are not exclusive family.\\n\")\n  }\n}\n\nExclusive family in Celest√∫n Lagoon : 26 \n [1] \"OPB41\"                        \"SAR324_clade(Marine_group_B)\"\n [3] \"Hungateiclostridiaceae\"       \"MBAE14\"                      \n [5] \"RCP2-54\"                      \"Odinarchaeia\"                \n [7] \"Subgroup_9\"                   \"Nitrosomonadaceae\"           \n [9] \"EF100-94H03\"                  \"Desulfomonilaceae\"           \n[11] \"CCM11a\"                       \"FW22\"                        \n[13] \"JS1\"                          \"Microbulbiferaceae\"          \n[15] \"Ectothiorhodospiraceae\"       \"TG3\"                         \n[17] \"B2M28\"                        \"Caldilineaceae\"              \n[19] \"Nitrososphaeraceae\"           \"Subgroup_21\"                 \n[21] \"Gaiellaceae\"                  \"CK-2C2-2\"                    \n[23] \"Rhizobiales_Incertae_Sedis\"   \"Geothermarchaeaceae\"         \n[25] \"PS-B29\"                       \"P9X2b3D02\"                   \nExclusive family in Fossil Lagoon : 44 \n [1] \"Micropepsaceae\"          \"UBA10353_marine_group\"  \n [3] \"Bdellovibrionaceae\"      \"Gracilibacteria\"        \n [5] \"Moduliflexaceae\"         \"Lineage_IIc\"            \n [7] \"SM23-30\"                 \"Methanomicrobiaceae\"    \n [9] \"PAUC34f\"                 \"Nitrincolaceae\"         \n[11] \"MidBa8\"                  \"PAUC26f\"                \n[13] \"Bradymonadales\"          \"Solimonadaceae\"         \n[15] \"Simkaniaceae\"            \"67-14\"                  \n[17] \"vadinHA49\"               \"Micrarchaeales\"         \n[19] \"HOC36\"                   \"Melioribacteraceae\"     \n[21] \"Hydrogenedensaceae\"      \"Pla3_lineage\"           \n[23] \"LCP-89\"                  \"Rhodobacteraceae\"       \n[25] \"Micavibrionales\"         \"Desulfobacteraceae\"     \n[27] \"Pseudohongiellaceae\"     \"Nostocaceae\"            \n[29] \"VHS-B4-70\"               \"Dissulfuribacteraceae\"  \n[31] \"Run-SP154\"               \"Blastocatellaceae\"      \n[33] \"VHS-B3-70\"               \"Methylohalobiaceae\"     \n[35] \"SBYC\"                    \"Desulfovibrionaceae\"    \n[37] \"Vermiphilaceae\"          \"Kineosporiaceae\"        \n[39] \"Bacteroidetes_vadinHA17\" \"Syntrophobacteraceae\"   \n[41] \"Acetothermiia\"           \"Lentimicrobiaceae\"      \n[43] \"Haloadaptaceae\"          \"MD2894-B20\"             \nExclusive family in San Pedro River : 38 \n [1] \"Geopsychrobacteraceae\"  \"OM182_clade\"            \"Balneolaceae\"          \n [4] \"Subgroup_17\"            \"Sulfurovaceae\"          \"Dadabacteriales\"       \n [7] \"A4b\"                    \"Abditibacteriaceae\"     \"bacteriap25\"           \n[10] \"Marine_Benthic_Group_A\" \"t0.6.f\"                 \"Rhodospirillaceae\"     \n[13] \"Clostridiaceae\"         \"Thermoplasmata\"         \"Saccharospirillaceae\"  \n[16] \"Subgroup_2\"             \"DG-20\"                  \"Spongiibacteraceae\"    \n[19] \"Pla1_lineage\"           \"Desulfococcaceae\"       \"Thiomicrospiraceae\"    \n[22] \"Emcibacteraceae\"        \"Eel-36e1D6\"             \"Thermoplasmatota\"      \n[25] \"Sumerlaeaceae\"          \"KI89A_clade\"            \"PHOS-HE36\"             \n[28] \"Desulfurivibrionaceae\"  \"Planococcaceae\"         \"Hyphomonadaceae\"       \n[31] \"Colwelliaceae\"          \"SAR202_clade\"           \"Arcobacteraceae\"       \n[34] \"Thiotrichaceae\"         \"Myxococcaceae\"          \"C86\"                   \n[37] \"AB-539-J10\"             \"Bacteriovoracaceae\"    \nExclusive family in T√©rminos Lagoon : 0 \nThere are not exclusive family.\n\n\nGet core table\n\n# Combine taxonomy in data.frame\ntaxonomy_unique_df &lt;- do.call(rbind, lapply(names(taxonomy_unique), function(loc) {\n  if (!is.null(taxonomy_unique[[loc]])) {\n    df &lt;- taxonomy_unique[[loc]]\n    df$Location &lt;- loc\n    df$ASV &lt;- rownames(df)# add name asv column\n    return(df)\n  } else {\n    return(NULL)\n  }\n}))\n\n# Move columns\ntaxonomy_unique_df &lt;- taxonomy_unique_df[, c(\"ASV\", \"Location\", setdiff(names(taxonomy_unique_df), c(\"ASV\", \"Location\")))]\n\n# show first rows of data.frame to verify\nprint(head(taxonomy_unique_df))\n\n                            ASV        Location     Kingdom\nKU578729.1.1383 KU578729.1.1383 Celest√∫n Lagoon d__Bacteria\nJF344529.1.1525 JF344529.1.1525 Celest√∫n Lagoon d__Bacteria\nJN483938.1.1414 JN483938.1.1414 Celest√∫n Lagoon d__Bacteria\nHE804536.1.1436 HE804536.1.1436 Celest√∫n Lagoon d__Bacteria\nDQ811792.1.1512 DQ811792.1.1512 Celest√∫n Lagoon d__Bacteria\nAF354161.1.1421 AF354161.1.1421 Celest√∫n Lagoon d__Bacteria\n                                      Phylum                        Class\nKU578729.1.1383            Verrucomicrobiota                  Omnitrophia\nJF344529.1.1525                      Sva0485                      Sva0485\nJN483938.1.1414                 Bacteroidota                  Bacteroidia\nHE804536.1.1436             Actinobacteriota               Coriobacteriia\nDQ811792.1.1512 SAR324_clade(Marine_group_B) SAR324_clade(Marine_group_B)\nAF354161.1.1421                Calditrichota                 Calditrichia\n                                       Order                       Family\nKU578729.1.1383                Omnitrophales               Omnitrophaceae\nJF344529.1.1525                      Sva0485                      Sva0485\nJN483938.1.1414                 Cytophagales            Cyclobacteriaceae\nHE804536.1.1436                        OPB41                        OPB41\nDQ811792.1.1512 SAR324_clade(Marine_group_B) SAR324_clade(Marine_group_B)\nAF354161.1.1421               Calditrichales              Calditrichaceae\n                                       Genus          Species\nKU578729.1.1383       Candidatus_Omnitrophus             &lt;NA&gt;\nJF344529.1.1525                      Sva0485             &lt;NA&gt;\nJN483938.1.1414                   uncultured             &lt;NA&gt;\nHE804536.1.1436                        OPB41             &lt;NA&gt;\nDQ811792.1.1512 SAR324_clade(Marine_group_B) uncultured_delta\nAF354161.1.1421              Calditrichaceae             &lt;NA&gt;\n\n\n\n# save data.frame\nwrite.csv(taxonomy_unique_df, file = \"Tables/SurfaceComparison/unique_asvs_taxonomy.csv\", row.names = FALSE)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "Surface mangroves sediments comparison",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Core microbiome"
    ]
  },
  {
    "objectID": "02.3.Coremicrobiome.html#save-rds-core-plot",
    "href": "02.3.Coremicrobiome.html#save-rds-core-plot",
    "title": "Core microbiome",
    "section": "Save rds core plot",
    "text": "Save rds core plot\n\nsaveRDS(upset_plot, \"Figures/SurfaceComparison/upset_surface_plot.rds\")",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "Surface mangroves sediments comparison",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Core microbiome"
    ]
  },
  {
    "objectID": "02.5.Fig2.InteriorCoastalCompare.html",
    "href": "02.5.Fig2.InteriorCoastalCompare.html",
    "title": "Figure Interior and Coastal mangroves compare",
    "section": "",
    "text": "library(ggplot2)\nlibrary(cowplot)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Figure Interior and Coastal mangroves compare"
    ]
  },
  {
    "objectID": "02.5.Fig2.InteriorCoastalCompare.html#load-figures",
    "href": "02.5.Fig2.InteriorCoastalCompare.html#load-figures",
    "title": "Figure Interior and Coastal mangroves compare",
    "section": "Load figures",
    "text": "Load figures\n\nalpha &lt;- readRDS(\"rds/compare_mangroves/alpha_diversity_surface_plot.rds\")\n\nbeta &lt;- readRDS(\"rds/compare_mangroves/beta-diversity-surface-plot.rds\")\n\ncore &lt;- readRDS(\"rds/compare_mangroves/upset_surface_plot.rds\")\n\ndabar &lt;- readRDS(\"rds/compare_mangroves/DA_barplot_surface.rds\")\n\ndahm &lt;- readRDS(\"rds/compare_mangroves/DA_heatmap_surface.rds\")",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Figure Interior and Coastal mangroves compare"
    ]
  },
  {
    "objectID": "02.5.Fig2.InteriorCoastalCompare.html#combine-plots",
    "href": "02.5.Fig2.InteriorCoastalCompare.html#combine-plots",
    "title": "Figure Interior and Coastal mangroves compare",
    "section": "Combine plots",
    "text": "Combine plots\n\nbeta_core &lt;- plot_grid(beta, core, labels = c(\"B\", \"C)\"),\n                        ncol = 2, rel_widths = c(1, 1.1))\nbeta_core_da &lt;- plot_grid(beta_core, dabar, labels = c(\"\", \"D)\"),\n                        ncol = 1, rel_heights = c(0.8, 1))\nalpha_beta_core_da_2 &lt;- plot_grid(alpha, beta_core_da,\n                        ncol = 2, rel_widths = c(0.3, 0.9))\nalpha_beta_core_da_2\n\n\n\n\n\n\n\n\nggsave(\"Figures/SurfaceComparison/Fig2.SurfaceComparison_2.pdf\",\n       alpha_beta_core_da_2, width = 19, height = 12)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Figure Interior and Coastal mangroves compare"
    ]
  },
  {
    "objectID": "02.4.DifferentialAbundance.html",
    "href": "02.4.DifferentialAbundance.html",
    "title": "Differential Abundance",
    "section": "",
    "text": "# load libraries\nlibrary(phyloseq)\nlibrary(dplyr)\nlibrary(ANCOMBC)\nlibrary(tidyverse)\nlibrary(DT)\noptions(DT.options = list(\n  initComplete = JS(\"function(settings, json) {\",\n                    \"$(this.api().table().header()).css({'background-color':\n  '#000', 'color': '#fff'});\",\"}\")))\n\n\n#load data\nphyseq_qiime3 &lt;- readRDS(\"rds/compare_mangroves/physeq_qiime3.rds\")\n\n\n# Rename mangrove system columna\ncolnames(sample_data(physeq_qiime3))[colnames(sample_data(physeq_qiime3)) == \"Mangrove system\"] &lt;- \"Mangrove_system\"\n\n# Convert Mangrove_system to factor\nsample_data(physeq_qiime3)$Mangrove_system &lt;- as.factor(sample_data(physeq_qiime3)$Mangrove_system)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Differential Abundance"
    ]
  },
  {
    "objectID": "02.4.DifferentialAbundance.html#load-libraries-and-data",
    "href": "02.4.DifferentialAbundance.html#load-libraries-and-data",
    "title": "Differential Abundance",
    "section": "",
    "text": "# load libraries\nlibrary(phyloseq)\nlibrary(dplyr)\nlibrary(ANCOMBC)\nlibrary(tidyverse)\nlibrary(DT)\noptions(DT.options = list(\n  initComplete = JS(\"function(settings, json) {\",\n                    \"$(this.api().table().header()).css({'background-color':\n  '#000', 'color': '#fff'});\",\"}\")))\n\n\n#load data\nphyseq_qiime3 &lt;- readRDS(\"rds/compare_mangroves/physeq_qiime3.rds\")\n\n\n# Rename mangrove system columna\ncolnames(sample_data(physeq_qiime3))[colnames(sample_data(physeq_qiime3)) == \"Mangrove system\"] &lt;- \"Mangrove_system\"\n\n# Convert Mangrove_system to factor\nsample_data(physeq_qiime3)$Mangrove_system &lt;- as.factor(sample_data(physeq_qiime3)$Mangrove_system)",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Differential Abundance"
    ]
  },
  {
    "objectID": "02.4.DifferentialAbundance.html#differential-abundance-ancombc2",
    "href": "02.4.DifferentialAbundance.html#differential-abundance-ancombc2",
    "title": "Differential Abundance",
    "section": "01. Differential abundance ANCOMBC2",
    "text": "01. Differential abundance ANCOMBC2\n01.1 Prepare data\n\n# phyloseq to TreeSummarizedExperiment\ntse &lt;- mia::convertFromPhyloseq(physeq_qiime3)\n\n\n#To manually change the reference level, not alphabetic order\ntse$Mangrove_system = factor(tse$Mangrove_system, levels = c(\"Fossil Lagoon\", \"San Pedro River\", \"T√©rminos Lagoon\", \"Celest√∫n Lagoon\"))\n\n\n#conver to factor using letter levels\ntse$Mangrove_system &lt;- factor(recode\n                              (as.character(tse$Mangrove_system),\n                                    `Fossil Lagoon` = \"FL\",\n                                    `San Pedro River` = \"SPR\",\n                                    `T√©rminos Lagoon` = \"TL\",\n                                    `Celest√∫n Lagoon` = \"CL\",\n                                    .missing = \"unknown\"),\n                             levels = c(\"FL\", \"SPR\", \"TL\", \"CL\"))\n\n\n# contrast matrix\ncontrast_matrices &lt;- list(\n  matrix(c(1, -1, 0,\n           0, 1, -1,\n           0, 0, 1),\n         nrow = 3, byrow = TRUE),\n  matrix(c(1, 0, -1,\n           0, 1, -1,\n           0, 0, 1),\n         nrow = 3, byrow = TRUE),\n  matrix(c(1, 0, 0,\n           0, 1, -1,\n           0, 0, 1),\n         nrow = 3, byrow = TRUE),\n  matrix(c(1, -1, 0,\n           0, 1, 0,\n           0, 0, 1),\n         nrow = 3, byrow = TRUE))\n\n# nodes\nnodes &lt;- list(1, 1, 1, 1)\n\n01.2 Run ANCOM-BC2\n\n# ANCOMBC2\noutput &lt;- ancombc2(\n  data = tse,\n  assay_name = \"counts\",\n  tax_level = \"Phylum\",\n  fix_formula = \"Mangrove_system\",\n  rand_formula = NULL,\n  p_adj_method = \"BH\",\n  pseudo_sens = TRUE,\n  prv_cut = 0.10,\n  lib_cut = 1000,\n  s0_perc = 0.05,\n  group = \"Mangrove_system\",\n  struc_zero = TRUE,\n  neg_lb = TRUE,\n  alpha = 0.05,\n  n_cl = 2,\n  verbose = TRUE,\n  global = TRUE,\n  pairwise = TRUE,\n  dunnet = TRUE,\n  trend = TRUE,\n  iter_control = list(tol = 1e-2, max_iter = 20, verbose = TRUE),\n  em_control = list(tol = 1e-5, max_iter = 100),\n  lme_control = lme4::lmerControl(),\n  mdfdr_control = list(fwer_ctrl_method = \"BH\", B = 100),\n  trend_control = list(\n    contrast = contrast_matrices,\n    node = nodes,\n    solver = \"ECOS\",\n    B = 100\n  )\n)\n\nChecking the input data type ...\n\n\nThe input data is of type: TreeSummarizedExperiment\n\n\nPASS\n\n\nChecking the sample metadata ...\n\n\nThe specified variables in the formula: Mangrove_system\n\n\nThe available variables in the sample metadata: SampleID, BioSample, ID, SRA, SampleName, Collection_date, depth, site, elevation, Broad_scale_environmental_context, Local_scale_environmental_context, Environmental_medium, Latitude_and_Longitude, Geographic.Location, Study_zone, Ecological_type, Parametros, Temperatura, Salinidad, pH, Redox.mV, S.2, SO4, season, filter, Mangrove_system, Mangrove_type\n\n\nPASS\n\n\nChecking other arguments ...\n\n\nThe number of groups of interest is: 4\n\n\nThe sample size per group is: FL = 4, SPR = 7, TL = 3, CL = 11\n\n\nWarning: Small sample size detected for the following group(s): \nFL, TL\nVariance estimation would be unstable when the sample size is &lt; 5 per group\n\n\nPASS\n\n\nObtaining initial estimates ...\n\n\nML iteration = 1, epsilon = 1.1\n\n\nML iteration = 2, epsilon = 7.1\n\n\nML iteration = 3, epsilon = 0.92\n\n\nML iteration = 4, epsilon = 0.31\n\n\nML iteration = 5, epsilon = 0.19\n\n\nML iteration = 6, epsilon = 0.13\n\n\nML iteration = 7, epsilon = 0.083\n\n\nML iteration = 8, epsilon = 0.055\n\n\nML iteration = 9, epsilon = 0.036\n\n\nML iteration = 10, epsilon = 0.024\n\n\nML iteration = 11, epsilon = 0.016\n\n\nML iteration = 12, epsilon = 0.011\n\n\nML iteration = 13, epsilon = 0.007\n\n\nEstimating sample-specific biases ...\n\n\nConducting sensitivity analysis for pseudo-count addition to 0s ...\nFor taxa that are significant but do not pass the sensitivity analysis,\nplease flag them and proceed with caution, as they are likely false positives.\nFor detailed instructions on performing sensitivity analysis,\nplease refer to the package vignette.\n\n\nANCOM-BC2 primary results ...\n\n\nANCOM-BC2 global test ...\n\n\nANCOM-BC2 multiple pairwise comparisons ...\n\n\nANCOM-BC2 multiple pairwise comparisons against the reference group ...\n\n\nANCOM-BC2 pattern analysis ...\n\n\n\n#See results\nres_pair_Mangrove_system &lt;- output$res_pair\n\nhead(res_pair_Mangrove_system)\n\n             taxon lfc_Mangrove_systemSPR lfc_Mangrove_systemTL\n1  Acidobacteriota               -0.26768                 -3.39\n2 Actinobacteriota               -0.23213                 -3.71\n3  Asgardarchaeota                0.26584                 -3.47\n4     Bacteroidota               -0.48731                 -4.52\n5    Calditrichota               -0.16945                 -2.37\n6 Campilobacterota                0.00556                 -2.60\n  lfc_Mangrove_systemCL lfc_Mangrove_systemTL_Mangrove_systemSPR\n1                -0.490                                    -3.13\n2                -0.626                                    -3.47\n3                -0.589                                    -3.74\n4                -0.942                                    -4.03\n5                -0.264                                    -2.20\n6                -1.794                                    -2.61\n  lfc_Mangrove_systemCL_Mangrove_systemSPR\n1                                  -0.2225\n2                                  -0.3937\n3                                  -0.8550\n4                                  -0.4543\n5                                  -0.0946\n6                                  -1.7995\n  lfc_Mangrove_systemCL_Mangrove_systemTL se_Mangrove_systemSPR\n1                                   2.904                 0.158\n2                                   3.080                 0.133\n3                                   2.882                 0.311\n4                                   3.580                 0.139\n5                                   2.110                 0.223\n6                                   0.806                 0.370\n  se_Mangrove_systemTL se_Mangrove_systemCL\n1                0.268                0.166\n2                0.898                0.195\n3                0.380                0.434\n4                0.921                0.209\n5                0.283                0.245\n6                0.449                0.469\n  se_Mangrove_systemTL_Mangrove_systemSPR\n1                                   0.292\n2                                   0.903\n3                                   0.298\n4                                   0.924\n5                                   0.295\n6                                   0.323\n  se_Mangrove_systemCL_Mangrove_systemSPR\n1                                   0.203\n2                                   0.217\n3                                   0.405\n4                                   0.220\n5                                   0.258\n6                                   0.431\n  se_Mangrove_systemCL_Mangrove_systemTL W_Mangrove_systemSPR\n1                                  0.297               -1.699\n2                                  0.914               -1.743\n3                                  0.435                0.856\n4                                  0.937               -3.500\n5                                  0.311               -0.759\n6                                  0.452                0.015\n  W_Mangrove_systemTL W_Mangrove_systemCL\n1              -12.68               -2.96\n2               -4.13               -3.20\n3               -9.13               -1.36\n4               -4.91               -4.50\n5               -8.39               -1.08\n6               -5.80               -3.82\n  W_Mangrove_systemTL_Mangrove_systemSPR W_Mangrove_systemCL_Mangrove_systemSPR\n1                                 -10.69                                 -1.094\n2                                  -3.85                                 -1.812\n3                                 -12.56                                 -2.112\n4                                  -4.37                                 -2.065\n5                                  -7.48                                 -0.366\n6                                  -8.07                                 -4.179\n  W_Mangrove_systemCL_Mangrove_systemTL p_Mangrove_systemSPR\n1                                  9.78              0.10412\n2                                  3.37              0.09592\n3                                  6.62              0.40222\n4                                  3.82              0.00213\n5                                  6.78              0.45646\n6                                  1.78              0.98818\n  p_Mangrove_systemTL p_Mangrove_systemCL\n1            2.61e-11            0.007550\n2            4.81e-04            0.004254\n3            1.42e-08            0.189976\n4            7.44e-05            0.000196\n5            3.81e-08            0.293187\n6            1.39e-05            0.001144\n  p_Mangrove_systemTL_Mangrove_systemSPR p_Mangrove_systemCL_Mangrove_systemSPR\n1                               5.93e-10                               0.286427\n2                               9.40e-04                               0.084249\n3                               6.07e-11                               0.047481\n4                               2.70e-04                               0.051516\n5                               2.37e-07                               0.717960\n6                               1.47e-07                               0.000509\n  p_Mangrove_systemCL_Mangrove_systemTL q_Mangrove_systemSPR\n1                              2.86e-09              0.13119\n2                              2.91e-03              0.10071\n3                              1.89e-06              0.42233\n4                              9.95e-04              0.00269\n5                              1.06e-06              0.57514\n6                              9.06e-02              1.00000\n  q_Mangrove_systemTL q_Mangrove_systemCL\n1            1.65e-10            0.011892\n2            2.96e-03            0.006700\n3            4.46e-08            0.239369\n4            4.69e-04            0.000567\n5            2.40e-07            0.461769\n6            4.37e-05            0.001801\n  q_Mangrove_systemTL_Mangrove_systemSPR q_Mangrove_systemCL_Mangrove_systemSPR\n1                               1.87e-09                                0.30075\n2                               2.96e-03                                0.10071\n3                               3.82e-10                                0.07478\n4                               5.67e-04                                0.05409\n5                               7.48e-07                                0.75386\n6                               9.26e-07                                0.00107\n  q_Mangrove_systemCL_Mangrove_systemTL diff_Mangrove_systemSPR\n1                              6.01e-09                   FALSE\n2                              6.11e-03                   FALSE\n3                              3.97e-06                   FALSE\n4                              1.57e-03                    TRUE\n5                              2.22e-06                   FALSE\n6                              1.14e-01                   FALSE\n  diff_Mangrove_systemTL diff_Mangrove_systemCL\n1                   TRUE                   TRUE\n2                   TRUE                   TRUE\n3                   TRUE                  FALSE\n4                   TRUE                   TRUE\n5                   TRUE                  FALSE\n6                   TRUE                   TRUE\n  diff_Mangrove_systemTL_Mangrove_systemSPR\n1                                      TRUE\n2                                      TRUE\n3                                      TRUE\n4                                      TRUE\n5                                      TRUE\n6                                      TRUE\n  diff_Mangrove_systemCL_Mangrove_systemSPR\n1                                     FALSE\n2                                     FALSE\n3                                     FALSE\n4                                     FALSE\n5                                     FALSE\n6                                      TRUE\n  diff_Mangrove_systemCL_Mangrove_systemTL passed_ss_Mangrove_systemSPR\n1                                     TRUE                         TRUE\n2                                     TRUE                         TRUE\n3                                     TRUE                         TRUE\n4                                     TRUE                        FALSE\n5                                     TRUE                         TRUE\n6                                    FALSE                         TRUE\n  passed_ss_Mangrove_systemTL passed_ss_Mangrove_systemCL\n1                        TRUE                        TRUE\n2                        TRUE                       FALSE\n3                        TRUE                        TRUE\n4                        TRUE                        TRUE\n5                        TRUE                        TRUE\n6                        TRUE                       FALSE\n  passed_ss_Mangrove_systemTL_Mangrove_systemSPR\n1                                           TRUE\n2                                           TRUE\n3                                           TRUE\n4                                           TRUE\n5                                           TRUE\n6                                           TRUE\n  passed_ss_Mangrove_systemCL_Mangrove_systemSPR\n1                                           TRUE\n2                                           TRUE\n3                                          FALSE\n4                                           TRUE\n5                                           TRUE\n6                                           TRUE\n  passed_ss_Mangrove_systemCL_Mangrove_systemTL\n1                                          TRUE\n2                                          TRUE\n3                                          TRUE\n4                                          TRUE\n5                                          TRUE\n6                                          TRUE",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Differential Abundance"
    ]
  },
  {
    "objectID": "02.4.DifferentialAbundance.html#get-differential-data",
    "href": "02.4.DifferentialAbundance.html#get-differential-data",
    "title": "Differential Abundance",
    "section": "02. Get differential data",
    "text": "02. Get differential data\n\n# Create dataframe df_fig_pair1 to log-fold change (LFC) values\ndf_fig_pair1_Mangrove_system &lt;- res_pair_Mangrove_system %&gt;%\n  dplyr::filter(`diff_Mangrove_systemSPR` == 1 |\n                `diff_Mangrove_systemTL` == 1 |\n                `diff_Mangrove_systemCL` == 1 |\n                `diff_Mangrove_systemTL_Mangrove_systemSPR` == 1 |\n                `diff_Mangrove_systemCL_Mangrove_systemSPR` == 1 |\n                `diff_Mangrove_systemCL_Mangrove_systemTL` == 1) %&gt;%\n  dplyr::mutate(lfc1 = ifelse(`diff_Mangrove_systemSPR` == 1, \n                      round(`lfc_Mangrove_systemSPR`, 2), NA),\n                lfc2 = ifelse(`diff_Mangrove_systemTL` == 1, \n                      round(`lfc_Mangrove_systemTL`, 2), NA),\n                lfc3 = ifelse(`diff_Mangrove_systemCL` == 1, \n                      round(`lfc_Mangrove_systemCL`, 2), NA),\n                lfc4 = ifelse(`diff_Mangrove_systemTL_Mangrove_systemSPR` == 1, \n                      round(`lfc_Mangrove_systemTL_Mangrove_systemSPR`, 2), NA),\n                lfc5 = ifelse(`diff_Mangrove_systemCL_Mangrove_systemSPR` == 1, \n                      round(`lfc_Mangrove_systemCL_Mangrove_systemSPR`, 2), NA),\n                lfc6 = ifelse(`diff_Mangrove_systemCL_Mangrove_systemTL` == 1, \n                      round(`lfc_Mangrove_systemCL_Mangrove_systemTL`, 2), NA),\n                ) %&gt;% tidyr::pivot_longer(cols = lfc1:lfc6, names_to = \"group\", \n                          values_to = \"value\") %&gt;% dplyr::arrange(taxon)\n\n\n# Create dataframe df_fig_pair2 to significant values\ndf_fig_pair2_Mangrove_system &lt;- res_pair_Mangrove_system %&gt;%\n  dplyr::filter(`diff_Mangrove_systemSPR` == 1 |\n                `diff_Mangrove_systemTL` == 1 |\n                `diff_Mangrove_systemCL` == 1 |\n                `diff_Mangrove_systemTL_Mangrove_systemSPR` == 1 |\n                `diff_Mangrove_systemCL_Mangrove_systemSPR` == 1 |\n                `diff_Mangrove_systemCL_Mangrove_systemTL` == 1) %&gt;%\n   dplyr::mutate(lfc1 = ifelse(`passed_ss_Mangrove_systemSPR` == 1 & \n                `diff_Mangrove_systemSPR` == 1, \"blue\", \"black\"),\n                lfc2 = ifelse(`passed_ss_Mangrove_systemTL` == 1 & \n                `diff_Mangrove_systemTL` == 1, \"#00CCFF\", \"black\"),\n                lfc3 = ifelse(`passed_ss_Mangrove_systemCL` == 1 &\n                `diff_Mangrove_systemCL` == 1, \"#00CCFF\", \"black\"),\n                lfc4 = ifelse(`passed_ss_Mangrove_systemTL_Mangrove_systemSPR` == 1 &\n                `diff_Mangrove_systemTL_Mangrove_systemSPR` == 1, \"#00CCFF\", \"black\"),\n                lfc5 = ifelse(`passed_ss_Mangrove_systemCL_Mangrove_systemSPR` == 1 &\n                `diff_Mangrove_systemCL_Mangrove_systemSPR` == 1, \"#00CCFF\", \"black\"),\n                lfc6 = ifelse(`passed_ss_Mangrove_systemCL_Mangrove_systemTL` == 1 &\n                `diff_Mangrove_systemCL_Mangrove_systemTL` == 1, \"#00CCFF\", \"black\")) %&gt;% \n  tidyr::pivot_longer(cols = lfc1:lfc6, names_to = \"group\", values_to = \"color\") %&gt;% dplyr::arrange(taxon)\n\n\n# Combine dataframes df_fig_pair1 and df_fig_pair2\ndf_fig_pair_Mangrove_system &lt;- df_fig_pair1_Mangrove_system %&gt;%\n  dplyr::left_join(df_fig_pair2_Mangrove_system, by = c(\"taxon\", \"group\"))\n\n# Rename groups\ndf_fig_pair_Mangrove_system$group &lt;- recode(df_fig_pair_Mangrove_system$group,\n                                     `lfc1` = \"SPR vs FL\",\n                                     `lfc2` = \"TL vs FL\",\n                                     `lfc3` = \"CL vs FL\",\n                                     `lfc4` = \"TL vs SPR\",\n                                     `lfc5` = \"CL vs SPR\",\n                                     `lfc6` = \"CL vs TL\")\n\ndf_fig_pair_Mangrove_system$group &lt;- factor(df_fig_pair_Mangrove_system$group,\n                                     levels = c(\"SPR vs FL\",\n                                                \"TL vs FL\",\n                                                \"CL vs FL\",\n                                                \"TL vs SPR\",\n                                                \"CL vs SPR\",\n                                                \"CL vs TL\"))\n\n# Filter comparisons without significant values\ndf_fig_pair_Mangrove_system &lt;- df_fig_pair_Mangrove_system %&gt;%\n  group_by(group) %&gt;%\n  filter(any(!is.na(value))) %&gt;%\n  ungroup()\n\n# Calculate limits\nlo &lt;- floor(min(df_fig_pair_Mangrove_system$value, na.rm = TRUE))\nup &lt;- ceiling(max(df_fig_pair_Mangrove_system$value, na.rm = TRUE))\nmid &lt;- (lo + up) / 2",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Differential Abundance"
    ]
  },
  {
    "objectID": "02.4.DifferentialAbundance.html#plot",
    "href": "02.4.DifferentialAbundance.html#plot",
    "title": "Differential Abundance",
    "section": "03. Plot",
    "text": "03. Plot\n\n# heatmap\nheatmap_fig_pair_Mangrove_system &lt;- df_fig_pair_Mangrove_system %&gt;%\n  ggplot(aes(x = group, y = taxon, fill = value)) +\n  geom_tile(color = \"black\") +\n  scale_fill_gradient2(low = \"#37474FFF\", high = \"#907c9BFf\", mid = \"#bFD8DCFF\", #a71a50\n                       na.value = \"white\", midpoint = mid, limit = c(lo, up),\n                       name = \"LFC\") +\n # geom_text(aes(label = round(value, 2), color = color), size = 5, na.rm = TRUE) +\n  scale_color_identity(guide = FALSE) +\n  labs(x = NULL, y = NULL, title = \"LFC between Mangrove system comparison\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, size = 11),\n        axis.text.y = element_text(size = 9),\n        axis.text.x = element_text(size = 8.5, angle = 45, hjust = 0.8))\n\n# show\nprint(heatmap_fig_pair_Mangrove_system)\n\nWarning: The `guide` argument in `scale_*()` cannot be `FALSE`. This was deprecated in\nggplot2 3.3.4.\n‚Ñπ Please use \"none\" instead.\n\n\n\n\n\n\n\n\n\n# DA barplot\nlibrary(paletteer)\nda_barplot &lt;- df_fig_pair_Mangrove_system %&gt;%\n  ggplot(aes(x = taxon, y = value, fill = group, label = round(value, 2))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  scale_fill_paletteer_d(\"ggsci::blue_grey_material\") + #\"rcartocolor::Purp\"\n  # scale_fill_manual(values = c(\"SPR vs FL\" = \"orange\",\n  #                              \"TL vs FL\" = \"#a71b40\",\n  #                              \"CL vs FL\" = \"yellow3\",\n  #                              \"TL vs SPR\" = \"gray50\",\n  #                              \"CL vs SPR\" = \"#af4b91\",\n  #                              \"CL vs TL\" = \"#466eb4\")) +\n  labs(title = \"Differential Abundance by Mangrove system\",\n       x = \"Phylum\",\n       y = \"Log-Fold Change\",\n       fill = \"Comparison\") +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),\n        axis.text.y = element_text(size = 8),\n        plot.title = element_text(size = 12),\n        axis.title.x = element_text(size = 9),              \n        axis.title.y = element_text(size = 9),            \n        legend.title = element_text(size = 9))\n\n#show\nda_barplot",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Differential Abundance"
    ]
  },
  {
    "objectID": "02.4.DifferentialAbundance.html#save-rds-plot",
    "href": "02.4.DifferentialAbundance.html#save-rds-plot",
    "title": "Differential Abundance",
    "section": "Save rds plot",
    "text": "Save rds plot\n\nsaveRDS(heatmap_fig_pair_Mangrove_system, \"rds/compare_mangroves/DA_heatmap_surface.rds\")\nsaveRDS(da_barplot, \"rds/compare_mangroves/DA_barplot_surface.rds\")",
    "crumbs": [
      "Interior and coastal mangroves compare",
      "How similar are coastal and inland mangroves?",
      "Analysis",
      "Differential Abundance"
    ]
  }
]